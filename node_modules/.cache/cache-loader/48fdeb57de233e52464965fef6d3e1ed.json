{"remainingRequest":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\element-ui\\lib\\utils\\popper.js","dependencies":[{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\element-ui\\lib\\utils\\popper.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\mine\\搭webpack环境\\so\\node_modules\\element-ui\\lib\\utils\\popper.js"],"names":["_typeof","Symbol","obj","define","module","factory","root","DEFAULTS","placement","gpuAcceleration","offset","boundariesElement","boundariesPadding","preventOverflowOrder","flipBehavior","arrowElement","arrowOffset","modifiers","modifiersIgnored","forceAbsolute","reference","isNotDefined","popper","isConfig","Object","modifier","setStyle","position","top","Popper","getSupportedPropertyName","data","instance","styles","callback","defaultConfig","tagName","classNames","attributes","parent","content","contentType","arrowTagName","arrowClassNames","arrowAttributes","config","d","addClassNames","addAttributes","arrow","console","element","attribute","container","getOffsetParent","isParentFixed","isFixed","popperOffsets","referenceOffsets","getOffsetRectRelativeToCustomParent","popperRect","getOuterSizes","target","getScrollParent","boundaries","body","html","height","Math","width","right","bottom","left","offsetParent","scrollParent","offsetParentRect","getOffsetRect","getScrollTopValue","document","getScrollLeftValue","scrollTop","scrollLeft","clientHeight","modifiersToRun","ends","getArrayKeyIndex","isFunction","index","prefixedProperty","basePlacement","shiftVariation","getPopperClientRect","shiftOffsets","y","start","end","x","axis","order","check","f","placementOpposite","getOppositePlacement","variation","flipOrder","a","arrowStyle","isVertical","len","side","translate","altSide","opSide","arrowSize","center","sideValue","_display","_visibility","calcWidthToForceRepaint","parseFloat","result","hash","offsets","i","arr","css","getStyleComputedProperty","n","isNaN","isFinite","unit","is_numeric","getType","functionToCheck","elementRect","offsetTop","rect","isIE","navigator","rectTop","getBoundingClientRect","parentRect","prefixes","toCheck","property","enumerable","configurable","writable","value","to","arguments","nextSource","keysArray","nextIndex","nextKey","desc"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version {{version}}\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n//\n// Cross module loader\n// Supported: Node, AMD, Browser globals\n//\n;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(factory);\n    } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.Popper = factory();\n    }\n})(undefined, function () {\n\n    'use strict';\n\n    var root = window;\n\n    // default options\n    var DEFAULTS = {\n        // placement of the popper\n        placement: 'bottom',\n\n        gpuAcceleration: true,\n\n        // shift popper from its origin by the given amount of pixels (can be negative)\n        offset: 0,\n\n        // the element which will act as boundary of the popper\n        boundariesElement: 'viewport',\n\n        // amount of pixel used to define a minimum distance between the boundaries and the popper\n        boundariesPadding: 5,\n\n        // popper will try to prevent overflow following this order,\n        // by default, then, it could overflow on the left and on top of the boundariesElement\n        preventOverflowOrder: ['left', 'right', 'top', 'bottom'],\n\n        // the behavior used by flip to change the placement of the popper\n        flipBehavior: 'flip',\n\n        arrowElement: '[x-arrow]',\n\n        arrowOffset: 0,\n\n        // list of functions used to modify the offsets before they are applied to the popper\n        modifiers: ['shift', 'offset', 'preventOverflow', 'keepTogether', 'arrow', 'flip', 'applyStyle'],\n\n        modifiersIgnored: [],\n\n        forceAbsolute: false\n    };\n\n    /**\n     * Create a new Popper.js instance\n     * @constructor Popper\n     * @param {HTMLElement} reference - The reference element used to position the popper\n     * @param {HTMLElement|Object} popper\n     *      The HTML element used as popper, or a configuration used to generate the popper.\n     * @param {String} [popper.tagName='div'] The tag name of the generated popper.\n     * @param {Array} [popper.classNames=['popper']] Array of classes to apply to the generated popper.\n     * @param {Array} [popper.attributes] Array of attributes to apply, specify `attr:value` to assign a value to it.\n     * @param {HTMLElement|String} [popper.parent=window.document.body] The parent element, given as HTMLElement or as query string.\n     * @param {String} [popper.content=''] The content of the popper, it can be text, html, or node; if it is not text, set `contentType` to `html` or `node`.\n     * @param {String} [popper.contentType='text'] If `html`, the `content` will be parsed as HTML. If `node`, it will be appended as-is.\n     * @param {String} [popper.arrowTagName='div'] Same as `popper.tagName` but for the arrow element.\n     * @param {Array} [popper.arrowClassNames='popper__arrow'] Same as `popper.classNames` but for the arrow element.\n     * @param {String} [popper.arrowAttributes=['x-arrow']] Same as `popper.attributes` but for the arrow element.\n     * @param {Object} options\n     * @param {String} [options.placement=bottom]\n     *      Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -right),\n     *      left(-start, -end)`\n     *\n     * @param {HTMLElement|String} [options.arrowElement='[x-arrow]']\n     *      The DOM Node used as arrow for the popper, or a CSS selector used to get the DOM node. It must be child of\n     *      its parent Popper. Popper.js will apply to the given element the style required to align the arrow with its\n     *      reference element.\n     *      By default, it will look for a child node of the popper with the `x-arrow` attribute.\n     *\n     * @param {Boolean} [options.gpuAcceleration=true]\n     *      When this property is set to true, the popper position will be applied using CSS3 translate3d, allowing the\n     *      browser to use the GPU to accelerate the rendering.\n     *      If set to false, the popper will be placed using `top` and `left` properties, not using the GPU.\n     *\n     * @param {Number} [options.offset=0]\n     *      Amount of pixels the popper will be shifted (can be negative).\n     *\n     * @param {String|Element} [options.boundariesElement='viewport']\n     *      The element which will define the boundaries of the popper position, the popper will never be placed outside\n     *      of the defined boundaries (except if `keepTogether` is enabled)\n     *\n     * @param {Number} [options.boundariesPadding=5]\n     *      Additional padding for the boundaries\n     *\n     * @param {Array} [options.preventOverflowOrder=['left', 'right', 'top', 'bottom']]\n     *      Order used when Popper.js tries to avoid overflows from the boundaries, they will be checked in order,\n     *      this means that the last ones will never overflow\n     *\n     * @param {String|Array} [options.flipBehavior='flip']\n     *      The behavior used by the `flip` modifier to change the placement of the popper when the latter is trying to\n     *      overlap its reference element. Defining `flip` as value, the placement will be flipped on\n     *      its axis (`right - left`, `top - bottom`).\n     *      You can even pass an array of placements (eg: `['right', 'left', 'top']` ) to manually specify\n     *      how alter the placement when a flip is needed. (eg. in the above example, it would first flip from right to left,\n     *      then, if even in its new placement, the popper is overlapping its reference element, it will be moved to top)\n     *\n     * @param {Array} [options.modifiers=[ 'shift', 'offset', 'preventOverflow', 'keepTogether', 'arrow', 'flip', 'applyStyle']]\n     *      List of functions used to modify the data before they are applied to the popper, add your custom functions\n     *      to this array to edit the offsets and placement.\n     *      The function should reflect the @params and @returns of preventOverflow\n     *\n     * @param {Array} [options.modifiersIgnored=[]]\n     *      Put here any built-in modifier name you want to exclude from the modifiers list\n     *      The function should reflect the @params and @returns of preventOverflow\n     *\n     * @param {Boolean} [options.removeOnDestroy=false]\n     *      Set to true if you want to automatically remove the popper when you call the `destroy` method.\n     */\n    function Popper(reference, popper, options) {\n        this._reference = reference.jquery ? reference[0] : reference;\n        this.state = {};\n\n        // if the popper variable is a configuration object, parse it to generate an HTMLElement\n        // generate a default popper if is not defined\n        var isNotDefined = typeof popper === 'undefined' || popper === null;\n        var isConfig = popper && Object.prototype.toString.call(popper) === '[object Object]';\n        if (isNotDefined || isConfig) {\n            this._popper = this.parse(isConfig ? popper : {});\n        }\n        // otherwise, use the given HTMLElement as popper\n        else {\n                this._popper = popper.jquery ? popper[0] : popper;\n            }\n\n        // with {} we create a new object with the options inside it\n        this._options = Object.assign({}, DEFAULTS, options);\n\n        // refactoring modifiers' list\n        this._options.modifiers = this._options.modifiers.map(function (modifier) {\n            // remove ignored modifiers\n            if (this._options.modifiersIgnored.indexOf(modifier) !== -1) return;\n\n            // set the x-placement attribute before everything else because it could be used to add margins to the popper\n            // margins needs to be calculated to get the correct popper offsets\n            if (modifier === 'applyStyle') {\n                this._popper.setAttribute('x-placement', this._options.placement);\n            }\n\n            // return predefined modifier identified by string or keep the custom one\n            return this.modifiers[modifier] || modifier;\n        }.bind(this));\n\n        // make sure to apply the popper position before any computation\n        this.state.position = this._getPosition(this._popper, this._reference);\n        setStyle(this._popper, { position: this.state.position, top: 0 });\n\n        // fire the first update to position the popper in the right place\n        this.update();\n\n        // setup event listeners, they will take care of update the position in specific situations\n        this._setupEventListeners();\n        return this;\n    }\n\n    //\n    // Methods\n    //\n    /**\n     * Destroy the popper\n     * @method\n     * @memberof Popper\n     */\n    Popper.prototype.destroy = function () {\n        this._popper.removeAttribute('x-placement');\n        this._popper.style.left = '';\n        this._popper.style.position = '';\n        this._popper.style.top = '';\n        this._popper.style[getSupportedPropertyName('transform')] = '';\n        this._removeEventListeners();\n\n        // remove the popper if user explicity asked for the deletion on destroy\n        if (this._options.removeOnDestroy) {\n            this._popper.remove();\n        }\n        return this;\n    };\n\n    /**\n     * Updates the position of the popper, computing the new offsets and applying the new style\n     * @method\n     * @memberof Popper\n     */\n    Popper.prototype.update = function () {\n        var data = { instance: this, styles: {} };\n\n        // store placement inside the data object, modifiers will be able to edit `placement` if needed\n        // and refer to _originalPlacement to know the original value\n        data.placement = this._options.placement;\n        data._originalPlacement = this._options.placement;\n\n        // compute the popper and reference offsets and put them inside data.offsets\n        data.offsets = this._getOffsets(this._popper, this._reference, data.placement);\n\n        // get boundaries\n        data.boundaries = this._getBoundaries(data, this._options.boundariesPadding, this._options.boundariesElement);\n\n        data = this.runModifiers(data, this._options.modifiers);\n\n        if (typeof this.state.updateCallback === 'function') {\n            this.state.updateCallback(data);\n        }\n    };\n\n    /**\n     * If a function is passed, it will be executed after the initialization of popper with as first argument the Popper instance.\n     * @method\n     * @memberof Popper\n     * @param {Function} callback\n     */\n    Popper.prototype.onCreate = function (callback) {\n        // the createCallbacks return as first argument the popper instance\n        callback(this);\n        return this;\n    };\n\n    /**\n     * If a function is passed, it will be executed after each update of popper with as first argument the set of coordinates and informations\n     * used to style popper and its arrow.\n     * NOTE: it doesn't get fired on the first call of the `Popper.update()` method inside the `Popper` constructor!\n     * @method\n     * @memberof Popper\n     * @param {Function} callback\n     */\n    Popper.prototype.onUpdate = function (callback) {\n        this.state.updateCallback = callback;\n        return this;\n    };\n\n    /**\n     * Helper used to generate poppers from a configuration file\n     * @method\n     * @memberof Popper\n     * @param config {Object} configuration\n     * @returns {HTMLElement} popper\n     */\n    Popper.prototype.parse = function (config) {\n        var defaultConfig = {\n            tagName: 'div',\n            classNames: ['popper'],\n            attributes: [],\n            parent: root.document.body,\n            content: '',\n            contentType: 'text',\n            arrowTagName: 'div',\n            arrowClassNames: ['popper__arrow'],\n            arrowAttributes: ['x-arrow']\n        };\n        config = Object.assign({}, defaultConfig, config);\n\n        var d = root.document;\n\n        var popper = d.createElement(config.tagName);\n        addClassNames(popper, config.classNames);\n        addAttributes(popper, config.attributes);\n        if (config.contentType === 'node') {\n            popper.appendChild(config.content.jquery ? config.content[0] : config.content);\n        } else if (config.contentType === 'html') {\n            popper.innerHTML = config.content;\n        } else {\n            popper.textContent = config.content;\n        }\n\n        if (config.arrowTagName) {\n            var arrow = d.createElement(config.arrowTagName);\n            addClassNames(arrow, config.arrowClassNames);\n            addAttributes(arrow, config.arrowAttributes);\n            popper.appendChild(arrow);\n        }\n\n        var parent = config.parent.jquery ? config.parent[0] : config.parent;\n\n        // if the given parent is a string, use it to match an element\n        // if more than one element is matched, the first one will be used as parent\n        // if no elements are matched, the script will throw an error\n        if (typeof parent === 'string') {\n            parent = d.querySelectorAll(config.parent);\n            if (parent.length > 1) {\n                console.warn('WARNING: the given `parent` query(' + config.parent + ') matched more than one element, the first one will be used');\n            }\n            if (parent.length === 0) {\n                throw 'ERROR: the given `parent` doesn\\'t exists!';\n            }\n            parent = parent[0];\n        }\n        // if the given parent is a DOM nodes list or an array of nodes with more than one element,\n        // the first one will be used as parent\n        if (parent.length > 1 && parent instanceof Element === false) {\n            console.warn('WARNING: you have passed as parent a list of elements, the first one will be used');\n            parent = parent[0];\n        }\n\n        // append the generated popper to its parent\n        parent.appendChild(popper);\n\n        return popper;\n\n        /**\n         * Adds class names to the given element\n         * @function\n         * @ignore\n         * @param {HTMLElement} target\n         * @param {Array} classes\n         */\n        function addClassNames(element, classNames) {\n            classNames.forEach(function (className) {\n                element.classList.add(className);\n            });\n        }\n\n        /**\n         * Adds attributes to the given element\n         * @function\n         * @ignore\n         * @param {HTMLElement} target\n         * @param {Array} attributes\n         * @example\n         * addAttributes(element, [ 'data-info:foobar' ]);\n         */\n        function addAttributes(element, attributes) {\n            attributes.forEach(function (attribute) {\n                element.setAttribute(attribute.split(':')[0], attribute.split(':')[1] || '');\n            });\n        }\n    };\n\n    /**\n     * Helper used to get the position which will be applied to the popper\n     * @method\n     * @memberof Popper\n     * @param config {HTMLElement} popper element\n     * @param reference {HTMLElement} reference element\n     * @returns {String} position\n     */\n    Popper.prototype._getPosition = function (popper, reference) {\n        var container = getOffsetParent(reference);\n\n        if (this._options.forceAbsolute) {\n            return 'absolute';\n        }\n\n        // Decide if the popper will be fixed\n        // If the reference element is inside a fixed context, the popper will be fixed as well to allow them to scroll together\n        var isParentFixed = isFixed(reference, container);\n        return isParentFixed ? 'fixed' : 'absolute';\n    };\n\n    /**\n     * Get offsets to the popper\n     * @method\n     * @memberof Popper\n     * @access private\n     * @param {Element} popper - the popper element\n     * @param {Element} reference - the reference element (the popper will be relative to this)\n     * @returns {Object} An object containing the offsets which will be applied to the popper\n     */\n    Popper.prototype._getOffsets = function (popper, reference, placement) {\n        placement = placement.split('-')[0];\n        var popperOffsets = {};\n\n        popperOffsets.position = this.state.position;\n        var isParentFixed = popperOffsets.position === 'fixed';\n\n        //\n        // Get reference element position\n        //\n        var referenceOffsets = getOffsetRectRelativeToCustomParent(reference, getOffsetParent(popper), isParentFixed);\n\n        //\n        // Get popper sizes\n        //\n        var popperRect = getOuterSizes(popper);\n\n        //\n        // Compute offsets of popper\n        //\n\n        // depending by the popper placement we have to compute its offsets slightly differently\n        if (['right', 'left'].indexOf(placement) !== -1) {\n            popperOffsets.top = referenceOffsets.top + referenceOffsets.height / 2 - popperRect.height / 2;\n            if (placement === 'left') {\n                popperOffsets.left = referenceOffsets.left - popperRect.width;\n            } else {\n                popperOffsets.left = referenceOffsets.right;\n            }\n        } else {\n            popperOffsets.left = referenceOffsets.left + referenceOffsets.width / 2 - popperRect.width / 2;\n            if (placement === 'top') {\n                popperOffsets.top = referenceOffsets.top - popperRect.height;\n            } else {\n                popperOffsets.top = referenceOffsets.bottom;\n            }\n        }\n\n        // Add width and height to our offsets object\n        popperOffsets.width = popperRect.width;\n        popperOffsets.height = popperRect.height;\n\n        return {\n            popper: popperOffsets,\n            reference: referenceOffsets\n        };\n    };\n\n    /**\n     * Setup needed event listeners used to update the popper position\n     * @method\n     * @memberof Popper\n     * @access private\n     */\n    Popper.prototype._setupEventListeners = function () {\n        // NOTE: 1 DOM access here\n        this.state.updateBound = this.update.bind(this);\n        root.addEventListener('resize', this.state.updateBound);\n        // if the boundariesElement is window we don't need to listen for the scroll event\n        if (this._options.boundariesElement !== 'window') {\n            var target = getScrollParent(this._reference);\n            // here it could be both `body` or `documentElement` thanks to Firefox, we then check both\n            if (target === root.document.body || target === root.document.documentElement) {\n                target = root;\n            }\n            target.addEventListener('scroll', this.state.updateBound);\n            this.state.scrollTarget = target;\n        }\n    };\n\n    /**\n     * Remove event listeners used to update the popper position\n     * @method\n     * @memberof Popper\n     * @access private\n     */\n    Popper.prototype._removeEventListeners = function () {\n        // NOTE: 1 DOM access here\n        root.removeEventListener('resize', this.state.updateBound);\n        if (this._options.boundariesElement !== 'window' && this.state.scrollTarget) {\n            this.state.scrollTarget.removeEventListener('scroll', this.state.updateBound);\n            this.state.scrollTarget = null;\n        }\n        this.state.updateBound = null;\n    };\n\n    /**\n     * Computed the boundaries limits and return them\n     * @method\n     * @memberof Popper\n     * @access private\n     * @param {Object} data - Object containing the property \"offsets\" generated by `_getOffsets`\n     * @param {Number} padding - Boundaries padding\n     * @param {Element} boundariesElement - Element used to define the boundaries\n     * @returns {Object} Coordinates of the boundaries\n     */\n    Popper.prototype._getBoundaries = function (data, padding, boundariesElement) {\n        // NOTE: 1 DOM access here\n        var boundaries = {};\n        var width, height;\n        if (boundariesElement === 'window') {\n            var body = root.document.body,\n                html = root.document.documentElement;\n\n            height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n            width = Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth);\n\n            boundaries = {\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0\n            };\n        } else if (boundariesElement === 'viewport') {\n            var offsetParent = getOffsetParent(this._popper);\n            var scrollParent = getScrollParent(this._popper);\n            var offsetParentRect = getOffsetRect(offsetParent);\n\n            // Thanks the fucking native API, `document.body.scrollTop` & `document.documentElement.scrollTop`\n            var getScrollTopValue = function getScrollTopValue(element) {\n                return element == document.body ? Math.max(document.documentElement.scrollTop, document.body.scrollTop) : element.scrollTop;\n            };\n            var getScrollLeftValue = function getScrollLeftValue(element) {\n                return element == document.body ? Math.max(document.documentElement.scrollLeft, document.body.scrollLeft) : element.scrollLeft;\n            };\n\n            // if the popper is fixed we don't have to substract scrolling from the boundaries\n            var scrollTop = data.offsets.popper.position === 'fixed' ? 0 : getScrollTopValue(scrollParent);\n            var scrollLeft = data.offsets.popper.position === 'fixed' ? 0 : getScrollLeftValue(scrollParent);\n\n            boundaries = {\n                top: 0 - (offsetParentRect.top - scrollTop),\n                right: root.document.documentElement.clientWidth - (offsetParentRect.left - scrollLeft),\n                bottom: root.document.documentElement.clientHeight - (offsetParentRect.top - scrollTop),\n                left: 0 - (offsetParentRect.left - scrollLeft)\n            };\n        } else {\n            if (getOffsetParent(this._popper) === boundariesElement) {\n                boundaries = {\n                    top: 0,\n                    left: 0,\n                    right: boundariesElement.clientWidth,\n                    bottom: boundariesElement.clientHeight\n                };\n            } else {\n                boundaries = getOffsetRect(boundariesElement);\n            }\n        }\n        boundaries.left += padding;\n        boundaries.right -= padding;\n        boundaries.top = boundaries.top + padding;\n        boundaries.bottom = boundaries.bottom - padding;\n        return boundaries;\n    };\n\n    /**\n     * Loop trough the list of modifiers and run them in order, each of them will then edit the data object\n     * @method\n     * @memberof Popper\n     * @access public\n     * @param {Object} data\n     * @param {Array} modifiers\n     * @param {Function} ends\n     */\n    Popper.prototype.runModifiers = function (data, modifiers, ends) {\n        var modifiersToRun = modifiers.slice();\n        if (ends !== undefined) {\n            modifiersToRun = this._options.modifiers.slice(0, getArrayKeyIndex(this._options.modifiers, ends));\n        }\n\n        modifiersToRun.forEach(function (modifier) {\n            if (isFunction(modifier)) {\n                data = modifier.call(this, data);\n            }\n        }.bind(this));\n\n        return data;\n    };\n\n    /**\n     * Helper used to know if the given modifier depends from another one.\n     * @method\n     * @memberof Popper\n     * @param {String} requesting - name of requesting modifier\n     * @param {String} requested - name of requested modifier\n     * @returns {Boolean}\n     */\n    Popper.prototype.isModifierRequired = function (requesting, requested) {\n        var index = getArrayKeyIndex(this._options.modifiers, requesting);\n        return !!this._options.modifiers.slice(0, index).filter(function (modifier) {\n            return modifier === requested;\n        }).length;\n    };\n\n    //\n    // Modifiers\n    //\n\n    /**\n     * Modifiers list\n     * @namespace Popper.modifiers\n     * @memberof Popper\n     * @type {Object}\n     */\n    Popper.prototype.modifiers = {};\n\n    /**\n     * Apply the computed styles to the popper element\n     * @method\n     * @memberof Popper.modifiers\n     * @argument {Object} data - The data object generated by `update` method\n     * @returns {Object} The same data object\n     */\n    Popper.prototype.modifiers.applyStyle = function (data) {\n        // apply the final offsets to the popper\n        // NOTE: 1 DOM access here\n        var styles = {\n            position: data.offsets.popper.position\n        };\n\n        // round top and left to avoid blurry text\n        var left = Math.round(data.offsets.popper.left);\n        var top = Math.round(data.offsets.popper.top);\n\n        // if gpuAcceleration is set to true and transform is supported, we use `translate3d` to apply the position to the popper\n        // we automatically use the supported prefixed version if needed\n        var prefixedProperty;\n        if (this._options.gpuAcceleration && (prefixedProperty = getSupportedPropertyName('transform'))) {\n            styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n            styles.top = 0;\n            styles.left = 0;\n        }\n        // othwerise, we use the standard `left` and `top` properties\n        else {\n                styles.left = left;\n                styles.top = top;\n            }\n\n        // any property present in `data.styles` will be applied to the popper,\n        // in this way we can make the 3rd party modifiers add custom styles to it\n        // Be aware, modifiers could override the properties defined in the previous\n        // lines of this modifier!\n        Object.assign(styles, data.styles);\n\n        setStyle(this._popper, styles);\n\n        // set an attribute which will be useful to style the tooltip (use it to properly position its arrow)\n        // NOTE: 1 DOM access here\n        this._popper.setAttribute('x-placement', data.placement);\n\n        // if the arrow modifier is required and the arrow style has been computed, apply the arrow style\n        if (this.isModifierRequired(this.modifiers.applyStyle, this.modifiers.arrow) && data.offsets.arrow) {\n            setStyle(data.arrowElement, data.offsets.arrow);\n        }\n\n        return data;\n    };\n\n    /**\n     * Modifier used to shift the popper on the start or end of its reference element side\n     * @method\n     * @memberof Popper.modifiers\n     * @argument {Object} data - The data object generated by `update` method\n     * @returns {Object} The data object, properly modified\n     */\n    Popper.prototype.modifiers.shift = function (data) {\n        var placement = data.placement;\n        var basePlacement = placement.split('-')[0];\n        var shiftVariation = placement.split('-')[1];\n\n        // if shift shiftVariation is specified, run the modifier\n        if (shiftVariation) {\n            var reference = data.offsets.reference;\n            var popper = getPopperClientRect(data.offsets.popper);\n\n            var shiftOffsets = {\n                y: {\n                    start: { top: reference.top },\n                    end: { top: reference.top + reference.height - popper.height }\n                },\n                x: {\n                    start: { left: reference.left },\n                    end: { left: reference.left + reference.width - popper.width }\n                }\n            };\n\n            var axis = ['bottom', 'top'].indexOf(basePlacement) !== -1 ? 'x' : 'y';\n\n            data.offsets.popper = Object.assign(popper, shiftOffsets[axis][shiftVariation]);\n        }\n\n        return data;\n    };\n\n    /**\n     * Modifier used to make sure the popper does not overflows from it's boundaries\n     * @method\n     * @memberof Popper.modifiers\n     * @argument {Object} data - The data object generated by `update` method\n     * @returns {Object} The data object, properly modified\n     */\n    Popper.prototype.modifiers.preventOverflow = function (data) {\n        var order = this._options.preventOverflowOrder;\n        var popper = getPopperClientRect(data.offsets.popper);\n\n        var check = {\n            left: function left() {\n                var left = popper.left;\n                if (popper.left < data.boundaries.left) {\n                    left = Math.max(popper.left, data.boundaries.left);\n                }\n                return { left: left };\n            },\n            right: function right() {\n                var left = popper.left;\n                if (popper.right > data.boundaries.right) {\n                    left = Math.min(popper.left, data.boundaries.right - popper.width);\n                }\n                return { left: left };\n            },\n            top: function top() {\n                var top = popper.top;\n                if (popper.top < data.boundaries.top) {\n                    top = Math.max(popper.top, data.boundaries.top);\n                }\n                return { top: top };\n            },\n            bottom: function bottom() {\n                var top = popper.top;\n                if (popper.bottom > data.boundaries.bottom) {\n                    top = Math.min(popper.top, data.boundaries.bottom - popper.height);\n                }\n                return { top: top };\n            }\n        };\n\n        order.forEach(function (direction) {\n            data.offsets.popper = Object.assign(popper, check[direction]());\n        });\n\n        return data;\n    };\n\n    /**\n     * Modifier used to make sure the popper is always near its reference\n     * @method\n     * @memberof Popper.modifiers\n     * @argument {Object} data - The data object generated by _update method\n     * @returns {Object} The data object, properly modified\n     */\n    Popper.prototype.modifiers.keepTogether = function (data) {\n        var popper = getPopperClientRect(data.offsets.popper);\n        var reference = data.offsets.reference;\n        var f = Math.floor;\n\n        if (popper.right < f(reference.left)) {\n            data.offsets.popper.left = f(reference.left) - popper.width;\n        }\n        if (popper.left > f(reference.right)) {\n            data.offsets.popper.left = f(reference.right);\n        }\n        if (popper.bottom < f(reference.top)) {\n            data.offsets.popper.top = f(reference.top) - popper.height;\n        }\n        if (popper.top > f(reference.bottom)) {\n            data.offsets.popper.top = f(reference.bottom);\n        }\n\n        return data;\n    };\n\n    /**\n     * Modifier used to flip the placement of the popper when the latter is starting overlapping its reference element.\n     * Requires the `preventOverflow` modifier before it in order to work.\n     * **NOTE:** This modifier will run all its previous modifiers everytime it tries to flip the popper!\n     * @method\n     * @memberof Popper.modifiers\n     * @argument {Object} data - The data object generated by _update method\n     * @returns {Object} The data object, properly modified\n     */\n    Popper.prototype.modifiers.flip = function (data) {\n        // check if preventOverflow is in the list of modifiers before the flip modifier.\n        // otherwise flip would not work as expected.\n        if (!this.isModifierRequired(this.modifiers.flip, this.modifiers.preventOverflow)) {\n            console.warn('WARNING: preventOverflow modifier is required by flip modifier in order to work, be sure to include it before flip!');\n            return data;\n        }\n\n        if (data.flipped && data.placement === data._originalPlacement) {\n            // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n            return data;\n        }\n\n        var placement = data.placement.split('-')[0];\n        var placementOpposite = getOppositePlacement(placement);\n        var variation = data.placement.split('-')[1] || '';\n\n        var flipOrder = [];\n        if (this._options.flipBehavior === 'flip') {\n            flipOrder = [placement, placementOpposite];\n        } else {\n            flipOrder = this._options.flipBehavior;\n        }\n\n        flipOrder.forEach(function (step, index) {\n            if (placement !== step || flipOrder.length === index + 1) {\n                return;\n            }\n\n            placement = data.placement.split('-')[0];\n            placementOpposite = getOppositePlacement(placement);\n\n            var popperOffsets = getPopperClientRect(data.offsets.popper);\n\n            // this boolean is used to distinguish right and bottom from top and left\n            // they need different computations to get flipped\n            var a = ['right', 'bottom'].indexOf(placement) !== -1;\n\n            // using Math.floor because the reference offsets may contain decimals we are not going to consider here\n            if (a && Math.floor(data.offsets.reference[placement]) > Math.floor(popperOffsets[placementOpposite]) || !a && Math.floor(data.offsets.reference[placement]) < Math.floor(popperOffsets[placementOpposite])) {\n                // we'll use this boolean to detect any flip loop\n                data.flipped = true;\n                data.placement = flipOrder[index + 1];\n                if (variation) {\n                    data.placement += '-' + variation;\n                }\n                data.offsets.popper = this._getOffsets(this._popper, this._reference, data.placement).popper;\n\n                data = this.runModifiers(data, this._options.modifiers, this._flip);\n            }\n        }.bind(this));\n        return data;\n    };\n\n    /**\n     * Modifier used to add an offset to the popper, useful if you more granularity positioning your popper.\n     * The offsets will shift the popper on the side of its reference element.\n     * @method\n     * @memberof Popper.modifiers\n     * @argument {Object} data - The data object generated by _update method\n     * @returns {Object} The data object, properly modified\n     */\n    Popper.prototype.modifiers.offset = function (data) {\n        var offset = this._options.offset;\n        var popper = data.offsets.popper;\n\n        if (data.placement.indexOf('left') !== -1) {\n            popper.top -= offset;\n        } else if (data.placement.indexOf('right') !== -1) {\n            popper.top += offset;\n        } else if (data.placement.indexOf('top') !== -1) {\n            popper.left -= offset;\n        } else if (data.placement.indexOf('bottom') !== -1) {\n            popper.left += offset;\n        }\n        return data;\n    };\n\n    /**\n     * Modifier used to move the arrows on the edge of the popper to make sure them are always between the popper and the reference element\n     * It will use the CSS outer size of the arrow element to know how many pixels of conjuction are needed\n     * @method\n     * @memberof Popper.modifiers\n     * @argument {Object} data - The data object generated by _update method\n     * @returns {Object} The data object, properly modified\n     */\n    Popper.prototype.modifiers.arrow = function (data) {\n        var arrow = this._options.arrowElement;\n        var arrowOffset = this._options.arrowOffset;\n\n        // if the arrowElement is a string, suppose it's a CSS selector\n        if (typeof arrow === 'string') {\n            arrow = this._popper.querySelector(arrow);\n        }\n\n        // if arrow element is not found, don't run the modifier\n        if (!arrow) {\n            return data;\n        }\n\n        // the arrow element must be child of its popper\n        if (!this._popper.contains(arrow)) {\n            console.warn('WARNING: `arrowElement` must be child of its popper element!');\n            return data;\n        }\n\n        // arrow depends on keepTogether in order to work\n        if (!this.isModifierRequired(this.modifiers.arrow, this.modifiers.keepTogether)) {\n            console.warn('WARNING: keepTogether modifier is required by arrow modifier in order to work, be sure to include it before arrow!');\n            return data;\n        }\n\n        var arrowStyle = {};\n        var placement = data.placement.split('-')[0];\n        var popper = getPopperClientRect(data.offsets.popper);\n        var reference = data.offsets.reference;\n        var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n        var len = isVertical ? 'height' : 'width';\n        var side = isVertical ? 'top' : 'left';\n        var translate = isVertical ? 'translateY' : 'translateX';\n        var altSide = isVertical ? 'left' : 'top';\n        var opSide = isVertical ? 'bottom' : 'right';\n        var arrowSize = getOuterSizes(arrow)[len];\n\n        //\n        // extends keepTogether behavior making sure the popper and its reference have enough pixels in conjuction\n        //\n\n        // top/left side\n        if (reference[opSide] - arrowSize < popper[side]) {\n            data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowSize);\n        }\n        // bottom/right side\n        if (reference[side] + arrowSize > popper[opSide]) {\n            data.offsets.popper[side] += reference[side] + arrowSize - popper[opSide];\n        }\n\n        // compute center of the popper\n        var center = reference[side] + (arrowOffset || reference[len] / 2 - arrowSize / 2);\n\n        var sideValue = center - popper[side];\n\n        // prevent arrow from being placed not contiguously to its popper\n        sideValue = Math.max(Math.min(popper[len] - arrowSize - 8, sideValue), 8);\n        arrowStyle[side] = sideValue;\n        arrowStyle[altSide] = ''; // make sure to remove any old style from the arrow\n\n        data.offsets.arrow = arrowStyle;\n        data.arrowElement = arrow;\n\n        return data;\n    };\n\n    //\n    // Helpers\n    //\n\n    /**\n     * Get the outer sizes of the given element (offset size + margins)\n     * @function\n     * @ignore\n     * @argument {Element} element\n     * @returns {Object} object containing width and height properties\n     */\n    function getOuterSizes(element) {\n        // NOTE: 1 DOM access here\n        var _display = element.style.display,\n            _visibility = element.style.visibility;\n        element.style.display = 'block';element.style.visibility = 'hidden';\n        var calcWidthToForceRepaint = element.offsetWidth;\n\n        // original method\n        var styles = root.getComputedStyle(element);\n        var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n        var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n        var result = { width: element.offsetWidth + y, height: element.offsetHeight + x };\n\n        // reset element styles\n        element.style.display = _display;element.style.visibility = _visibility;\n        return result;\n    }\n\n    /**\n     * Get the opposite placement of the given one/\n     * @function\n     * @ignore\n     * @argument {String} placement\n     * @returns {String} flipped placement\n     */\n    function getOppositePlacement(placement) {\n        var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n        return placement.replace(/left|right|bottom|top/g, function (matched) {\n            return hash[matched];\n        });\n    }\n\n    /**\n     * Given the popper offsets, generate an output similar to getBoundingClientRect\n     * @function\n     * @ignore\n     * @argument {Object} popperOffsets\n     * @returns {Object} ClientRect like output\n     */\n    function getPopperClientRect(popperOffsets) {\n        var offsets = Object.assign({}, popperOffsets);\n        offsets.right = offsets.left + offsets.width;\n        offsets.bottom = offsets.top + offsets.height;\n        return offsets;\n    }\n\n    /**\n     * Given an array and the key to find, returns its index\n     * @function\n     * @ignore\n     * @argument {Array} arr\n     * @argument keyToFind\n     * @returns index or null\n     */\n    function getArrayKeyIndex(arr, keyToFind) {\n        var i = 0,\n            key;\n        for (key in arr) {\n            if (arr[key] === keyToFind) {\n                return i;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    /**\n     * Get CSS computed property of the given element\n     * @function\n     * @ignore\n     * @argument {Eement} element\n     * @argument {String} property\n     */\n    function getStyleComputedProperty(element, property) {\n        // NOTE: 1 DOM access here\n        var css = root.getComputedStyle(element, null);\n        return css[property];\n    }\n\n    /**\n     * Returns the offset parent of the given element\n     * @function\n     * @ignore\n     * @argument {Element} element\n     * @returns {Element} offset parent\n     */\n    function getOffsetParent(element) {\n        // NOTE: 1 DOM access here\n        var offsetParent = element.offsetParent;\n        return offsetParent === root.document.body || !offsetParent ? root.document.documentElement : offsetParent;\n    }\n\n    /**\n     * Returns the scrolling parent of the given element\n     * @function\n     * @ignore\n     * @argument {Element} element\n     * @returns {Element} offset parent\n     */\n    function getScrollParent(element) {\n        var parent = element.parentNode;\n\n        if (!parent) {\n            return element;\n        }\n\n        if (parent === root.document) {\n            // Firefox puts the scrollTOp value on `documentElement` instead of `body`, we then check which of them is\n            // greater than 0 and return the proper element\n            if (root.document.body.scrollTop || root.document.body.scrollLeft) {\n                return root.document.body;\n            } else {\n                return root.document.documentElement;\n            }\n        }\n\n        // Firefox want us to check `-x` and `-y` variations as well\n        if (['scroll', 'auto'].indexOf(getStyleComputedProperty(parent, 'overflow')) !== -1 || ['scroll', 'auto'].indexOf(getStyleComputedProperty(parent, 'overflow-x')) !== -1 || ['scroll', 'auto'].indexOf(getStyleComputedProperty(parent, 'overflow-y')) !== -1) {\n            // If the detected scrollParent is body, we perform an additional check on its parentNode\n            // in this way we'll get body if the browser is Chrome-ish, or documentElement otherwise\n            // fixes issue #65\n            return parent;\n        }\n        return getScrollParent(element.parentNode);\n    }\n\n    /**\n     * Check if the given element is fixed or is inside a fixed parent\n     * @function\n     * @ignore\n     * @argument {Element} element\n     * @argument {Element} customContainer\n     * @returns {Boolean} answer to \"isFixed?\"\n     */\n    function isFixed(element) {\n        if (element === root.document.body) {\n            return false;\n        }\n        if (getStyleComputedProperty(element, 'position') === 'fixed') {\n            return true;\n        }\n        return element.parentNode ? isFixed(element.parentNode) : element;\n    }\n\n    /**\n     * Set the style to the given popper\n     * @function\n     * @ignore\n     * @argument {Element} element - Element to apply the style to\n     * @argument {Object} styles - Object with a list of properties and values which will be applied to the element\n     */\n    function setStyle(element, styles) {\n        function is_numeric(n) {\n            return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n        }\n        Object.keys(styles).forEach(function (prop) {\n            var unit = '';\n            // add unit if the value is numeric and is one of the following\n            if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && is_numeric(styles[prop])) {\n                unit = 'px';\n            }\n            element.style[prop] = styles[prop] + unit;\n        });\n    }\n\n    /**\n     * Check if the given variable is a function\n     * @function\n     * @ignore\n     * @argument {*} functionToCheck - variable to check\n     * @returns {Boolean} answer to: is a function?\n     */\n    function isFunction(functionToCheck) {\n        var getType = {};\n        return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n    }\n\n    /**\n     * Get the position of the given element, relative to its offset parent\n     * @function\n     * @ignore\n     * @param {Element} element\n     * @return {Object} position - Coordinates of the element and its `scrollTop`\n     */\n    function getOffsetRect(element) {\n        var elementRect = {\n            width: element.offsetWidth,\n            height: element.offsetHeight,\n            left: element.offsetLeft,\n            top: element.offsetTop\n        };\n\n        elementRect.right = elementRect.left + elementRect.width;\n        elementRect.bottom = elementRect.top + elementRect.height;\n\n        // position\n        return elementRect;\n    }\n\n    /**\n     * Get bounding client rect of given element\n     * @function\n     * @ignore\n     * @param {HTMLElement} element\n     * @return {Object} client rect\n     */\n    function getBoundingClientRect(element) {\n        var rect = element.getBoundingClientRect();\n\n        // whether the IE version is lower than 11\n        var isIE = navigator.userAgent.indexOf(\"MSIE\") != -1;\n\n        // fix ie document bounding top always 0 bug\n        var rectTop = isIE && element.tagName === 'HTML' ? -element.scrollTop : rect.top;\n\n        return {\n            left: rect.left,\n            top: rectTop,\n            right: rect.right,\n            bottom: rect.bottom,\n            width: rect.right - rect.left,\n            height: rect.bottom - rectTop\n        };\n    }\n\n    /**\n     * Given an element and one of its parents, return the offset\n     * @function\n     * @ignore\n     * @param {HTMLElement} element\n     * @param {HTMLElement} parent\n     * @return {Object} rect\n     */\n    function getOffsetRectRelativeToCustomParent(element, parent, fixed) {\n        var elementRect = getBoundingClientRect(element);\n        var parentRect = getBoundingClientRect(parent);\n\n        if (fixed) {\n            var scrollParent = getScrollParent(parent);\n            parentRect.top += scrollParent.scrollTop;\n            parentRect.bottom += scrollParent.scrollTop;\n            parentRect.left += scrollParent.scrollLeft;\n            parentRect.right += scrollParent.scrollLeft;\n        }\n\n        var rect = {\n            top: elementRect.top - parentRect.top,\n            left: elementRect.left - parentRect.left,\n            bottom: elementRect.top - parentRect.top + elementRect.height,\n            right: elementRect.left - parentRect.left + elementRect.width,\n            width: elementRect.width,\n            height: elementRect.height\n        };\n        return rect;\n    }\n\n    /**\n     * Get the prefixed supported property name\n     * @function\n     * @ignore\n     * @argument {String} property (camelCase)\n     * @returns {String} prefixed property (camelCase)\n     */\n    function getSupportedPropertyName(property) {\n        var prefixes = ['', 'ms', 'webkit', 'moz', 'o'];\n\n        for (var i = 0; i < prefixes.length; i++) {\n            var toCheck = prefixes[i] ? prefixes[i] + property.charAt(0).toUpperCase() + property.slice(1) : property;\n            if (typeof root.document.body.style[toCheck] !== 'undefined') {\n                return toCheck;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * The Object.assign() method is used to copy the values of all enumerable own properties from one or more source\n     * objects to a target object. It will return the target object.\n     * This polyfill doesn't support symbol properties, since ES5 doesn't have symbols anyway\n     * Source: https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n     * @function\n     * @ignore\n     */\n    if (!Object.assign) {\n        Object.defineProperty(Object, 'assign', {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value: function value(target) {\n                if (target === undefined || target === null) {\n                    throw new TypeError('Cannot convert first argument to object');\n                }\n\n                var to = Object(target);\n                for (var i = 1; i < arguments.length; i++) {\n                    var nextSource = arguments[i];\n                    if (nextSource === undefined || nextSource === null) {\n                        continue;\n                    }\n                    nextSource = Object(nextSource);\n\n                    var keysArray = Object.keys(nextSource);\n                    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n                        var nextKey = keysArray[nextIndex];\n                        var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                        if (desc !== undefined && desc.enumerable) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n                return to;\n            }\n        });\n    }\n\n    return Popper;\n});"]}]}