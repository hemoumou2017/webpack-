{"remainingRequest":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\loglevel\\lib\\loglevel.js","dependencies":[{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\loglevel\\lib\\loglevel.js","mtime":1510612422000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\mine\\搭webpack环境\\so\\node_modules\\loglevel\\lib\\loglevel.js"],"names":["define","module","definition","root","noop","undefinedType","logMethods","method","obj","Function","methodName","console","bindMethod","i","replaceLoggingMethods","realMethod","enableLoggingWhenConsoleArrives","self","storageKey","levelName","window","encodeURIComponent","storedLevel","cookie","location","factory","level","currentLevel","persist","persistLevelIfPossible","getPersistedLevel","initialLevel","defaultLevel","defaultLogger","_loggersByName","name","logger","_log"],"mappings":"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","sourcesContent":["/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n"]}]}