{"remainingRequest":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\@babel\\polyfill\\node_modules\\core-js\\modules\\_typed-array.js","dependencies":[{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\@babel\\polyfill\\node_modules\\core-js\\modules\\_typed-array.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\mine\\搭webpack环境\\so\\node_modules\\@babel\\polyfill\\node_modules\\core-js\\modules\\_typed-array.js"],"names":["require","LIBRARY","global","fails","$export","$typed","$buffer","ctx","anInstance","propertyDesc","hide","redefineAll","toInteger","toLength","toIndex","toAbsoluteIndex","toPrimitive","has","classof","isObject","toObject","isArrayIter","create","getPrototypeOf","gOPN","getIterFn","uid","wks","createArrayMethod","createArrayIncludes","speciesConstructor","ArrayIterators","Iterators","$iterDetect","setSpecies","arrayFill","arrayCopyWithin","$DP","$GOPD","dP","gOPD","RangeError","TypeError","Uint8Array","ARRAY_BUFFER","SHARED_BUFFER","BYTES_PER_ELEMENT","PROTOTYPE","ArrayProto","Array","$ArrayBuffer","$DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayIndexOf","arrayValues","arrayKeys","arrayEntries","arrayLastIndexOf","arrayReduce","arrayReduceRight","arrayJoin","arraySort","arraySlice","arrayToString","arrayToLocaleString","ITERATOR","TAG","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","TYPED_ARRAY","VIEW","WRONG_LENGTH","$map","allocate","O","LITTLE_ENDIAN","FORCED_SET","toOffset","offset","validate","it","speciesFromList","fromList","index","length","list","result","addGetter","get","$from","source","aLen","arguments","mapfn","mapping","iterFn","iterator","values","i","step","$of","TO_LOCALE_BUG","$toLocaleString","proto","copyWithin","start","every","callbackfn","fill","value","filter","find","predicate","findIndex","forEach","indexOf","searchElement","includes","join","lastIndexOf","map","reduce","reduceRight","reverse","that","middle","Math","some","sort","subarray","$begin","end","$slice","$set","arrayLike","src","len","$iterators","entries","keys","isTAIndex","target","key","String","$getDesc","$setDesc","desc","getOwnPropertyDescriptor","defineProperty","$TypedArrayPrototype$","slice","set","constructor","toString","toLocaleString","module","CLAMPED","NAME","KEY","GETTER","SETTER","TypedArray","Base","TAC","FORCED","TypedArrayPrototype","getter","data","setter","addElement","enumerable","wrapper","byteLength","buffer","klass","$len","$length","b","o","l","e","v","$offset","Function","$nativeIterator","CORRECT_ITER_NAME","$iterator","BYTES","from","of"],"mappings":"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","sourcesContent":["'use strict';\nif (require('./_descriptors')) {\n  var LIBRARY = require('./_library');\n  var global = require('./_global');\n  var fails = require('./_fails');\n  var $export = require('./_export');\n  var $typed = require('./_typed');\n  var $buffer = require('./_typed-buffer');\n  var ctx = require('./_ctx');\n  var anInstance = require('./_an-instance');\n  var propertyDesc = require('./_property-desc');\n  var hide = require('./_hide');\n  var redefineAll = require('./_redefine-all');\n  var toInteger = require('./_to-integer');\n  var toLength = require('./_to-length');\n  var toIndex = require('./_to-index');\n  var toAbsoluteIndex = require('./_to-absolute-index');\n  var toPrimitive = require('./_to-primitive');\n  var has = require('./_has');\n  var classof = require('./_classof');\n  var isObject = require('./_is-object');\n  var toObject = require('./_to-object');\n  var isArrayIter = require('./_is-array-iter');\n  var create = require('./_object-create');\n  var getPrototypeOf = require('./_object-gpo');\n  var gOPN = require('./_object-gopn').f;\n  var getIterFn = require('./core.get-iterator-method');\n  var uid = require('./_uid');\n  var wks = require('./_wks');\n  var createArrayMethod = require('./_array-methods');\n  var createArrayIncludes = require('./_array-includes');\n  var speciesConstructor = require('./_species-constructor');\n  var ArrayIterators = require('./es6.array.iterator');\n  var Iterators = require('./_iterators');\n  var $iterDetect = require('./_iter-detect');\n  var setSpecies = require('./_set-species');\n  var arrayFill = require('./_array-fill');\n  var arrayCopyWithin = require('./_array-copy-within');\n  var $DP = require('./_object-dp');\n  var $GOPD = require('./_object-gopd');\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n"]}]}