{"remainingRequest":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\vue-router\\dist\\vue-router.esm.js","dependencies":[{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\vue-router\\dist\\vue-router.esm.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\mine\\搭webpack环境\\so\\node_modules\\vue-router\\dist\\vue-router.esm.js"],"names":["process","console","Object","a","b","View","name","functional","props","type","render","ref","children","parent","data","h","route","cache","depth","inactive","vnodeData","matched","component","current","val","vnode","propsToPass","resolveProps","extend","attrs","key","config","warn","encodeReserveRE","encodeReserveReplacer","c","commaRE","encode","encodeURIComponent","decode","extraQuery","parse","_parseQuery","parsedQuery","query","e","res","parts","param","Array","obj","result","val2","x","trailingSlashRE","stringifyQuery$$1","router","location","clone","record","meta","path","hash","params","fullPath","getFullPath","formatMatch","value","START","createRoute","stringify","_stringifyQuery","isObjectEqual","aKeys","bKeys","aVal","bVal","String","target","queryIncludes","toTypes","eventTypes","Link","to","required","tag","exact","append","replace","activeClass","exactActiveClass","event","this$1","href","classes","globalActiveClass","globalExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","isSameRoute","isIncludedRoute","handler","guardEvent","on","click","findAnchor","aData","aAttrs","i","child","install","_Vue","isDef","v","registerInstance","vm","Vue","beforeCreate","destroyed","get","strats","inBrowser","firstChar","relative","base","stack","segments","segment","hashIndex","queryIndex","isarray","pathToRegexp_1","parse_1","compile_1","tokensToFunction_1","tokensToRegExp_1","PATH_REGEXP","tokens","index","defaultDelimiter","options","m","escaped","offset","str","next","prefix","capture","group","modifier","asterisk","partial","repeat","optional","delimiter","pattern","escapeGroup","escapeString","tokensToFunction","matches","opts","token","JSON","j","encodeAsterisk","re","groups","keys","attachKeys","pathToRegexp","regexp","flags","tokensToRegExp","strict","end","endsWithDelimiter","regexpToRegexp","arrayToRegexp","stringToRegexp","regexpCompileCache","filler","pretty","pathList","oldPathList","pathMap","oldPathMap","nameMap","oldNameMap","routes","addRouteRecord","l","assert","pathToRegexpOptions","normalizedPath","normalizePath","regex","compileRouteRegex","components","instances","matchAs","redirect","beforeEnter","childMatchAs","cleanPath","aliases","aliasRoute","raw","rawPath","fillParams","parsedPath","parsePath","basePath","resolvePath","resolveQuery","_normalized","createRouteMap","normalizeLocation","_createRoute","paramNames","currentRoute","record$1","matchRoute","originalRedirect","targetRecord","match","resolveRecordPath","resolvedPath","aliasedPath","aliasedMatch","aliasedRecord","redirectedFrom","alias","addRoutes","len","decodeURIComponent","positionStore","window","getStateKey","saveScrollPosition","setStateKey","behavior","position","getScrollPosition","shouldScroll","isPop","scrollToPosition","err","y","pageYOffset","docEl","document","docRect","elRect","el","isNumber","isObject","normalizeOffset","getElementPosition","isValidPosition","normalizePosition","supportsPushState","ua","Time","_key","genKey","history","pushState","step","queue","cb","fn","hasAsync","pending","error","flatMapComponents","def","resolve","once","isESModule","resolvedDef","reject","msg","isError","comp","flatten","hasSymbol","Symbol","called","args","arguments","History","normalizeBase","onComplete","onAbort","abort","resolveQueue","updated","deactivated","activated","extractLeaveGuards","extractUpdateHooks","resolveAsyncComponents","iterator","hook","runQueue","postEnterCbs","isValid","enterGuards","extractEnterGuards","prev","baseEl","max","Math","guards","guard","extractGuard","bind","reverse","extractGuards","bindEnterGuard","cbs","poll","setTimeout","HTML5History","History$$1","expectScroll","supportsScroll","setupScroll","initLocation","getLocation","handleScroll","fromRoute","replaceState","push","decodeURI","HashHistory","fallback","checkFallback","ensureSlash","getHash","replaceHash","pushHash","searchIndex","getUrl","AbstractHistory","targetIndex","VueRouter","createMatcher","mode","prototypeAccessors","configurable","app","setupHashListener","registerHook","createHref","normalizedTo","resolved","list"],"mappings":"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","sourcesContent":["/*!\n  * vue-router v3.0.6\n  * (c) 2019 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nfunction extend (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\nvar View = {\n  name: 'RouterView',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    // used by devtools to display a router-view badge\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      var vnodeData = parent.$vnode && parent.$vnode.data;\n      if (vnodeData) {\n        if (vnodeData.routerView) {\n          depth++;\n        }\n        if (vnodeData.keepAlive && parent._inactive) {\n          inactive = true;\n        }\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // register instance in init hook\n    // in case kept-alive component be actived when routes changed\n    data.hook.init = function (vnode) {\n      if (vnode.data.keepAlive &&\n        vnode.componentInstance &&\n        vnode.componentInstance !== matched.instances[name]\n      ) {\n        matched.instances[name] = vnode.componentInstance;\n      }\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n}\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'RouterLink',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n      ? 'router-link-active'\n      : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n      ? 'router-link-exact-active'\n      : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n      ? activeClassFallback\n      : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n      ? exactActiveClassFallback\n      : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n}\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('RouterView', View);\n  Vue.component('RouterLink', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  params = params || {};\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n\n    // Fix #2505 resolving asterisk routes { name: 'not-found', params: { pathMatch: '/not-found' }}\n    if (params.pathMatch) { params[0] = params.pathMatch; }\n\n    return filler(params, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  } finally {\n    // delete the 0 if it was added\n    delete params[0];\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next._normalized) {\n    return next\n  } else if (next.name) {\n    return extend({}, raw)\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = extend({}, next);\n    next._normalized = true;\n    var params = extend(extend({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\n/*  */\n\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n      ? originalRedirect(createRoute(record, location, null, router))\n      : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      // Fix #1994: using * with props: true generates a param named 0\n      params[key.name || 'pathMatch'] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  // Fix for #2195 Add optional third attribute to workaround a bug in safari https://bugs.webkit.org/show_bug.cgi?id=182678\n  window.history.replaceState({ key: getStateKey() }, '', window.location.href.replace(window.location.origin, ''));\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior.call(router, to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (\n    instances[key] &&\n    !instances[key]._isBeingDestroyed // do not reuse being destroyed instance\n  ) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\nvar HTML5History = /*@__PURE__*/(function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (supportsScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = decodeURI(window.location.pathname);\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\nvar HashHistory = /*@__PURE__*/(function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  // empty path\n  if (index < 0) { return '' }\n\n  href = href.slice(index + 1);\n  // decode the hash but not the search or hash\n  // as search(query) is already decoded\n  // https://github.com/vuejs/vue-router/issues/2708\n  var searchIndex = href.indexOf('?');\n  if (searchIndex < 0) {\n    var hashIndex = href.indexOf('#');\n    if (hashIndex > -1) { href = decodeURI(href.slice(0, hashIndex)) + href.slice(hashIndex); }\n    else { href = decodeURI(href); }\n  } else {\n    if (searchIndex > -1) { href = decodeURI(href.slice(0, searchIndex)) + href.slice(searchIndex); }\n  }\n\n  return href\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\nvar AbstractHistory = /*@__PURE__*/(function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\n\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // set up app destroyed handler\n  // https://github.com/vuejs/vue-router/issues/2639\n  app.$once('hook:destroyed', function () {\n    // clean out app from this.apps array once destroyed\n    var index = this$1.apps.indexOf(app);\n    if (index > -1) { this$1.apps.splice(index, 1); }\n    // ensure we still have a main app or null if no apps\n    // we do not release the router so it can be reused\n    if (this$1.app === app) { this$1.app = this$1.apps[0] || null; }\n  });\n\n  // main app previously initialized\n  // return as we don't need to set up new history listener\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  current = current || this.history.current;\n  var location = normalizeLocation(\n    to,\n    current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.6';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n"]}]}