{"remainingRequest":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\vee-validate\\dist\\vee-validate.esm.js","dependencies":[{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\vee-validate\\dist\\vee-validate.esm.js","mtime":1557404430000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\mine\\搭webpack环境\\so\\node_modules\\vee-validate\\dist\\vee-validate.esm.js"],"names":["isTextInput","includes","el","isCheckboxOrRadioInput","isDateInput","getDataAttribute","isNaN$1","Number","value","isNullOrUndefined","values","len","arguments","createFlags","untouched","touched","dirty","pristine","valid","invalid","validated","pending","required","changed","isEqual","lhs","rhs","Array","i","isObject","getScope","scope","form","getForm","getPath","def","path","prop","hasPath","obj","previousPath","isNullOrNonObject","isValidPath","reducer","process","parseRule","params","name","rule","debounce","wait","token","cancelled","args","later","timeout","fn","clearTimeout","setTimeout","appendRule","normalizeRules","rules","assign","prev","warn","parsedRule","console","createError","isCallable","hasClass","addClass","removeClass","reg","toggleClass","className","toArray","array","length","arrayLike","ensureArray","isEmptyArray","others","Object","target","to","arg","id","idTemplate","uniqId","newId","String","findIndex","predicate","find","idx","isBuiltInComponent","tag","vnode","makeDelayObject","e","delay","delayConfig","deepParseInt","parseInt","map","input","merge","source","obj$1","fillRulesFromElement","regex","pattern","timeFormat","parseSelector","selector","parts","collection","arr","defineNonReactive","configurable","writable","LOCALE","Dictionary","dictionary","prototypeAccessors","locale","message","dict","fallback","messages","attributes","drivers","en","custom","currentDriver","DictionaryResolver","implementation","ErrorBag","errorBag","Symbol","this$1","index","next","done","ref","error","item","filterFn","matchesScope","matchesVM","isSingleField","field","groupErrors","errors","isPrimary","isAlt","collected","primary","alt","match","condition","matches","shouldRemove","matchesRule","matchesName","isLast","DEFAULT_CONFIG","errorBagName","fieldsBagName","classes","classNames","events","inject","fastExit","aria","validity","mode","useConstraintAttrs","i18n","i18nRootKey","currentConfig","resolveConfig","selfConfig","getConfig","setConfig","d","findModel","children","extractChildren","candidates","extractVNodes","nodes","prevHandler","node","mergeVNodeListeners","addComponentNodeListener","addNativeNodeListener","findModelConfig","event","model","type","slots","Resolver","options","listen","binding","bails","vm","expression","component","getter","immediate","persist","initialValue","config","normalized","globalDelay","watchable","lazy","boundGetter","els","document","checkbox","elm","opt","RULES","RuleContainer","staticAccessors","validate","paramNames","isEvent","evt","normalizeEvents","evts","supportsPassive","detectPassiveSupport","opts","get","window","addEventListener","passive","DEFAULT_OPTIONS","targetOf","Field","prototypeAccessors$1","validator","isRequired","isDisabled","alias","rejectsFalse","matchesComponentId","defaults","flag","negated","flags","fields","r","ref$1","w","isReset","applyClasses","onBlur","inputEvent","onInput","unwatch","blurEvent","ctx","debouncedFn","addListener","applyAriaAttrs","FieldBag","items","itemsById","prototypeAccessors$2","matcher","ScopedValidator","base","prototypeAccessors$3","f","acc","vmId","attachOpts","Promise","VALIDATOR","getValidator","setValidator","requestsValidator","injections","mixin","provide","$validator","beforeCreate","requested","Vue","beforeDestroy","context","directive","bind","fieldOptions","inserted","findField","update","unbind","Validator","pluginContainer","_vm","$nextTick","cb","$emit","$off","prototypeAccessors$4","staticAccessors$1","hasChanged","mergedOpts","hasTarget","lang","oldFieldMatcher","fieldOpts","oldField","initial","result","uid","silent","fieldDescriptor","matched","validationPromise","providedValues","t","forceRequired","targetRules","targetKey","ruleMap","failedRules","validations","format","data","targetName","paramName","localizedName","hasKeys","dateFormat","allValid","msg","regenerate","fieldScope","fieldName","fullName","matchers","m","results","allErrors","curr","requireRules","ruleOptions","promises","isExitEarly","resolve","v","normalizeValue","normalizeFormat","I18nDictionary","prototypeAccessors$5","dataOptions","clone","localeKey","aggressive","on","eager","modes","VeeValidate$1","pluginInstance","prototypeAccessors$6","i18nDriver","staticAccessors$2","pendingPlugins","plugin","Rules","_Vue","onLocaleChanged","formatFileSize","units","threshold","size","Math","isDefinedGlobally","_default","after","inclusion","alpha","alpha_dash","alpha_num","alpha_spaces","before","between","min","max","confirmed","credit_card","date_between","date_format","decimal","decimals","digits","dimensions","width","height","email","excluded","ext","image","included","integer","ip","ip_or_fqdn","max_value","mimes","min_value","numeric","required_if","url","VeeValidate","dirtyNumber","number","isNaN","MILLISECONDS_IN_MINUTE","date","dirtyDate","baseTimezoneOffset","millisecondsPartOfTimezoneOffset","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE$1","DEFAULT_ADDITIONAL_DIGITS","patterns","dateTimeDelimeter","plainTime","timeZoneDelimeter","YY","YYY","YYYY","YYYYY","MM","DDD","MMDD","Www","WwwD","HH","HHMM","HHMMSS","timezone","timezoneZ","timezoneHH","timezoneHHMM","argument","dirtyOptions","additionalDigits","toInteger","dateStrings","splitDateString","parseYearResult","parseYear","year","restDateString","parseDate","timestamp","time","parseTime","offset","parseTimezone","getTimezoneOffsetInMilliseconds","dateString","timeString","patternYYY","patternYYYYY","yearString","centuryString","month","validateDate","dayOfYear","validateDayOfYearDate","day","week","validateWeekDate","dayOfISOWeekYear","dayOfWeek","hours","parseFloat","validateTime","minutes","seconds","validateTimezone","absoluteOffset","fourthOfJanuaryDay","diff","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYear","isLeapYearIndex","toDate","amount","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","count","dateFormats","full","medium","timeFormats","dateTimeFormats","formatLong","buildFormatLongFn","formats","defaultWidth","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","valuesArray","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","rem100","localize","ordinalNumber","era","buildLocalizeFn","quarter","argumentCallback","dayPeriod","formattingValues","defaulFormattingWidth","string","matchResult","matchedString","parseResult","rest","matchPattern","parsePatterns","findKey","object","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","buildMatchPatternFn","parsePattern","valueCallback","buildMatchFn","matchPatterns","defaultMatchWidth","defaultParseWidth","locale$1","formatDistance","formatRelative","weekStartsOn","firstWeekContainsDate","MILLISECONDS_IN_DAY","startOfYearTimestamp","difference","fourthOfJanuaryOfNextYear","startOfNextYear","startOfUTCISOWeek","fourthOfJanuaryOfThisYear","startOfThisYear","getUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","startOfUTCISOWeekYear","localeWeekStartsOn","defaultWeekStartsOn","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","startOfUTCWeek","firstWeekOfThisYear","getUTCWeekYear","firstWeek","MILLISECONDS_IN_WEEK$1","startOfUTCWeekYear","dayPeriodEnum","formatters","G","y","signedYear","twoDigitYear","addLeadingZeros","unit","Y","signedWeekYear","weekYear","R","isoWeekYear","u","Q","q","M","L","getUTCWeek","I","isoWeek","getUTCISOWeek","dayOfMonth","D","getUTCDayOfYear","E","localDayOfWeek","c","isoDayOfWeek","a","dayPeriodEnumValue","b","B","h","H","K","k","s","S","numberOfDigits","milliseconds","fractionalSeconds","X","originalDate","timezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","T","sign","output","delimeter","dirtyDelimeter","absOffset","datePattern","timePattern","dateLongFormatter","dateTimeFormat","timeLongFormatter","longFormatters","p","P","dateTimeLongFormatter","addMilliseconds","protectedTokens","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","formatStr","isValid","utcDate","subMilliseconds","formatterOptions","_originalDate","firstCharacter","substring","longFormatter","cleanEscapedString","formatter","isProtectedToken","throwProtectedError","dateToCompare","dateLeft","dateRight","currentDay","remainder","dayIndex","MILLISECONDS_IN_HOUR$1","MILLISECONDS_IN_MINUTE$2","MILLISECONDS_IN_SECOND","numericPatterns","hour23h","hour24h","hour11h","hour12h","minute","second","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","basicOptionalMinutes","basic","basicOptionalSeconds","extended","extendedOptionalSeconds","parseNumericPattern","isCommonEra","currentYear","absCurrentYear","rangeEnd","rangeEndCentury","isPreviousCentury","DAYS_IN_MONTH$1","DAYS_IN_MONTH_LEAP_YEAR$1","parsers","priority","parse","set","isTwoDigitYear","parseNDigits","normalizedTwoDigitYear","normalizeTwoDigitYear","parseNDigitsSigned","firstWeekOfYear","setUTCWeek","setUTCISOWeek","isLeapYearIndex$1","setUTCDay","wholeWeekDays","setUTCISODay","dayPeriodEnumToHours","isPM","parseTimezonePattern","parseAnyDigitsSigned","TIMEZONE_UNIT_PRIORITY","formattingTokensRegExp$1","escapedStringRegExp$1","doubleQuoteRegExp$1","notWhitespaceRegExp","formatString","subFnOptions","setters","tokens","parser","cleanEscapedString$1","uniquePrioritySetters","setter","setterArray","convertedDate","parsed","afterValidator","targetValue","parseDate$1","isAfter","isEqual$1","isDate","cs","da","de","es","fr","it","lt","nl","hu","pl","pt","ru","sk","sr","sv","tr","uk","ar","az","alphaSpaces","alphanumeric","alphaDash","paramNames$1","alpha$1","validate$1","paramNames$2","validate$2","paramNames$3","validate$3","paramNames$4","validate$4","isBefore","options$1","paramNames$5","validate$5","paramNames$6","validate$6","options$2","paramNames$7","exports","module","assertString_1","createCommonjsModule","_typeof","isString","invalidType","unwrapExports","isCreditCard_1","_assertString2","_interopRequireDefault","creditCard","sanitized","str","sum","digit","tmpNum","shouldDouble","isCreditCard","validate$7","validate$8","inclusivity","minDate","maxDate","dateVal","options$3","paramNames$8","validate$9","options$4","paramNames$9","validate$a","separator","regexPart","parsedValue","paramNames$a","validate$b","strVal","imageRegex","validateImage","URL","validate$c","images","file","merge_1","isByteLength_1","encodeURI","isFQDN_1","_merge2","default_fqdn_options","require_tld","allow_underscores","allow_trailing_dot","tld","_i","part","isFQDN","isIP_1","ipv4Maybe","ipv6Block","version","isIP","blocks","foundOmissionBlock","foundIPv4TransitionBlock","expectedNumberOfBlocks","isEmail_1","_isByteLength2","_isFQDN2","_isIP2","default_email_options","allow_display_name","require_display_name","allow_utf8_local_part","displayName","emailUserPart","gmailUserPart","quotedEmailUser","emailUserUtf8Part","quotedEmailUserUtf8","display_email","domain","user","lower_domain","username","_user_parts","noBracketdomain","user_parts","isEmail","exclude","validate$d","multiple","objectWithoutProperties","emailStr","validatorOptions","validate$e","validate$f","validate$g","extensions","validate$h","validate$i","validate$j","paramNames$b","validate$k","validate$l","is","validate$m","is_not","compare","validate$n","validate$o","validate$p","validate$q","validate$r","validate$s","validate$t","testValue","strValue","validate$u","paramNames$c","validate$v","invalidateFalse","validate$w","otherFieldVal","possibleVals","options$5","computesRequired","validate$x","nSize","isURL_1","default_url_options","protocols","require_protocol","require_host","require_valid_protocol","allow_protocol_relative_urls","wrapped_ipv6","host","isRegExp","protocol","auth","hostname","port","port_str","split","ipv6","ipv6_match","checkHost","isURL","validate$y","normalize","combine","mapper","mapScope","deep","isScope","mapFields","PROVIDER_COUNTER","reset","compute","validateNow","shouldValidate","onValidate","computeModeSetting","pendingPromise","getInputEventName","onRenderUpdate","createCommonHandlers","addVNodeListener","providers","vid","refs","subscribe","unsubscribe","ValidationProvider","$__veeInject","$_veeObserver","from","createObserver","props","watch","handler","initialized","isDeactivated","computed","fieldDeps","depName","watcherName","normalizedEvents","names","render","createValidationCtx","slot","addListeners","activated","deactivated","methods","setFlags","syncValue","normalizeValue$1","validateSilent","createValuesLookup","applyResult","registerField","updateRenderingContextRefs","flagMergingStrategy","stratName","OBSERVER_COUNTER","ValidationObserver","observers","promise","then","success","thenable","provider","mergeFlags","errs","created","attrs","$attrs","kind","subscriber","o","restoreProviderState","state","removeProvider","ctxToProps","hoc","eventName","vctx","listeners","normalizeSlots","install"],"mappings":"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","sourcesContent":["/**\n  * vee-validate v2.2.7\n  * (c) 2019 Abdelrahman Awad\n  * @license MIT\n  */\n// \n\nvar isTextInput = function (el) {\n  return includes(['text', 'password', 'search', 'email', 'tel', 'url', 'textarea', 'number'], el.type);\n};\n\nvar isCheckboxOrRadioInput = function (el) {\n  return includes(['radio', 'checkbox'], el.type);\n};\n\nvar isDateInput = function (el) {\n  return includes(['date', 'week', 'month', 'datetime-local', 'time'], el.type);\n};\n\n/**\n * Gets the data attribute. the name must be kebab-case.\n */\nvar getDataAttribute = function (el, name) { return el.getAttribute((\"data-vv-\" + name)); };\n\nvar isNaN$1 = function (value) {\n  if ('isNaN' in Number) {\n    return Number.isNaN(value);\n  }\n\n  // eslint-disable-next-line\n  return value === value;\n};\n\n/**\n * Checks if the values are either null or undefined.\n */\nvar isNullOrUndefined = function () {\n  var values = [], len = arguments.length;\n  while ( len-- ) values[ len ] = arguments[ len ];\n\n  return values.every(function (value) {\n    return value === null || value === undefined;\n  });\n};\n\n/**\n * Creates the default flags object.\n */\nvar createFlags = function () { return ({\n  untouched: true,\n  touched: false,\n  dirty: false,\n  pristine: true,\n  valid: null,\n  invalid: null,\n  validated: false,\n  pending: false,\n  required: false,\n  changed: false\n}); };\n\n/**\n * Shallow object comparison.\n */\nvar isEqual = function (lhs, rhs) {\n  if (lhs instanceof RegExp && rhs instanceof RegExp) {\n    return isEqual(lhs.source, rhs.source) && isEqual(lhs.flags, rhs.flags);\n  }\n\n  if (Array.isArray(lhs) && Array.isArray(rhs)) {\n    if (lhs.length !== rhs.length) { return false; }\n\n    for (var i = 0; i < lhs.length; i++) {\n      if (!isEqual(lhs[i], rhs[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // if both are objects, compare each key recursively.\n  if (isObject(lhs) && isObject(rhs)) {\n    return Object.keys(lhs).every(function (key) {\n      return isEqual(lhs[key], rhs[key]);\n    }) && Object.keys(rhs).every(function (key) {\n      return isEqual(lhs[key], rhs[key]);\n    });\n  }\n\n  if (isNaN$1(lhs) && isNaN$1(rhs)) {\n    return true;\n  }\n\n  return lhs === rhs;\n};\n\n/**\n * Determines the input field scope.\n */\nvar getScope = function (el) {\n  var scope = getDataAttribute(el, 'scope');\n  if (isNullOrUndefined(scope)) {\n    var form = getForm(el);\n\n    if (form) {\n      scope = getDataAttribute(form, 'scope');\n    }\n  }\n\n  return !isNullOrUndefined(scope) ? scope : null;\n};\n\n/**\n * Get the closest form element.\n */\nvar getForm = function (el) {\n  if (isNullOrUndefined(el)) { return null; }\n\n  if (el.tagName === 'FORM') { return el; }\n\n  if (!isNullOrUndefined(el.form)) { return el.form; }\n\n  return !isNullOrUndefined(el.parentNode) ? getForm(el.parentNode) : null;\n};\n\n/**\n * Gets the value in an object safely.\n */\nvar getPath = function (path, target, def) {\n  if ( def === void 0 ) def = undefined;\n\n  if (!path || !target) { return def; }\n\n  var value = target;\n  path.split('.').every(function (prop) {\n    if (prop in value) {\n      value = value[prop];\n\n      return true;\n    }\n\n    value = def;\n\n    return false;\n  });\n\n  return value;\n};\n\n/**\n * Checks if path exists within an object.\n */\nvar hasPath = function (path, target) {\n  var obj = target;\n  var previousPath = null;\n  var isNullOrNonObject = false;\n  var isValidPath = path.split('.').reduce(function (reducer, prop) {\n    if (obj == null || typeof obj !== 'object') {\n      isNullOrNonObject = true;\n      return reducer && false;\n    }\n\n    if (prop in obj) {\n      obj = obj[prop];\n      previousPath = previousPath === null ? prop : previousPath + '.' + prop;\n\n      return reducer && true;\n    }\n\n    return reducer && false;\n  }, true);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNullOrNonObject) {\n      throw new Error(previousPath + ' is not an object');\n    }\n  }\n\n  return isValidPath;\n};\n\n/**\n * Parses a rule string expression.\n */\nvar parseRule = function (rule) {\n  var params = [];\n  var name = rule.split(':')[0];\n\n  if (includes(rule, ':')) {\n    params = rule.split(':').slice(1).join(':').split(',');\n  }\n\n  return { name: name, params: params };\n};\n\n/**\n * Debounces a function.\n */\nvar debounce = function (fn, wait, token) {\n  if ( wait === void 0 ) wait = 0;\n  if ( token === void 0 ) token = { cancelled: false };\n\n  if (wait === 0) {\n    return fn;\n  }\n\n  var timeout;\n\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var later = function () {\n      timeout = null;\n\n      // check if the fn call was cancelled.\n      if (!token.cancelled) { fn.apply(void 0, args); }\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (!timeout) { fn.apply(void 0, args); }\n  };\n};\n\n/**\n * Appends a rule definition to a list of rules.\n */\nvar appendRule = function (rule, rules) {\n  if (!rules) {\n    return normalizeRules(rule);\n  }\n\n  if (!rule) {\n    return normalizeRules(rules);\n  }\n\n  if (typeof rules === 'string') {\n    rules = normalizeRules(rules);\n  }\n\n  return assign({}, rules, normalizeRules(rule));\n};\n\n/**\n * Normalizes the given rules expression.\n */\nvar normalizeRules = function (rules) {\n  // if falsy value return an empty object.\n  if (!rules) {\n    return {};\n  }\n\n  if (isObject(rules)) {\n    // $FlowFixMe\n    return Object.keys(rules).reduce(function (prev, curr) {\n      var params = [];\n      // $FlowFixMe\n      if (rules[curr] === true) {\n        params = [];\n      } else if (Array.isArray(rules[curr])) {\n        params = rules[curr];\n      } else if (isObject(rules[curr])) {\n        params = rules[curr];\n      } else {\n        params = [rules[curr]];\n      }\n\n      // $FlowFixMe\n      if (rules[curr] !== false) {\n        prev[curr] = params;\n      }\n\n      return prev;\n    }, {});\n  }\n\n  if (typeof rules !== 'string') {\n    warn('rules must be either a string or an object.');\n    return {};\n  }\n\n  return rules.split('|').reduce(function (prev, rule) {\n    var parsedRule = parseRule(rule);\n    if (!parsedRule.name) {\n      return prev;\n    }\n\n    prev[parsedRule.name] = parsedRule.params;\n    return prev;\n  }, {});\n};\n\n/**\n * Emits a warning to the console.\n */\nvar warn = function (message) {\n  console.warn((\"[vee-validate] \" + message)); // eslint-disable-line\n};\n\n/**\n * Creates a branded error object.\n */\nvar createError = function (message) { return new Error((\"[vee-validate] \" + message)); };\n\n/**\n * Checks if the value is an object.\n */\nvar isObject = function (obj) { return obj !== null && obj && typeof obj === 'object' && ! Array.isArray(obj); };\n\n/**\n * Checks if a function is callable.\n */\nvar isCallable = function (func) { return typeof func === 'function'; };\n\n/**\n * Check if element has the css class on it.\n */\nvar hasClass = function (el, className) {\n  if (el.classList) {\n    return el.classList.contains(className);\n  }\n\n  return !!el.className.match(new RegExp((\"(\\\\s|^)\" + className + \"(\\\\s|$)\")));\n};\n\n/**\n * Adds the provided css className to the element.\n */\nvar addClass = function (el, className) {\n  if (el.classList) {\n    el.classList.add(className);\n    return;\n  }\n\n  if (!hasClass(el, className)) {\n    el.className += \" \" + className;\n  }\n};\n\n/**\n * Remove the provided css className from the element.\n */\nvar removeClass = function (el, className) {\n  if (el.classList) {\n    el.classList.remove(className);\n    return;\n  }\n\n  if (hasClass(el, className)) {\n    var reg = new RegExp((\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n    el.className = el.className.replace(reg, ' ');\n  }\n};\n\n/**\n * Adds or removes a class name on the input depending on the status flag.\n */\nvar toggleClass = function (el, className, status) {\n  if (!el || !className) { return; }\n\n  if (Array.isArray(className)) {\n    className.forEach(function (item) { return toggleClass(el, item, status); });\n    return;\n  }\n\n  if (status) {\n    return addClass(el, className);\n  }\n\n  removeClass(el, className);\n};\n\n/**\n * Converts an array-like object to array, provides a simple polyfill for Array.from\n */\nvar toArray = function (arrayLike) {\n  if (isCallable(Array.from)) {\n    return Array.from(arrayLike);\n  }\n\n  var array = [];\n  var length = arrayLike.length;\n  /* istanbul ignore next */\n  for (var i = 0; i < length; i++) {\n    array.push(arrayLike[i]);\n  }\n\n  /* istanbul ignore next */\n  return array;\n};\n\n/**\n * Converts an array-like object to array and place other elements in an array\n */\nvar ensureArray = function (arrayLike) {\n  if (Array.isArray(arrayLike)) {\n    return [].concat( arrayLike );\n  }\n  var array = toArray(arrayLike);\n  return isEmptyArray(array) ? [arrayLike] : array;\n};\n\n/**\n * Assign polyfill from the mdn.\n */\nvar assign = function (target) {\n  var others = [], len = arguments.length - 1;\n  while ( len-- > 0 ) others[ len ] = arguments[ len + 1 ];\n\n  /* istanbul ignore else */\n  if (isCallable(Object.assign)) {\n    return Object.assign.apply(Object, [ target ].concat( others ));\n  }\n\n  /* istanbul ignore next */\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  /* istanbul ignore next */\n  var to = Object(target);\n  /* istanbul ignore next */\n  others.forEach(function (arg) {\n    // Skip over if undefined or null\n    if (arg != null) {\n      Object.keys(arg).forEach(function (key) {\n        to[key] = arg[key];\n      });\n    }\n  });\n  /* istanbul ignore next */\n  return to;\n};\n\nvar id = 0;\nvar idTemplate = '{id}';\n\n/**\n * Generates a unique id.\n */\nvar uniqId = function () {\n  // handle too many uses of uniqId, although unlikely.\n  if (id >= 9999) {\n    id = 0;\n    // shift the template.\n    idTemplate = idTemplate.replace('{id}', '_{id}');\n  }\n\n  id++;\n  var newId = idTemplate.replace('{id}', String(id));\n\n  return newId;\n};\n\nvar findIndex = function (arrayLike, predicate) {\n  var array = Array.isArray(arrayLike) ? arrayLike : toArray(arrayLike);\n  for (var i = 0; i < array.length; i++) {\n    if (predicate(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * finds the first element that satisfies the predicate callback, polyfills array.find\n */\nvar find = function (arrayLike, predicate) {\n  var array = Array.isArray(arrayLike) ? arrayLike : toArray(arrayLike);\n  var idx = findIndex(array, predicate);\n\n  return idx === -1 ? undefined : array[idx];\n};\n\nvar isBuiltInComponent = function (vnode) {\n  if (!vnode) {\n    return false;\n  }\n\n  var tag = vnode.componentOptions.tag;\n\n  return /^(keep-alive|transition|transition-group)$/.test(tag);\n};\n\nvar makeDelayObject = function (events, delay, delayConfig) {\n  if (typeof delay === 'number') {\n    return events.reduce(function (prev, e) {\n      prev[e] = delay;\n      return prev;\n    }, {});\n  }\n\n  return events.reduce(function (prev, e) {\n    if (typeof delay === 'object' && e in delay) {\n      prev[e] = delay[e];\n      return prev;\n    }\n\n    if (typeof delayConfig === 'number') {\n      prev[e] = delayConfig;\n      return prev;\n    }\n\n    prev[e] = (delayConfig && delayConfig[e]) || 0;\n\n    return prev;\n  }, {});\n};\n\nvar deepParseInt = function (input) {\n  if (typeof input === 'number') { return input; }\n\n  if (typeof input === 'string') { return parseInt(input); }\n\n  var map = {};\n  for (var element in input) {\n    map[element] = parseInt(input[element]);\n  }\n\n  return map;\n};\n\nvar merge = function (target, source) {\n  if (! (isObject(target) && isObject(source))) {\n    return target;\n  }\n\n  Object.keys(source).forEach(function (key) {\n    var obj, obj$1;\n\n    if (isObject(source[key])) {\n      if (! target[key]) {\n        assign(target, ( obj = {}, obj[key] = {}, obj ));\n      }\n\n      merge(target[key], source[key]);\n      return;\n    }\n\n    assign(target, ( obj$1 = {}, obj$1[key] = source[key], obj$1 ));\n  });\n\n  return target;\n};\n\nvar fillRulesFromElement = function (el, rules) {\n  if (el.required) {\n    rules = appendRule('required', rules);\n  }\n\n  if (isTextInput(el)) {\n    if (el.type === 'email') {\n      rules = appendRule((\"email\" + (el.multiple ? ':multiple' : '')), rules);\n    }\n\n    if (el.pattern) {\n      rules = appendRule({ regex: el.pattern }, rules);\n    }\n\n    // 524288 is the max on some browsers and test environments.\n    if (el.maxLength >= 0 && el.maxLength < 524288) {\n      rules = appendRule((\"max:\" + (el.maxLength)), rules);\n    }\n\n    if (el.minLength > 0) {\n      rules = appendRule((\"min:\" + (el.minLength)), rules);\n    }\n\n    if (el.type === 'number') {\n      rules = appendRule('decimal', rules);\n      if (el.min !== '') {\n        rules = appendRule((\"min_value:\" + (el.min)), rules);\n      }\n\n      if (el.max !== '') {\n        rules = appendRule((\"max_value:\" + (el.max)), rules);\n      }\n    }\n\n    return rules;\n  }\n\n  if (isDateInput(el)) {\n    var timeFormat = el.step && Number(el.step) < 60 ? 'HH:mm:ss' : 'HH:mm';\n\n    if (el.type === 'date') {\n      return appendRule('date_format:yyyy-MM-dd', rules);\n    }\n\n    if (el.type === 'datetime-local') {\n      return appendRule((\"date_format:yyyy-MM-ddT\" + timeFormat), rules);\n    }\n\n    if (el.type === 'month') {\n      return appendRule('date_format:yyyy-MM', rules);\n    }\n\n    if (el.type === 'week') {\n      return appendRule('date_format:yyyy-[W]WW', rules);\n    }\n\n    if (el.type === 'time') {\n      return appendRule((\"date_format:\" + timeFormat), rules);\n    }\n  }\n\n  return rules;\n};\n\nvar values = function (obj) {\n  if (isCallable(Object.values)) {\n    return Object.values(obj);\n  }\n\n  // fallback to keys()\n  /* istanbul ignore next */\n  return Object.keys(obj).map(function (k) { return obj[k]; });\n};\n\nvar parseSelector = function (selector) {\n  var rule = null;\n  if (includes(selector, ':')) {\n    rule = selector.split(':').pop();\n    selector = selector.replace((\":\" + rule), '');\n  }\n\n  if (selector[0] === '#') {\n    return {\n      id: selector.slice(1),\n      rule: rule,\n      name: null,\n      scope: null\n    };\n  }\n\n  var scope = null;\n  var name = selector;\n  if (includes(selector, '.')) {\n    var parts = selector.split('.');\n    scope = parts[0];\n    name = parts.slice(1).join('.');\n  }\n\n  return {\n    id: null,\n    scope: scope,\n    name: name,\n    rule: rule\n  };\n};\n\nvar includes = function (collection, item) {\n  return collection.indexOf(item) !== -1;\n};\n\nvar isEmptyArray = function (arr) {\n  return Array.isArray(arr) && arr.length === 0;\n};\n\nvar defineNonReactive = function (obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    configurable: false,\n    writable: true,\n    value: value\n  });\n};\n\n// \n\nvar LOCALE = 'en';\n\nvar Dictionary = function Dictionary (dictionary) {\n  if ( dictionary === void 0 ) dictionary = {};\n\n  this.container = {};\n  this.merge(dictionary);\n};\n\nvar prototypeAccessors = { locale: { configurable: true } };\n\nprototypeAccessors.locale.get = function () {\n  return LOCALE;\n};\n\nprototypeAccessors.locale.set = function (value) {\n  LOCALE = value || 'en';\n};\n\nDictionary.prototype.hasLocale = function hasLocale (locale) {\n  return !!this.container[locale];\n};\n\nDictionary.prototype.setDateFormat = function setDateFormat (locale, format) {\n  if (!this.container[locale]) {\n    this.container[locale] = {};\n  }\n\n  this.container[locale].dateFormat = format;\n};\n\nDictionary.prototype.getDateFormat = function getDateFormat (locale) {\n  if (!this.container[locale] || !this.container[locale].dateFormat) {\n    return null;\n  }\n\n  return this.container[locale].dateFormat;\n};\n\nDictionary.prototype.getMessage = function getMessage (locale, key, data) {\n  var message = null;\n  if (!this.hasMessage(locale, key)) {\n    message = this._getDefaultMessage(locale);\n  } else {\n    message = this.container[locale].messages[key];\n  }\n\n  return isCallable(message) ? message.apply(void 0, data) : message;\n};\n\n/**\n * Gets a specific message for field. falls back to the rule message.\n */\nDictionary.prototype.getFieldMessage = function getFieldMessage (locale, field, key, data) {\n  if (!this.hasLocale(locale)) {\n    return this.getMessage(locale, key, data);\n  }\n\n  var dict = this.container[locale].custom && this.container[locale].custom[field];\n  if (!dict || !dict[key]) {\n    return this.getMessage(locale, key, data);\n  }\n\n  var message = dict[key];\n  return isCallable(message) ? message.apply(void 0, data) : message;\n};\n\nDictionary.prototype._getDefaultMessage = function _getDefaultMessage (locale) {\n  if (this.hasMessage(locale, '_default')) {\n    return this.container[locale].messages._default;\n  }\n\n  return this.container.en.messages._default;\n};\n\nDictionary.prototype.getAttribute = function getAttribute (locale, key, fallback) {\n    if ( fallback === void 0 ) fallback = '';\n\n  if (!this.hasAttribute(locale, key)) {\n    return fallback;\n  }\n\n  return this.container[locale].attributes[key];\n};\n\nDictionary.prototype.hasMessage = function hasMessage (locale, key) {\n  return !! (\n    this.hasLocale(locale) &&\n          this.container[locale].messages &&\n          this.container[locale].messages[key]\n  );\n};\n\nDictionary.prototype.hasAttribute = function hasAttribute (locale, key) {\n  return !! (\n    this.hasLocale(locale) &&\n          this.container[locale].attributes &&\n          this.container[locale].attributes[key]\n  );\n};\n\nDictionary.prototype.merge = function merge$1 (dictionary) {\n  merge(this.container, dictionary);\n};\n\nDictionary.prototype.setMessage = function setMessage (locale, key, message) {\n  if (! this.hasLocale(locale)) {\n    this.container[locale] = {\n      messages: {},\n      attributes: {}\n    };\n  }\n\n  this.container[locale].messages[key] = message;\n};\n\nDictionary.prototype.setAttribute = function setAttribute (locale, key, attribute) {\n  if (! this.hasLocale(locale)) {\n    this.container[locale] = {\n      messages: {},\n      attributes: {}\n    };\n  }\n\n  this.container[locale].attributes[key] = attribute;\n};\n\nObject.defineProperties( Dictionary.prototype, prototypeAccessors );\n\nvar drivers = {\n  default: new Dictionary({\n    en: {\n      messages: {},\n      attributes: {},\n      custom: {}\n    }\n  })\n};\n\nvar currentDriver = 'default';\n\nvar DictionaryResolver = function DictionaryResolver () {};\n\nDictionaryResolver._checkDriverName = function _checkDriverName (driver) {\n  if (!driver) {\n    throw createError('you must provide a name to the dictionary driver');\n  }\n};\n\nDictionaryResolver.setDriver = function setDriver (driver, implementation) {\n    if ( implementation === void 0 ) implementation = null;\n\n  this._checkDriverName(driver);\n  if (implementation) {\n    drivers[driver] = implementation;\n  }\n\n  currentDriver = driver;\n};\n\nDictionaryResolver.getDriver = function getDriver () {\n  return drivers[currentDriver];\n};\n\n// \n\nvar ErrorBag = function ErrorBag (errorBag, id) {\n  if ( errorBag === void 0 ) errorBag = null;\n  if ( id === void 0 ) id = null;\n\n  this.vmId = id || null;\n  // make this bag a mirror of the provided one, sharing the same items reference.\n  if (errorBag && errorBag instanceof ErrorBag) {\n    this.items = errorBag.items;\n  } else {\n    this.items = [];\n  }\n};\n\nErrorBag.prototype[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'] = function () {\n    var this$1 = this;\n\n  var index = 0;\n  return {\n    next: function () {\n      return { value: this$1.items[index++], done: index > this$1.items.length };\n    }\n  };\n};\n\n/**\n * Adds an error to the internal array.\n */\nErrorBag.prototype.add = function add (error) {\n    var ref;\n\n  (ref = this.items).push.apply(\n    ref, this._normalizeError(error)\n  );\n};\n\n/**\n * Normalizes passed errors to an error array.\n */\nErrorBag.prototype._normalizeError = function _normalizeError (error) {\n    var this$1 = this;\n\n  if (Array.isArray(error)) {\n    return error.map(function (e) {\n      e.scope = !isNullOrUndefined(e.scope) ? e.scope : null;\n      e.vmId = !isNullOrUndefined(e.vmId) ? e.vmId : (this$1.vmId || null);\n\n      return e;\n    });\n  }\n\n  error.scope = !isNullOrUndefined(error.scope) ? error.scope : null;\n  error.vmId = !isNullOrUndefined(error.vmId) ? error.vmId : (this.vmId || null);\n\n  return [error];\n};\n\n/**\n * Regenrates error messages if they have a generator function.\n */\nErrorBag.prototype.regenerate = function regenerate () {\n  this.items.forEach(function (i) {\n    i.msg = isCallable(i.regenerate) ? i.regenerate() : i.msg;\n  });\n};\n\n/**\n * Updates a field error with the new field scope.\n */\nErrorBag.prototype.update = function update (id, error) {\n  var item = find(this.items, function (i) { return i.id === id; });\n  if (!item) {\n    return;\n  }\n\n  var idx = this.items.indexOf(item);\n  this.items.splice(idx, 1);\n  item.scope = error.scope;\n  this.items.push(item);\n};\n\n/**\n * Gets all error messages from the internal array.\n */\nErrorBag.prototype.all = function all (scope) {\n    var this$1 = this;\n\n  var filterFn = function (item) {\n    var matchesScope = true;\n    var matchesVM = true;\n    if (!isNullOrUndefined(scope)) {\n      matchesScope = item.scope === scope;\n    }\n\n    if (!isNullOrUndefined(this$1.vmId)) {\n      matchesVM = item.vmId === this$1.vmId;\n    }\n\n    return matchesVM && matchesScope;\n  };\n\n  return this.items.filter(filterFn).map(function (e) { return e.msg; });\n};\n\n/**\n * Checks if there are any errors in the internal array.\n */\nErrorBag.prototype.any = function any (scope) {\n    var this$1 = this;\n\n  var filterFn = function (item) {\n    var matchesScope = true;\n    var matchesVM = true;\n    if (!isNullOrUndefined(scope)) {\n      matchesScope = item.scope === scope;\n    }\n\n    if (!isNullOrUndefined(this$1.vmId)) {\n      matchesVM = item.vmId === this$1.vmId;\n    }\n\n    return matchesVM && matchesScope;\n  };\n\n  return !!this.items.filter(filterFn).length;\n};\n\n/**\n * Removes all items from the internal array.\n */\nErrorBag.prototype.clear = function clear (scope) {\n    var this$1 = this;\n\n  var matchesVM = isNullOrUndefined(this.vmId) ? function () { return true; } : function (i) { return i.vmId === this$1.vmId; };\n  if (isNullOrUndefined(scope)) {\n    scope = null;\n  }\n\n  for (var i = 0; i < this.items.length; ++i) {\n    if (matchesVM(this.items[i]) && this.items[i].scope === scope) {\n      this.items.splice(i, 1);\n      --i;\n    }\n  }\n};\n\n/**\n * Collects errors into groups or for a specific field.\n */\nErrorBag.prototype.collect = function collect (field, scope, map) {\n    var this$1 = this;\n    if ( map === void 0 ) map = true;\n\n  var isSingleField = !isNullOrUndefined(field) && !field.includes('*');\n  var groupErrors = function (items) {\n    var errors = items.reduce(function (collection, error) {\n      if (!isNullOrUndefined(this$1.vmId) && error.vmId !== this$1.vmId) {\n        return collection;\n      }\n\n      if (!collection[error.field]) {\n        collection[error.field] = [];\n      }\n\n      collection[error.field].push(map ? error.msg : error);\n\n      return collection;\n    }, {});\n\n    // reduce the collection to be a single array.\n    if (isSingleField) {\n      return values(errors)[0] || [];\n    }\n\n    return errors;\n  };\n\n  if (isNullOrUndefined(field)) {\n    return groupErrors(this.items);\n  }\n\n  var selector = isNullOrUndefined(scope) ? String(field) : (scope + \".\" + field);\n  var ref = this._makeCandidateFilters(selector);\n    var isPrimary = ref.isPrimary;\n    var isAlt = ref.isAlt;\n\n  var collected = this.items.reduce(function (prev, curr) {\n    if (isPrimary(curr)) {\n      prev.primary.push(curr);\n    }\n\n    if (isAlt(curr)) {\n      prev.alt.push(curr);\n    }\n\n    return prev;\n  }, { primary: [], alt: [] });\n\n  collected = collected.primary.length ? collected.primary : collected.alt;\n\n  return groupErrors(collected);\n};\n\n/**\n * Gets the internal array length.\n */\nErrorBag.prototype.count = function count () {\n    var this$1 = this;\n\n  if (this.vmId) {\n    return this.items.filter(function (e) { return e.vmId === this$1.vmId; }).length;\n  }\n\n  return this.items.length;\n};\n\n/**\n * Finds and fetches the first error message for the specified field id.\n */\nErrorBag.prototype.firstById = function firstById (id) {\n  var error = find(this.items, function (i) { return i.id === id; });\n\n  return error ? error.msg : undefined;\n};\n\n/**\n * Gets the first error message for a specific field.\n */\nErrorBag.prototype.first = function first (field, scope) {\n    if ( scope === void 0 ) scope = null;\n\n  var selector = isNullOrUndefined(scope) ? field : (scope + \".\" + field);\n  var match = this._match(selector);\n\n  return match && match.msg;\n};\n\n/**\n * Returns the first error rule for the specified field\n */\nErrorBag.prototype.firstRule = function firstRule (field, scope) {\n  var errors = this.collect(field, scope, false);\n\n  return (errors.length && errors[0].rule) || undefined;\n};\n\n/**\n * Checks if the internal array has at least one error for the specified field.\n */\nErrorBag.prototype.has = function has (field, scope) {\n    if ( scope === void 0 ) scope = null;\n\n  return !!this.first(field, scope);\n};\n\n/**\n * Gets the first error message for a specific field and a rule.\n */\nErrorBag.prototype.firstByRule = function firstByRule (name, rule, scope) {\n    if ( scope === void 0 ) scope = null;\n\n  var error = this.collect(name, scope, false).filter(function (e) { return e.rule === rule; })[0];\n\n  return (error && error.msg) || undefined;\n};\n\n/**\n * Gets the first error message for a specific field that not match the rule.\n */\nErrorBag.prototype.firstNot = function firstNot (name, rule, scope) {\n    if ( rule === void 0 ) rule = 'required';\n    if ( scope === void 0 ) scope = null;\n\n  var error = this.collect(name, scope, false).filter(function (e) { return e.rule !== rule; })[0];\n\n  return (error && error.msg) || undefined;\n};\n\n/**\n * Removes errors by matching against the id or ids.\n */\nErrorBag.prototype.removeById = function removeById (id) {\n  var condition = function (item) { return item.id === id; };\n  if (Array.isArray(id)) {\n    condition = function (item) { return id.indexOf(item.id) !== -1; };\n  }\n\n  for (var i = 0; i < this.items.length; ++i) {\n    if (condition(this.items[i])) {\n      this.items.splice(i, 1);\n      --i;\n    }\n  }\n};\n\n/**\n * Removes all error messages associated with a specific field.\n */\nErrorBag.prototype.remove = function remove (field, scope, vmId) {\n  if (isNullOrUndefined(field)) {\n    return;\n  }\n\n  var selector = isNullOrUndefined(scope) ? String(field) : (scope + \".\" + field);\n  var ref = this._makeCandidateFilters(selector);\n    var isPrimary = ref.isPrimary;\n    var isAlt = ref.isAlt;\n  var matches = function (item) { return isPrimary(item) || isAlt(item); };\n  var shouldRemove = function (item) {\n    if (isNullOrUndefined(vmId)) { return matches(item); }\n\n    return matches(item) && item.vmId === vmId;\n  };\n\n  for (var i = 0; i < this.items.length; ++i) {\n    if (shouldRemove(this.items[i])) {\n      this.items.splice(i, 1);\n      --i;\n    }\n  }\n};\n\nErrorBag.prototype._makeCandidateFilters = function _makeCandidateFilters (selector) {\n    var this$1 = this;\n\n  var matchesRule = function () { return true; };\n  var matchesScope = function () { return true; };\n  var matchesName = function () { return true; };\n  var matchesVM = function () { return true; };\n\n  var ref = parseSelector(selector);\n    var id = ref.id;\n    var rule = ref.rule;\n    var scope = ref.scope;\n    var name = ref.name;\n\n  if (rule) {\n    matchesRule = function (item) { return item.rule === rule; };\n  }\n\n  // match by id, can be combined with rule selection.\n  if (id) {\n    return {\n      isPrimary: function (item) { return matchesRule(item) && (function (item) { return id === item.id; }); },\n      isAlt: function () { return false; }\n    };\n  }\n\n  if (isNullOrUndefined(scope)) {\n    // if no scope specified, make sure the found error has no scope.\n    matchesScope = function (item) { return isNullOrUndefined(item.scope); };\n  } else {\n    matchesScope = function (item) { return item.scope === scope; };\n  }\n\n  if (!isNullOrUndefined(name) && name !== '*') {\n    matchesName = function (item) { return item.field === name; };\n  }\n\n  if (!isNullOrUndefined(this.vmId)) {\n    matchesVM = function (item) { return item.vmId === this$1.vmId; };\n  }\n\n  // matches the first candidate.\n  var isPrimary = function (item) {\n    return matchesVM(item) && matchesName(item) && matchesRule(item) && matchesScope(item);\n  };\n\n  // matches a second candidate, which is a field with a name containing the '.' character.\n  var isAlt = function (item) {\n    return matchesVM(item) && matchesRule(item) && item.field === (scope + \".\" + name);\n  };\n\n  return {\n    isPrimary: isPrimary,\n    isAlt: isAlt\n  };\n};\n\nErrorBag.prototype._match = function _match (selector) {\n  if (isNullOrUndefined(selector)) {\n    return undefined;\n  }\n\n  var ref = this._makeCandidateFilters(selector);\n    var isPrimary = ref.isPrimary;\n    var isAlt = ref.isAlt;\n\n  return this.items.reduce(function (prev, item, idx, arr) {\n    var isLast = idx === arr.length - 1;\n    if (prev.primary) {\n      return isLast ? prev.primary : prev;\n    }\n\n    if (isPrimary(item)) {\n      prev.primary = item;\n    }\n\n    if (isAlt(item)) {\n      prev.alt = item;\n    }\n\n    // keep going.\n    if (!isLast) {\n      return prev;\n    }\n\n    return prev.primary || prev.alt;\n  }, {});\n};\n\nvar DEFAULT_CONFIG = {\n  locale: 'en',\n  delay: 0,\n  errorBagName: 'errors',\n  dictionary: null,\n  fieldsBagName: 'fields',\n  classes: false,\n  classNames: null,\n  events: 'input',\n  inject: true,\n  fastExit: true,\n  aria: true,\n  validity: false,\n  mode: 'aggressive',\n  useConstraintAttrs: true,\n  i18n: null,\n  i18nRootKey: 'validation'\n};\n\nvar currentConfig = assign({}, DEFAULT_CONFIG);\n\nvar resolveConfig = function (ctx) {\n  var selfConfig = getPath('$options.$_veeValidate', ctx, {});\n\n  return assign({}, currentConfig, selfConfig);\n};\n\nvar getConfig = function () { return currentConfig; };\n\nvar setConfig = function (newConf) {\n  currentConfig = assign({}, currentConfig, newConf);\n};\n\n// VNode Utils\n\n// Gets the model object on the vnode.\nfunction findModel (vnode) {\n  if (!vnode.data) {\n    return null;\n  }\n\n  // Component Model\n  if (vnode.data.model) {\n    return vnode.data.model;\n  }\n\n  return !!(vnode.data.directives) && find(vnode.data.directives, function (d) { return d.name === 'model'; });\n}\n\nfunction extractChildren (vnode) {\n  if (Array.isArray(vnode)) {\n    return vnode;\n  }\n\n  if (Array.isArray(vnode.children)) {\n    return vnode.children;\n  }\n\n  if (vnode.componentOptions && Array.isArray(vnode.componentOptions.children)) {\n    return vnode.componentOptions.children;\n  }\n\n  return [];\n}\n\nfunction extractVNodes (vnode) {\n  if (findModel(vnode)) {\n    return [vnode];\n  }\n\n  var children = extractChildren(vnode);\n\n  return children.reduce(function (nodes, node) {\n    var candidates = extractVNodes(node);\n    if (candidates.length) {\n      nodes.push.apply(nodes, candidates);\n    }\n\n    return nodes;\n  }, []);\n}\n\n// Resolves v-model config if exists.\nfunction findModelConfig (vnode) {\n  if (!vnode.componentOptions) { return null; }\n\n  return vnode.componentOptions.Ctor.options.model;\n}\n// Adds a listener to vnode listener object.\nfunction mergeVNodeListeners (obj, eventName, handler) {\n  // Has a single listener.\n  if (isCallable(obj[eventName])) {\n    var prevHandler = obj[eventName];\n    obj[eventName] = [prevHandler];\n  }\n\n  // has other listeners.\n  if (Array.isArray(obj[eventName])) {\n    obj[eventName].push(handler);\n    return;\n  }\n\n  // no listener at all.\n  if (isNullOrUndefined(obj[eventName])) {\n    obj[eventName] = [handler];\n  }\n}\n\n// Adds a listener to a native HTML vnode.\nfunction addNativeNodeListener (node, eventName, handler) {\n  if (isNullOrUndefined(node.data.on)) {\n    node.data.on = {};\n  }\n\n  mergeVNodeListeners(node.data.on, eventName, handler);\n}\n\n// Adds a listener to a Vue component vnode.\nfunction addComponentNodeListener (node, eventName, handler) {\n  /* istanbul ignore next */\n  if (!node.componentOptions.listeners) {\n    node.componentOptions.listeners = {};\n  }\n\n  mergeVNodeListeners(node.componentOptions.listeners, eventName, handler);\n}\nfunction addVNodeListener (vnode, eventName, handler) {\n  if (vnode.componentOptions) {\n    addComponentNodeListener(vnode, eventName, handler);\n    return;\n  }\n\n  addNativeNodeListener(vnode, eventName, handler);\n}\n// Determines if `change` should be used over `input` for listeners.\nfunction getInputEventName (vnode, model) {\n  // Is a component.\n  if (vnode.componentOptions) {\n    var ref = findModelConfig(vnode) || { event: 'input' };\n    var event = ref.event;\n\n    return event;\n  }\n\n  // Lazy Models and select tag typically use change event\n  if ((model && model.modifiers && model.modifiers.lazy) || vnode.tag === 'select') {\n    return 'change';\n  }\n\n  // is a textual-type input.\n  if (vnode.data.attrs && isTextInput({ type: vnode.data.attrs.type || 'text' })) {\n    return 'input';\n  }\n\n  return 'change';\n}\n\nfunction normalizeSlots (slots, ctx) {\n  return Object.keys(slots).reduce(function (arr, key) {\n    slots[key].forEach(function (vnode) {\n      if (!vnode.context) {\n        slots[key].context = ctx;\n        if (!vnode.data) {\n          vnode.data = {};\n        }\n        vnode.data.slot = key;\n      }\n    });\n\n    return arr.concat(slots[key]);\n  }, []);\n}\n\n/**\n * Generates the options required to construct a field.\n */\nvar Resolver = function Resolver () {};\n\nResolver.generate = function generate (el, binding, vnode) {\n  var model = Resolver.resolveModel(binding, vnode);\n  var options = resolveConfig(vnode.context);\n\n  return {\n    name: Resolver.resolveName(el, vnode),\n    el: el,\n    listen: !binding.modifiers.disable,\n    bails: binding.modifiers.bails ? true : (binding.modifiers.continues === true ? false : undefined),\n    scope: Resolver.resolveScope(el, binding, vnode),\n    vm: vnode.context,\n    expression: binding.value,\n    component: vnode.componentInstance,\n    classes: options.classes,\n    classNames: options.classNames,\n    getter: Resolver.resolveGetter(el, vnode, model),\n    events: Resolver.resolveEvents(el, vnode) || options.events,\n    model: model,\n    delay: Resolver.resolveDelay(el, vnode, options),\n    rules: Resolver.resolveRules(el, binding, vnode),\n    immediate: !!binding.modifiers.initial || !!binding.modifiers.immediate,\n    persist: !!binding.modifiers.persist,\n    validity: options.validity && !vnode.componentInstance,\n    aria: options.aria && !vnode.componentInstance,\n    initialValue: Resolver.resolveInitialValue(vnode)\n  };\n};\n\nResolver.getCtorConfig = function getCtorConfig (vnode) {\n  if (!vnode.componentInstance) { return null; }\n\n  var config = getPath('componentInstance.$options.$_veeValidate', vnode);\n\n  return config;\n};\n\n/**\n * Resolves the rules defined on an element.\n */\nResolver.resolveRules = function resolveRules (el, binding, vnode) {\n  var rules = '';\n  if (!binding.value && (!binding || !binding.expression)) {\n    rules = getDataAttribute(el, 'rules');\n  }\n\n  if (binding.value && includes(['string', 'object'], typeof binding.value.rules)) {\n    rules = binding.value.rules;\n  } else if (binding.value) {\n    rules = binding.value;\n  }\n\n  if (vnode.componentInstance) {\n    return rules;\n  }\n\n  // If validity is disabled, ignore field rules.\n  var normalized = normalizeRules(rules);\n  if (!getConfig().useConstraintAttrs) {\n    return normalized;\n  }\n\n  return assign({}, fillRulesFromElement(el, {}), normalized);\n};\n\n/**\n * @param {*} vnode\n */\nResolver.resolveInitialValue = function resolveInitialValue (vnode) {\n  var model = vnode.data.model || find(vnode.data.directives, function (d) { return d.name === 'model'; });\n\n  return model && model.value;\n};\n\n/**\n * Resolves the delay value.\n * @param {*} el\n * @param {*} vnode\n * @param {Object} options\n */\nResolver.resolveDelay = function resolveDelay (el, vnode, options) {\n  var delay = getDataAttribute(el, 'delay');\n  var globalDelay = (options && 'delay' in options) ? options.delay : 0;\n\n  if (!delay && vnode.componentInstance && vnode.componentInstance.$attrs) {\n    delay = vnode.componentInstance.$attrs['data-vv-delay'];\n  }\n\n  if (!isObject(globalDelay)) {\n    return deepParseInt(delay || globalDelay);\n  }\n\n  if (!isNullOrUndefined(delay)) {\n    globalDelay.input = delay;\n  }\n\n  return deepParseInt(globalDelay);\n};\n\n/**\n * Resolves the events to validate in response to.\n * @param {*} el\n * @param {*} vnode\n */\nResolver.resolveEvents = function resolveEvents (el, vnode) {\n  // resolve it from the root element.\n  var events = getDataAttribute(el, 'validate-on');\n\n  // resolve from data-vv-validate-on if its a vue component.\n  if (!events && vnode.componentInstance && vnode.componentInstance.$attrs) {\n    events = vnode.componentInstance.$attrs['data-vv-validate-on'];\n  }\n\n  // resolve it from $_veeValidate options.\n  if (!events && vnode.componentInstance) {\n    var config = Resolver.getCtorConfig(vnode);\n    events = config && config.events;\n  }\n\n  if (!events && getConfig().events) {\n    events = getConfig().events;\n  }\n\n  // resolve the model event if its configured for custom components.\n  if (events && vnode.componentInstance && includes(events, 'input')) {\n    var ref = vnode.componentInstance.$options.model || { event: 'input' };\n      var event = ref.event;\n    // if the prop was configured but not the model.\n    if (!event) {\n      return events;\n    }\n\n    events = events.replace('input', event);\n  }\n\n  return events;\n};\n\n/**\n * Resolves the scope for the field.\n * @param {*} el\n * @param {*} binding\n */\nResolver.resolveScope = function resolveScope (el, binding, vnode) {\n    if ( vnode === void 0 ) vnode = {};\n\n  var scope = null;\n  if (vnode.componentInstance && isNullOrUndefined(scope)) {\n    scope = vnode.componentInstance.$attrs && vnode.componentInstance.$attrs['data-vv-scope'];\n  }\n\n  return !isNullOrUndefined(scope) ? scope : getScope(el);\n};\n\n/**\n * Checks if the node directives contains a v-model or a specified arg.\n * Args take priority over models.\n *\n * @return {Object}\n */\nResolver.resolveModel = function resolveModel (binding, vnode) {\n  if (binding.arg) {\n    return { expression: binding.arg };\n  }\n\n  var model = findModel(vnode);\n  if (!model) {\n    return null;\n  }\n\n  // https://github.com/vuejs/vue/blob/dev/src/core/util/lang.js#L26\n  var watchable = !/[^\\w.$]/.test(model.expression) && hasPath(model.expression, vnode.context);\n  var lazy = !!(model.modifiers && model.modifiers.lazy);\n\n  if (!watchable) {\n    return { expression: null, lazy: lazy };\n  }\n\n  return { expression: model.expression, lazy: lazy };\n};\n\n/**\n * Resolves the field name to trigger validations.\n * @return {String} The field name.\n */\nResolver.resolveName = function resolveName (el, vnode) {\n  var name = getDataAttribute(el, 'name');\n\n  if (!name && !vnode.componentInstance) {\n    return el.name;\n  }\n\n  if (!name && vnode.componentInstance && vnode.componentInstance.$attrs) {\n    name = vnode.componentInstance.$attrs['data-vv-name'] || vnode.componentInstance.$attrs['name'];\n  }\n\n  if (!name && vnode.componentInstance) {\n    var config = Resolver.getCtorConfig(vnode);\n    if (config && isCallable(config.name)) {\n      var boundGetter = config.name.bind(vnode.componentInstance);\n\n      return boundGetter();\n    }\n\n    return vnode.componentInstance.name;\n  }\n\n  return name;\n};\n\n/**\n * Returns a value getter input type.\n */\nResolver.resolveGetter = function resolveGetter (el, vnode, model) {\n  if (model && model.expression) {\n    return function () {\n      return getPath(model.expression, vnode.context);\n    };\n  }\n\n  if (vnode.componentInstance) {\n    var path = getDataAttribute(el, 'value-path') || (vnode.componentInstance.$attrs && vnode.componentInstance.$attrs['data-vv-value-path']);\n    if (path) {\n      return function () {\n        return getPath(path, vnode.componentInstance);\n      };\n    }\n\n    var config = Resolver.getCtorConfig(vnode);\n    if (config && isCallable(config.value)) {\n      var boundGetter = config.value.bind(vnode.componentInstance);\n\n      return function () {\n        return boundGetter();\n      };\n    }\n\n    var ref = vnode.componentInstance.$options.model || { prop: 'value' };\n      var prop = ref.prop;\n\n    return function () {\n      return vnode.componentInstance[prop];\n    };\n  }\n\n  switch (el.type) {\n  case 'checkbox': return function () {\n    var els = document.querySelectorAll((\"input[name=\\\"\" + (el.name) + \"\\\"]\"));\n\n    els = toArray(els).filter(function (el) { return el.checked; });\n    if (!els.length) { return undefined; }\n\n    return els.map(function (checkbox) { return checkbox.value; });\n  };\n  case 'radio': return function () {\n    var els = document.querySelectorAll((\"input[name=\\\"\" + (el.name) + \"\\\"]\"));\n    var elm = find(els, function (el) { return el.checked; });\n\n    return elm && elm.value;\n  };\n  case 'file': return function (context) {\n    return toArray(el.files);\n  };\n  case 'select-multiple': return function () {\n    return toArray(el.options).filter(function (opt) { return opt.selected; }).map(function (opt) { return opt.value; });\n  };\n  default: return function () {\n    return el && el.value;\n  };\n  }\n};\n\nvar RULES = {};\n\nvar RuleContainer = function RuleContainer () {};\n\nvar staticAccessors = { rules: { configurable: true } };\n\nRuleContainer.add = function add (name, ref) {\n    var validate = ref.validate;\n    var options = ref.options;\n    var paramNames = ref.paramNames;\n\n  RULES[name] = {\n    validate: validate,\n    options: options,\n    paramNames: paramNames\n  };\n};\n\nstaticAccessors.rules.get = function () {\n  return RULES;\n};\n\nRuleContainer.has = function has (name) {\n  return !!RULES[name];\n};\n\nRuleContainer.isImmediate = function isImmediate (name) {\n  return !!(RULES[name] && RULES[name].options.immediate);\n};\n\nRuleContainer.isRequireRule = function isRequireRule (name) {\n  return !!(RULES[name] && RULES[name].options.computesRequired);\n};\n\nRuleContainer.isTargetRule = function isTargetRule (name) {\n  return !!(RULES[name] && RULES[name].options.hasTarget);\n};\n\nRuleContainer.remove = function remove (ruleName) {\n  delete RULES[ruleName];\n};\n\nRuleContainer.getParamNames = function getParamNames (ruleName) {\n  return RULES[ruleName] && RULES[ruleName].paramNames;\n};\n\nRuleContainer.getOptions = function getOptions (ruleName) {\n  return RULES[ruleName] && RULES[ruleName].options;\n};\n\nRuleContainer.getValidatorMethod = function getValidatorMethod (ruleName) {\n  return RULES[ruleName] ? RULES[ruleName].validate : null;\n};\n\nObject.defineProperties( RuleContainer, staticAccessors );\n\n// \n\nvar isEvent = function (evt) {\n  return (typeof Event !== 'undefined' && isCallable(Event) && evt instanceof Event) || (evt && evt.srcElement);\n};\n\nvar normalizeEvents = function (evts) {\n  if (!evts) { return []; }\n\n  return (typeof evts === 'string' ? evts.split('|') : evts);\n};\n\nvar supportsPassive = true;\n\nvar detectPassiveSupport = function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get () {\n        supportsPassive = true;\n      }\n    });\n    window.addEventListener('testPassive', null, opts);\n    window.removeEventListener('testPassive', null, opts);\n  } catch (e) {\n    supportsPassive = false;\n  }\n  return supportsPassive;\n};\n\nvar addEventListener = function (el, eventName, cb) {\n  el.addEventListener(eventName, cb, supportsPassive ? { passive: true } : false);\n};\n\n// \n\nvar DEFAULT_OPTIONS = {\n  targetOf: null,\n  immediate: false,\n  persist: false,\n  scope: null,\n  listen: true,\n  name: null,\n  rules: {},\n  vm: null,\n  classes: false,\n  validity: true,\n  aria: true,\n  events: 'input|blur',\n  delay: 0,\n  classNames: {\n    touched: 'touched', // the control has been blurred\n    untouched: 'untouched', // the control hasn't been blurred\n    valid: 'valid', // model is valid\n    invalid: 'invalid', // model is invalid\n    pristine: 'pristine', // control has not been interacted with\n    dirty: 'dirty' // control has been interacted with\n  }\n};\n\nvar Field = function Field (options) {\n  if ( options === void 0 ) options = {};\n\n  this.id = uniqId();\n  this.el = options.el;\n  this.updated = false;\n  this.vmId = options.vmId;\n  defineNonReactive(this, 'dependencies', []);\n  defineNonReactive(this, 'watchers', []);\n  defineNonReactive(this, 'events', []);\n  this.delay = 0;\n  this.rules = {};\n  this.forceRequired = false;\n  this._cacheId(options);\n  this.classNames = assign({}, DEFAULT_OPTIONS.classNames);\n  options = assign({}, DEFAULT_OPTIONS, options);\n  this._delay = !isNullOrUndefined(options.delay) ? options.delay : 0; // cache initial delay\n  this.validity = options.validity;\n  this.aria = options.aria;\n  this.flags = options.flags || createFlags();\n  defineNonReactive(this, 'vm', options.vm);\n  defineNonReactive(this, 'componentInstance', options.component);\n  this.ctorConfig = this.componentInstance ? getPath('$options.$_veeValidate', this.componentInstance) : undefined;\n  this.update(options);\n  // set initial value.\n  this.initialValue = this.value;\n  this.updated = false;\n};\n\nvar prototypeAccessors$1 = { validator: { configurable: true },isRequired: { configurable: true },isDisabled: { configurable: true },alias: { configurable: true },value: { configurable: true },bails: { configurable: true },rejectsFalse: { configurable: true } };\n\nprototypeAccessors$1.validator.get = function () {\n  if (!this.vm || !this.vm.$validator) {\n    return { validate: function () {} };\n  }\n\n  return this.vm.$validator;\n};\n\nprototypeAccessors$1.isRequired.get = function () {\n  return !!this.rules.required || this.forceRequired;\n};\n\nprototypeAccessors$1.isDisabled.get = function () {\n  return !!(this.el && this.el.disabled);\n};\n\n/**\n * Gets the display name (user-friendly name).\n */\nprototypeAccessors$1.alias.get = function () {\n  if (this._alias) {\n    return this._alias;\n  }\n\n  var alias = null;\n  if (this.ctorConfig && this.ctorConfig.alias) {\n    alias = isCallable(this.ctorConfig.alias) ? this.ctorConfig.alias.call(this.componentInstance) : this.ctorConfig.alias;\n  }\n\n  if (!alias && this.el) {\n    alias = getDataAttribute(this.el, 'as');\n  }\n\n  if (!alias && this.componentInstance) {\n    return this.componentInstance.$attrs && this.componentInstance.$attrs['data-vv-as'];\n  }\n\n  return alias;\n};\n\n/**\n * Gets the input value.\n */\n\nprototypeAccessors$1.value.get = function () {\n  if (!isCallable(this.getter)) {\n    return undefined;\n  }\n\n  return this.getter();\n};\n\nprototypeAccessors$1.bails.get = function () {\n  return this._bails;\n};\n\n/**\n * If the field rejects false as a valid value for the required rule.\n */\n\nprototypeAccessors$1.rejectsFalse.get = function () {\n  if (this.componentInstance && this.ctorConfig) {\n    return !!this.ctorConfig.rejectsFalse;\n  }\n\n  if (!this.el) {\n    return false;\n  }\n\n  return this.el.type === 'checkbox';\n};\n\n/**\n * Determines if the instance matches the options provided.\n */\nField.prototype.matches = function matches (options) {\n    var this$1 = this;\n\n  if (!options) {\n    return true;\n  }\n\n  if (options.id) {\n    return this.id === options.id;\n  }\n\n  var matchesComponentId = isNullOrUndefined(options.vmId) ? function () { return true; } : function (id) { return id === this$1.vmId; };\n  if (!matchesComponentId(options.vmId)) {\n    return false;\n  }\n\n  if (options.name === undefined && options.scope === undefined) {\n    return true;\n  }\n\n  if (options.scope === undefined) {\n    return this.name === options.name;\n  }\n\n  if (options.name === undefined) {\n    return this.scope === options.scope;\n  }\n\n  return options.name === this.name && options.scope === this.scope;\n};\n\n/**\n * Caches the field id.\n */\nField.prototype._cacheId = function _cacheId (options) {\n  if (this.el && !options.targetOf) {\n    this.el._veeValidateId = this.id;\n  }\n};\n\n/**\n * Keeps a reference of the most current validation run.\n */\nField.prototype.waitFor = function waitFor (pendingPromise) {\n  this._waitingFor = pendingPromise;\n};\n\nField.prototype.isWaitingFor = function isWaitingFor (promise) {\n  return this._waitingFor === promise;\n};\n\n/**\n * Updates the field with changed data.\n */\nField.prototype.update = function update (options) {\n  this.targetOf = options.targetOf || null;\n  this.immediate = options.immediate || this.immediate || false;\n  this.persist = options.persist || this.persist || false;\n\n  // update errors scope if the field scope was changed.\n  if (!isNullOrUndefined(options.scope) && options.scope !== this.scope && isCallable(this.validator.update)) {\n    this.validator.update(this.id, { scope: options.scope });\n  }\n  this.scope = !isNullOrUndefined(options.scope) ? options.scope\n    : !isNullOrUndefined(this.scope) ? this.scope : null;\n  this.name = (!isNullOrUndefined(options.name) ? String(options.name) : options.name) || this.name || null;\n  this.rules = options.rules !== undefined ? normalizeRules(options.rules) : this.rules;\n  this._bails = options.bails !== undefined ? options.bails : this._bails;\n  this.model = options.model || this.model;\n  this.listen = options.listen !== undefined ? options.listen : this.listen;\n  this.classes = (options.classes || this.classes || false) && !this.componentInstance;\n  this.classNames = isObject(options.classNames) ? merge(this.classNames, options.classNames) : this.classNames;\n  this.getter = isCallable(options.getter) ? options.getter : this.getter;\n  this._alias = options.alias || this._alias;\n  this.events = (options.events) ? normalizeEvents(options.events) : this.events;\n  this.delay = makeDelayObject(this.events, options.delay || this.delay, this._delay);\n  this.updateDependencies();\n  this.addActionListeners();\n\n  if (process.env.NODE_ENV !== 'production' && !this.name && !this.targetOf) {\n    warn('A field is missing a \"name\" or \"data-vv-name\" attribute');\n  }\n\n  // update required flag flags\n  if (options.rules !== undefined) {\n    this.flags.required = this.isRequired;\n  }\n\n  // validate if it was validated before and field was updated and there was a rules mutation.\n  if (this.flags.validated && options.rules !== undefined && this.updated) {\n    this.validator.validate((\"#\" + (this.id)));\n  }\n\n  this.updated = true;\n  this.addValueListeners();\n\n  // no need to continue.\n  if (!this.el) {\n    return;\n  }\n  this.updateClasses();\n  this.updateAriaAttrs();\n};\n\n/**\n * Resets field flags and errors.\n */\nField.prototype.reset = function reset () {\n    var this$1 = this;\n\n  if (this._cancellationToken) {\n    this._cancellationToken.cancelled = true;\n    delete this._cancellationToken;\n  }\n\n  var defaults = createFlags();\n  Object.keys(this.flags).filter(function (flag) { return flag !== 'required'; }).forEach(function (flag) {\n    this$1.flags[flag] = defaults[flag];\n  });\n\n  // update initial value\n  this.initialValue = this.value;\n  this.flags.changed = false;\n\n  this.addValueListeners();\n  this.addActionListeners();\n  this.updateClasses(true);\n  this.updateAriaAttrs();\n  this.updateCustomValidity();\n};\n\n/**\n * Sets the flags and their negated counterparts, and updates the classes and re-adds action listeners.\n */\nField.prototype.setFlags = function setFlags (flags) {\n    var this$1 = this;\n\n  var negated = {\n    pristine: 'dirty',\n    dirty: 'pristine',\n    valid: 'invalid',\n    invalid: 'valid',\n    touched: 'untouched',\n    untouched: 'touched'\n  };\n\n  Object.keys(flags).forEach(function (flag) {\n    this$1.flags[flag] = flags[flag];\n    // if it has a negation and was not specified, set it as well.\n    if (negated[flag] && flags[negated[flag]] === undefined) {\n      this$1.flags[negated[flag]] = !flags[flag];\n    }\n  });\n\n  if (\n    flags.untouched !== undefined ||\n    flags.touched !== undefined ||\n    flags.dirty !== undefined ||\n    flags.pristine !== undefined\n  ) {\n    this.addActionListeners();\n  }\n  this.updateClasses();\n  this.updateAriaAttrs();\n  this.updateCustomValidity();\n};\n\n/**\n * Determines if the field requires references to target fields.\n*/\nField.prototype.updateDependencies = function updateDependencies () {\n    var this$1 = this;\n\n  // reset dependencies.\n  this.dependencies.forEach(function (d) { return d.field.destroy(); });\n  this.dependencies = [];\n\n  // we get the selectors for each field.\n  var fields = Object.keys(this.rules).reduce(function (prev, r) {\n    if (RuleContainer.isTargetRule(r)) {\n      prev.push({ selector: this$1.rules[r][0], name: r });\n    }\n\n    return prev;\n  }, []);\n\n  if (!fields.length || !this.vm || !this.vm.$el) { return; }\n\n  // must be contained within the same component, so we use the vm root element constrain our dom search.\n  fields.forEach(function (ref$1) {\n      var selector = ref$1.selector;\n      var name = ref$1.name;\n\n    var ref = this$1.vm.$refs[selector];\n    var el = Array.isArray(ref) ? ref[0] : ref;\n    if (!el) {\n      return;\n    }\n\n    var options = {\n      vm: this$1.vm,\n      classes: this$1.classes,\n      classNames: this$1.classNames,\n      delay: this$1.delay,\n      scope: this$1.scope,\n      events: this$1.events.join('|'),\n      immediate: this$1.immediate,\n      targetOf: this$1.id\n    };\n\n    // probably a component.\n    if (isCallable(el.$watch)) {\n      options.component = el;\n      options.el = el.$el;\n      options.getter = Resolver.resolveGetter(el.$el, el.$vnode);\n    } else {\n      options.el = el;\n      options.getter = Resolver.resolveGetter(el, {});\n    }\n\n    this$1.dependencies.push({ name: name, field: new Field(options) });\n  });\n};\n\n/**\n * Removes listeners.\n */\nField.prototype.unwatch = function unwatch (tag) {\n    if ( tag === void 0 ) tag = null;\n\n  if (!tag) {\n    this.watchers.forEach(function (w) { return w.unwatch(); });\n    this.watchers = [];\n    return;\n  }\n\n  this.watchers.filter(function (w) { return tag.test(w.tag); }).forEach(function (w) { return w.unwatch(); });\n  this.watchers = this.watchers.filter(function (w) { return !tag.test(w.tag); });\n};\n\n/**\n * Updates the element classes depending on each field flag status.\n */\nField.prototype.updateClasses = function updateClasses (isReset) {\n    var this$1 = this;\n    if ( isReset === void 0 ) isReset = false;\n\n  if (!this.classes || this.isDisabled) { return; }\n  var applyClasses = function (el) {\n    toggleClass(el, this$1.classNames.dirty, this$1.flags.dirty);\n    toggleClass(el, this$1.classNames.pristine, this$1.flags.pristine);\n    toggleClass(el, this$1.classNames.touched, this$1.flags.touched);\n    toggleClass(el, this$1.classNames.untouched, this$1.flags.untouched);\n\n    // remove valid/invalid classes on reset.\n    if (isReset) {\n      toggleClass(el, this$1.classNames.valid, false);\n      toggleClass(el, this$1.classNames.invalid, false);\n    }\n\n    // make sure we don't set any classes if the state is undetermined.\n    if (!isNullOrUndefined(this$1.flags.valid) && this$1.flags.validated) {\n      toggleClass(el, this$1.classNames.valid, this$1.flags.valid);\n    }\n\n    if (!isNullOrUndefined(this$1.flags.invalid) && this$1.flags.validated) {\n      toggleClass(el, this$1.classNames.invalid, this$1.flags.invalid);\n    }\n  };\n\n  if (!isCheckboxOrRadioInput(this.el)) {\n    applyClasses(this.el);\n    return;\n  }\n\n  var els = document.querySelectorAll((\"input[name=\\\"\" + (this.el.name) + \"\\\"]\"));\n  toArray(els).forEach(applyClasses);\n};\n\n/**\n * Adds the listeners required for automatic classes and some flags.\n */\nField.prototype.addActionListeners = function addActionListeners () {\n    var this$1 = this;\n\n  // remove previous listeners.\n  this.unwatch(/class/);\n\n  if (!this.el) { return; }\n\n  var onBlur = function () {\n    this$1.flags.touched = true;\n    this$1.flags.untouched = false;\n    if (this$1.classes) {\n      toggleClass(this$1.el, this$1.classNames.touched, true);\n      toggleClass(this$1.el, this$1.classNames.untouched, false);\n    }\n\n    // only needed once.\n    this$1.unwatch(/^class_blur$/);\n  };\n\n  var inputEvent = isTextInput(this.el) ? 'input' : 'change';\n  var onInput = function () {\n    this$1.flags.dirty = true;\n    this$1.flags.pristine = false;\n    if (this$1.classes) {\n      toggleClass(this$1.el, this$1.classNames.pristine, false);\n      toggleClass(this$1.el, this$1.classNames.dirty, true);\n    }\n\n    // only needed once.\n    this$1.unwatch(/^class_input$/);\n  };\n\n  if (this.componentInstance && isCallable(this.componentInstance.$once)) {\n    this.componentInstance.$once('input', onInput);\n    this.componentInstance.$once('blur', onBlur);\n    this.watchers.push({\n      tag: 'class_input',\n      unwatch: function () {\n        this$1.componentInstance.$off('input', onInput);\n      }\n    });\n    this.watchers.push({\n      tag: 'class_blur',\n      unwatch: function () {\n        this$1.componentInstance.$off('blur', onBlur);\n      }\n    });\n    return;\n  }\n\n  if (!this.el) { return; }\n\n  addEventListener(this.el, inputEvent, onInput);\n  // Checkboxes and radio buttons on Mac don't emit blur naturally, so we listen on click instead.\n  var blurEvent = isCheckboxOrRadioInput(this.el) ? 'change' : 'blur';\n  addEventListener(this.el, blurEvent, onBlur);\n  this.watchers.push({\n    tag: 'class_input',\n    unwatch: function () {\n      this$1.el.removeEventListener(inputEvent, onInput);\n    }\n  });\n\n  this.watchers.push({\n    tag: 'class_blur',\n    unwatch: function () {\n      this$1.el.removeEventListener(blurEvent, onBlur);\n    }\n  });\n};\n\nField.prototype.checkValueChanged = function checkValueChanged () {\n  // handle some people initialize the value to null, since text inputs have empty string value.\n  if (this.initialValue === null && this.value === '' && isTextInput(this.el)) {\n    return false;\n  }\n\n  return this.value !== this.initialValue;\n};\n\n/**\n * Determines the suitable primary event to listen for.\n */\nField.prototype._determineInputEvent = function _determineInputEvent () {\n  // if its a custom component, use the customized model event or the input event.\n  if (this.componentInstance) {\n    return (this.componentInstance.$options.model && this.componentInstance.$options.model.event) || 'input';\n  }\n\n  if (this.model && this.model.lazy) {\n    return 'change';\n  }\n\n  if (isTextInput(this.el)) {\n    return 'input';\n  }\n\n  return 'change';\n};\n\n/**\n * Determines the list of events to listen to.\n */\nField.prototype._determineEventList = function _determineEventList (defaultInputEvent) {\n    var this$1 = this;\n\n  // if no event is configured, or it is a component or a text input then respect the user choice.\n  if (!this.events.length || this.componentInstance || isTextInput(this.el)) {\n    return [].concat( this.events ).map(function (evt) {\n      if (evt === 'input' && this$1.model && this$1.model.lazy) {\n        return 'change';\n      }\n\n      return evt;\n    });\n  }\n\n  // force suitable event for non-text type fields.\n  return this.events.map(function (e) {\n    if (e === 'input') {\n      return defaultInputEvent;\n    }\n\n    return e;\n  });\n};\n\n/**\n * Adds the listeners required for validation.\n */\nField.prototype.addValueListeners = function addValueListeners () {\n    var this$1 = this;\n\n  this.unwatch(/^input_.+/);\n  if (!this.listen || !this.el) { return; }\n\n  var token = { cancelled: false };\n  var fn = this.targetOf ? function () {\n    var target = this$1.validator._resolveField((\"#\" + (this$1.targetOf)));\n    if (target && target.flags.validated) {\n      this$1.validator.validate((\"#\" + (this$1.targetOf)));\n    }\n  } : function () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    // if its a DOM event, resolve the value, otherwise use the first parameter as the value.\n    if (args.length === 0 || isEvent(args[0])) {\n      args[0] = this$1.value;\n    }\n\n    this$1.flags.pending = true;\n    this$1._cancellationToken = token;\n    this$1.validator.validate((\"#\" + (this$1.id)), args[0]);\n  };\n\n  var inputEvent = this._determineInputEvent();\n  var events = this._determineEventList(inputEvent);\n\n  // if there is a model and an on input validation is requested.\n  if (this.model && includes(events, inputEvent)) {\n    var ctx = null;\n    var expression = this.model.expression;\n    // if its watchable from the context vm.\n    if (this.model.expression) {\n      ctx = this.vm;\n      expression = this.model.expression;\n    }\n\n    // watch it from the custom component vm instead.\n    if (!expression && this.componentInstance && this.componentInstance.$options.model) {\n      ctx = this.componentInstance;\n      expression = this.componentInstance.$options.model.prop || 'value';\n    }\n\n    if (ctx && expression) {\n      var debouncedFn = debounce(fn, this.delay[inputEvent], token);\n      var unwatch = ctx.$watch(expression, debouncedFn);\n      this.watchers.push({\n        tag: 'input_model',\n        unwatch: function () {\n          this$1.vm.$nextTick(function () {\n            unwatch();\n          });\n        }\n      });\n\n      // filter out input event as it is already handled by the watcher API.\n      events = events.filter(function (e) { return e !== inputEvent; });\n    }\n  }\n\n  // Add events.\n  events.forEach(function (e) {\n    var debouncedFn = debounce(fn, this$1.delay[e], token);\n\n    this$1._addComponentEventListener(e, debouncedFn);\n    this$1._addHTMLEventListener(e, debouncedFn);\n  });\n};\n\nField.prototype._addComponentEventListener = function _addComponentEventListener (evt, validate) {\n    var this$1 = this;\n\n  if (!this.componentInstance) { return; }\n\n  this.componentInstance.$on(evt, validate);\n  this.watchers.push({\n    tag: 'input_vue',\n    unwatch: function () {\n      this$1.componentInstance.$off(evt, validate);\n    }\n  });\n};\n\nField.prototype._addHTMLEventListener = function _addHTMLEventListener (evt, validate) {\n    var this$1 = this;\n\n  if (!this.el || this.componentInstance) { return; }\n\n  // listen for the current element.\n  var addListener = function (el) {\n    addEventListener(el, evt, validate);\n    this$1.watchers.push({\n      tag: 'input_native',\n      unwatch: function () {\n        el.removeEventListener(evt, validate);\n      }\n    });\n  };\n\n  addListener(this.el);\n  if (!isCheckboxOrRadioInput(this.el)) {\n    return;\n  }\n\n  var els = document.querySelectorAll((\"input[name=\\\"\" + (this.el.name) + \"\\\"]\"));\n  toArray(els).forEach(function (el) {\n    // skip if it is added by v-validate and is not the current element.\n    if (el._veeValidateId && el !== this$1.el) {\n      return;\n    }\n\n    addListener(el);\n  });\n};\n\n/**\n * Updates aria attributes on the element.\n */\nField.prototype.updateAriaAttrs = function updateAriaAttrs () {\n    var this$1 = this;\n\n  if (!this.aria || !this.el || !isCallable(this.el.setAttribute)) { return; }\n\n  var applyAriaAttrs = function (el) {\n    el.setAttribute('aria-required', this$1.isRequired ? 'true' : 'false');\n    el.setAttribute('aria-invalid', this$1.flags.invalid ? 'true' : 'false');\n  };\n\n  if (!isCheckboxOrRadioInput(this.el)) {\n    applyAriaAttrs(this.el);\n    return;\n  }\n\n  var els = document.querySelectorAll((\"input[name=\\\"\" + (this.el.name) + \"\\\"]\"));\n  toArray(els).forEach(applyAriaAttrs);\n};\n\n/**\n * Updates the custom validity for the field.\n */\nField.prototype.updateCustomValidity = function updateCustomValidity () {\n  if (!this.validity || !this.el || !isCallable(this.el.setCustomValidity) || !this.validator.errors) { return; }\n\n  this.el.setCustomValidity(this.flags.valid ? '' : (this.validator.errors.firstById(this.id) || ''));\n};\n\n/**\n * Removes all listeners.\n */\nField.prototype.destroy = function destroy () {\n  // ignore the result of any ongoing validation.\n  if (this._cancellationToken) {\n    this._cancellationToken.cancelled = true;\n  }\n\n  this.unwatch();\n  this.dependencies.forEach(function (d) { return d.field.destroy(); });\n  this.dependencies = [];\n};\n\nObject.defineProperties( Field.prototype, prototypeAccessors$1 );\n\n// \n\nvar FieldBag = function FieldBag (items) {\n  if ( items === void 0 ) items = [];\n\n  this.items = items || [];\n  this.itemsById = this.items.reduce(function (itemsById, item) {\n    itemsById[item.id] = item;\n    return itemsById;\n  }, {});\n};\n\nvar prototypeAccessors$2 = { length: { configurable: true } };\n\nFieldBag.prototype[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'] = function () {\n    var this$1 = this;\n\n  var index = 0;\n  return {\n    next: function () {\n      return { value: this$1.items[index++], done: index > this$1.items.length };\n    }\n  };\n};\n\n/**\n * Gets the current items length.\n */\n\nprototypeAccessors$2.length.get = function () {\n  return this.items.length;\n};\n\n/**\n * Finds the first field that matches the provided matcher object.\n */\nFieldBag.prototype.find = function find$1 (matcher) {\n  return find(this.items, function (item) { return item.matches(matcher); });\n};\n\n/**\n * Finds the field with the given id, using a plain object as a map to link\n * ids to items faster than by looping over the array and matching.\n */\nFieldBag.prototype.findById = function findById (id) {\n  return this.itemsById[id] || null;\n};\n\n/**\n * Filters the items down to the matched fields.\n */\nFieldBag.prototype.filter = function filter (matcher) {\n  // multiple matchers to be tried.\n  if (Array.isArray(matcher)) {\n    return this.items.filter(function (item) { return matcher.some(function (m) { return item.matches(m); }); });\n  }\n\n  return this.items.filter(function (item) { return item.matches(matcher); });\n};\n\n/**\n * Maps the field items using the mapping function.\n */\nFieldBag.prototype.map = function map (mapper) {\n  return this.items.map(mapper);\n};\n\n/**\n * Finds and removes the first field that matches the provided matcher object, returns the removed item.\n */\nFieldBag.prototype.remove = function remove (matcher) {\n  var item = null;\n  if (matcher instanceof Field) {\n    item = matcher;\n  } else {\n    item = this.find(matcher);\n  }\n\n  if (!item) { return null; }\n\n  var index = this.items.indexOf(item);\n  this.items.splice(index, 1);\n  delete this.itemsById[item.id];\n\n  return item;\n};\n\n/**\n * Adds a field item to the list.\n */\nFieldBag.prototype.push = function push (item) {\n  if (! (item instanceof Field)) {\n    throw createError('FieldBag only accepts instances of Field that has an id defined.');\n  }\n\n  if (!item.id) {\n    throw createError('Field id must be defined.');\n  }\n\n  if (this.findById(item.id)) {\n    throw createError((\"Field with id \" + (item.id) + \" is already added.\"));\n  }\n\n  this.items.push(item);\n  this.itemsById[item.id] = item;\n};\n\nObject.defineProperties( FieldBag.prototype, prototypeAccessors$2 );\n\nvar ScopedValidator = function ScopedValidator (base, vm) {\n  this.id = vm._uid;\n  this._base = base;\n  this._paused = false;\n\n  // create a mirror bag with limited component scope.\n  this.errors = new ErrorBag(base.errors, this.id);\n};\n\nvar prototypeAccessors$3 = { flags: { configurable: true },rules: { configurable: true },fields: { configurable: true },dictionary: { configurable: true },locale: { configurable: true } };\n\nprototypeAccessors$3.flags.get = function () {\n    var this$1 = this;\n\n  return this._base.fields.items.filter(function (f) { return f.vmId === this$1.id; }).reduce(function (acc, field) {\n    if (field.scope) {\n      if (!acc[(\"$\" + (field.scope))]) {\n        acc[(\"$\" + (field.scope))] = {};\n      }\n\n      acc[(\"$\" + (field.scope))][field.name] = field.flags;\n    }\n\n    acc[field.name] = field.flags;\n\n    return acc;\n  }, {});\n};\n\nprototypeAccessors$3.rules.get = function () {\n  return this._base.rules;\n};\n\nprototypeAccessors$3.fields.get = function () {\n  return new FieldBag(this._base.fields.filter({ vmId: this.id }));\n};\n\nprototypeAccessors$3.dictionary.get = function () {\n  return this._base.dictionary;\n};\n\nprototypeAccessors$3.locale.get = function () {\n  return this._base.locale;\n};\n\nprototypeAccessors$3.locale.set = function (val) {\n  this._base.locale = val;\n};\n\nScopedValidator.prototype.localize = function localize () {\n    var ref;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n  return (ref = this._base).localize.apply(ref, args);\n};\n\nScopedValidator.prototype.update = function update () {\n    var ref;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n  return (ref = this._base).update.apply(ref, args);\n};\n\nScopedValidator.prototype.attach = function attach (opts) {\n  var attachOpts = assign({}, opts, { vmId: this.id });\n\n  return this._base.attach(attachOpts);\n};\n\nScopedValidator.prototype.pause = function pause () {\n  this._paused = true;\n};\n\nScopedValidator.prototype.resume = function resume () {\n  this._paused = false;\n};\n\nScopedValidator.prototype.remove = function remove (ruleName) {\n  return this._base.remove(ruleName);\n};\n\nScopedValidator.prototype.detach = function detach (name, scope) {\n  return this._base.detach(name, scope, this.id);\n};\n\nScopedValidator.prototype.extend = function extend () {\n    var ref;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n  return (ref = this._base).extend.apply(ref, args);\n};\n\nScopedValidator.prototype.validate = function validate (descriptor, value, opts) {\n    if ( opts === void 0 ) opts = {};\n\n  if (this._paused) { return Promise.resolve(true); }\n\n  return this._base.validate(descriptor, value, assign({}, { vmId: this.id }, opts || {}));\n};\n\nScopedValidator.prototype.verify = function verify () {\n    var ref;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n  return (ref = this._base).verify.apply(ref, args);\n};\n\nScopedValidator.prototype.validateAll = function validateAll (values, opts) {\n    if ( opts === void 0 ) opts = {};\n\n  if (this._paused) { return Promise.resolve(true); }\n\n  return this._base.validateAll(values, assign({}, { vmId: this.id }, opts || {}));\n};\n\nScopedValidator.prototype.validateScopes = function validateScopes (opts) {\n    if ( opts === void 0 ) opts = {};\n\n  if (this._paused) { return Promise.resolve(true); }\n\n  return this._base.validateScopes(assign({}, { vmId: this.id }, opts || {}));\n};\n\nScopedValidator.prototype.destroy = function destroy () {\n  delete this.id;\n  delete this._base;\n};\n\nScopedValidator.prototype.reset = function reset (matcher) {\n  return this._base.reset(Object.assign({}, matcher || {}, { vmId: this.id }));\n};\n\nScopedValidator.prototype.flag = function flag () {\n    var ref;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n  return (ref = this._base).flag.apply(ref, args.concat( [this.id] ));\n};\n\nScopedValidator.prototype._resolveField = function _resolveField () {\n    var ref;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n  return (ref = this._base)._resolveField.apply(ref, args);\n};\n\nObject.defineProperties( ScopedValidator.prototype, prototypeAccessors$3 );\n\nvar VALIDATOR = null;\n\nvar getValidator = function () {\n  return VALIDATOR;\n};\n\nvar setValidator = function (value) {\n  VALIDATOR = value;\n\n  return value;\n};\n\n// \n\n/**\n * Checks if a parent validator instance was requested.\n */\nvar requestsValidator = function (injections) {\n  if (isObject(injections) && injections.$validator) {\n    return true;\n  }\n\n  return false;\n};\n\nvar mixin = {\n  provide: function provide () {\n    if (this.$validator && !isBuiltInComponent(this.$vnode)) {\n      return {\n        $validator: this.$validator\n      };\n    }\n\n    return {};\n  },\n  beforeCreate: function beforeCreate () {\n    // if built in do nothing.\n    if (isBuiltInComponent(this.$vnode) || this.$options.$__veeInject === false) {\n      return;\n    }\n\n    // if its a root instance set the config if it exists.\n    if (!this.$parent) {\n      setConfig(this.$options.$_veeValidate || {});\n    }\n\n    var options = resolveConfig(this);\n\n    // if its a root instance, inject anyways, or if it requested a new instance.\n    if (!this.$parent || (this.$options.$_veeValidate && /new/.test(this.$options.$_veeValidate.validator))) {\n      this.$validator = new ScopedValidator(getValidator(), this);\n    }\n\n    var requested = requestsValidator(this.$options.inject);\n\n    // if automatic injection is enabled and no instance was requested.\n    if (! this.$validator && options.inject && !requested) {\n      this.$validator = new ScopedValidator(getValidator(), this);\n    }\n\n    // don't inject errors or fieldBag as no validator was resolved.\n    if (!requested && !this.$validator) {\n      return;\n    }\n\n    // There is a validator but it isn't injected, mark as reactive.\n    if (!requested && this.$validator) {\n      var Vue = this.$options._base; // the vue constructor.\n      Vue.util.defineReactive(this.$validator, 'errors', this.$validator.errors);\n    }\n\n    if (!this.$options.computed) {\n      this.$options.computed = {};\n    }\n\n    this.$options.computed[options.errorBagName || 'errors'] = function errorBagGetter () {\n      return this.$validator.errors;\n    };\n    this.$options.computed[options.fieldsBagName || 'fields'] = function fieldBagGetter () {\n      return this.$validator.fields.items.reduce(function (acc, field) {\n        if (field.scope) {\n          if (!acc[(\"$\" + (field.scope))]) {\n            acc[(\"$\" + (field.scope))] = {};\n          }\n\n          acc[(\"$\" + (field.scope))][field.name] = field.flags;\n\n          return acc;\n        }\n\n        acc[field.name] = field.flags;\n\n        return acc;\n      }, {});\n    };\n  },\n  beforeDestroy: function beforeDestroy () {\n    if (this.$validator && this._uid === this.$validator.id) {\n      this.$validator.errors.clear(); // remove errors generated by this component.\n    }\n  }\n};\n\n// \n\n/**\n * Finds the requested field by id from the context object.\n */\nfunction findField (el, context) {\n  if (!context || !context.$validator) {\n    return null;\n  }\n\n  return context.$validator.fields.findById(el._veeValidateId);\n}\nvar directive = {\n  bind: function bind (el, binding, vnode) {\n    var validator = vnode.context.$validator;\n    if (!validator) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\"No validator instance is present on vm, did you forget to inject '$validator'?\");\n      }\n\n      return;\n    }\n\n    var fieldOptions = Resolver.generate(el, binding, vnode);\n    validator.attach(fieldOptions);\n  },\n  inserted: function inserted (el, binding, vnode) {\n    var field = findField(el, vnode.context);\n    var scope = Resolver.resolveScope(el, binding, vnode);\n\n    // skip if scope hasn't changed.\n    if (!field || scope === field.scope) { return; }\n\n    // only update scope.\n    field.update({ scope: scope });\n\n    // allows the field to re-evaluated once more in the update hook.\n    field.updated = false;\n  },\n  update: function update (el, binding, vnode) {\n    var field = findField(el, vnode.context);\n\n    // make sure we don't do unneccasary work if no important change was done.\n    if (!field || (field.updated && isEqual(binding.value, binding.oldValue))) { return; }\n    var scope = Resolver.resolveScope(el, binding, vnode);\n    var rules = Resolver.resolveRules(el, binding, vnode);\n\n    field.update({\n      scope: scope,\n      rules: rules\n    });\n  },\n  unbind: function unbind (el, binding, ref) {\n    var context = ref.context;\n\n    var field = findField(el, context);\n    if (!field) { return; }\n\n    context.$validator.detach(field);\n  }\n};\n\n// \n\nvar Validator = function Validator (validations, options, pluginContainer) {\n  if ( options === void 0 ) options = { fastExit: true };\n  if ( pluginContainer === void 0 ) pluginContainer = null;\n\n  this.errors = new ErrorBag();\n  this.fields = new FieldBag();\n  this._createFields(validations);\n  this.paused = false;\n  this.fastExit = !isNullOrUndefined(options && options.fastExit) ? options.fastExit : true;\n  this.$vee = pluginContainer || {\n    _vm: {\n      $nextTick: function (cb) { return isCallable(cb) ? cb() : Promise.resolve(); },\n      $emit: function () {},\n      $off: function () {}\n    }\n  };\n};\n\nvar prototypeAccessors$4 = { rules: { configurable: true },dictionary: { configurable: true },flags: { configurable: true },locale: { configurable: true } };\nvar staticAccessors$1 = { rules: { configurable: true },dictionary: { configurable: true },locale: { configurable: true } };\n\n/**\n * @deprecated\n */\nstaticAccessors$1.rules.get = function () {\n  if (process.env.NODE_ENV !== 'production') {\n    warn('this accessor will be deprecated, use `import { rules } from \"vee-validate\"` instead.');\n  }\n\n  return RuleContainer.rules;\n};\n\n/**\n * @deprecated\n */\nprototypeAccessors$4.rules.get = function () {\n  if (process.env.NODE_ENV !== 'production') {\n    warn('this accessor will be deprecated, use `import { rules } from \"vee-validate\"` instead.');\n  }\n\n  return RuleContainer.rules;\n};\n\nprototypeAccessors$4.dictionary.get = function () {\n  return DictionaryResolver.getDriver();\n};\n\nstaticAccessors$1.dictionary.get = function () {\n  return DictionaryResolver.getDriver();\n};\n\nprototypeAccessors$4.flags.get = function () {\n  return this.fields.items.reduce(function (acc, field) {\n      var obj;\n\n    if (field.scope) {\n      acc[(\"$\" + (field.scope))] = ( obj = {}, obj[field.name] = field.flags, obj );\n\n      return acc;\n    }\n\n    acc[field.name] = field.flags;\n\n    return acc;\n  }, {});\n};\n\n/**\n * Getter for the current locale.\n */\nprototypeAccessors$4.locale.get = function () {\n  return Validator.locale;\n};\n\n/**\n * Setter for the validator locale.\n */\nprototypeAccessors$4.locale.set = function (value) {\n  Validator.locale = value;\n};\n\nstaticAccessors$1.locale.get = function () {\n  return DictionaryResolver.getDriver().locale;\n};\n\n/**\n * Setter for the validator locale.\n */\nstaticAccessors$1.locale.set = function (value) {\n  var hasChanged = value !== DictionaryResolver.getDriver().locale;\n  DictionaryResolver.getDriver().locale = value;\n  if (hasChanged && Validator.$vee && Validator.$vee._vm) {\n    Validator.$vee._vm.$emit('localeChanged');\n  }\n};\n\n/**\n * Static constructor.\n * @deprecated\n */\nValidator.create = function create (validations, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn('Please use `new` to create new validator instances.');\n  }\n\n  return new Validator(validations, options);\n};\n\n/**\n * Adds a custom validator to the list of validation rules.\n */\nValidator.extend = function extend (name, validator, options) {\n    if ( options === void 0 ) options = {};\n\n  Validator._guardExtend(name, validator);\n  // rules imported from the minimal bundle\n  // will have the options embedded in them\n  var mergedOpts = validator.options || {};\n  Validator._merge(name, {\n    validator: validator,\n    paramNames: (options && options.paramNames) || validator.paramNames,\n    options: assign({ hasTarget: false, immediate: true }, mergedOpts, options || {})\n  });\n};\n\n/**\n * Removes a rule from the list of validators.\n * @deprecated\n */\nValidator.remove = function remove (name) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn('this method will be deprecated, you can still override your rules with `extend`');\n  }\n\n  RuleContainer.remove(name);\n};\n\n/**\n * Adds and sets the current locale for the validator.\n*/\nValidator.prototype.localize = function localize (lang, dictionary) {\n  Validator.localize(lang, dictionary);\n};\n\n/**\n * Adds and sets the current locale for the validator.\n */\nValidator.localize = function localize (lang, dictionary) {\n    var obj;\n\n  if (isObject(lang)) {\n    DictionaryResolver.getDriver().merge(lang);\n    return;\n  }\n\n  // merge the dictionary.\n  if (dictionary) {\n    var locale = lang || dictionary.name;\n    dictionary = assign({}, dictionary);\n    DictionaryResolver.getDriver().merge(( obj = {}, obj[locale] = dictionary, obj ));\n  }\n\n  if (lang) {\n    // set the locale.\n    Validator.locale = lang;\n  }\n};\n\n/**\n * Registers a field to be validated.\n */\nValidator.prototype.attach = function attach (fieldOpts) {\n    var this$1 = this;\n\n  // We search for a field with the same name & scope, having persist enabled\n  var oldFieldMatcher = { name: fieldOpts.name, scope: fieldOpts.scope, persist: true };\n  var oldField = fieldOpts.persist ? this.fields.find(oldFieldMatcher) : null;\n\n  if (oldField) {\n    // We keep the flags of the old field, then we remove its instance\n    fieldOpts.flags = oldField.flags;\n    oldField.destroy();\n    this.fields.remove(oldField);\n  }\n\n  // fixes initial value detection with v-model and select elements.\n  var value = fieldOpts.initialValue;\n  var field = new Field(fieldOpts);\n  this.fields.push(field);\n\n  // validate the field initially\n  if (field.immediate) {\n    this.$vee._vm.$nextTick(function () { return this$1.validate((\"#\" + (field.id)), value || field.value, { vmId: fieldOpts.vmId }); });\n  } else {\n    this._validate(field, value || field.value, { initial: true }).then(function (result) {\n      field.flags.valid = result.valid;\n      field.flags.invalid = !result.valid;\n    });\n  }\n\n  return field;\n};\n\n/**\n * Sets the flags on a field.\n */\nValidator.prototype.flag = function flag (name, flags, uid) {\n    if ( uid === void 0 ) uid = null;\n\n  var field = this._resolveField(name, undefined, uid);\n  if (!field || !flags) {\n    return;\n  }\n\n  field.setFlags(flags);\n};\n\n/**\n * Removes a field from the validator.\n */\nValidator.prototype.detach = function detach (name, scope, uid) {\n  var field = isCallable(name.destroy) ? name : this._resolveField(name, scope, uid);\n  if (!field) { return; }\n\n  // We destroy/remove the field & error instances if it's not a `persist` one\n  if (!field.persist) {\n    field.destroy();\n    this.errors.remove(field.name, field.scope, field.vmId);\n    this.fields.remove(field);\n  }\n};\n\n/**\n * Adds a custom validator to the list of validation rules.\n */\nValidator.prototype.extend = function extend (name, validator, options) {\n    if ( options === void 0 ) options = {};\n\n  Validator.extend(name, validator, options);\n};\n\nValidator.prototype.reset = function reset (matcher) {\n    var this$1 = this;\n\n  // two ticks\n  return this.$vee._vm.$nextTick().then(function () {\n    return this$1.$vee._vm.$nextTick();\n  }).then(function () {\n    this$1.fields.filter(matcher).forEach(function (field) {\n      field.waitFor(null);\n      field.reset(); // reset field flags.\n      this$1.errors.remove(field.name, field.scope, matcher && matcher.vmId);\n    });\n  });\n};\n\n/**\n * Updates a field, updating both errors and flags.\n */\nValidator.prototype.update = function update (id, ref) {\n    var scope = ref.scope;\n\n  var field = this._resolveField((\"#\" + id));\n  if (!field) { return; }\n\n  // remove old scope.\n  this.errors.update(id, { scope: scope });\n};\n\n/**\n * Removes a rule from the list of validators.\n * @deprecated\n */\nValidator.prototype.remove = function remove (name) {\n  Validator.remove(name);\n};\n\n/**\n * Validates a value against a registered field validations.\n */\nValidator.prototype.validate = function validate (fieldDescriptor, value, ref) {\n    var this$1 = this;\n    if ( ref === void 0 ) ref = {};\n    var silent = ref.silent;\n    var vmId = ref.vmId;\n\n  if (this.paused) { return Promise.resolve(true); }\n\n  // overload to validate all.\n  if (isNullOrUndefined(fieldDescriptor)) {\n    return this.validateScopes({ silent: silent, vmId: vmId });\n  }\n\n  // overload to validate scope-less fields.\n  if (fieldDescriptor === '*') {\n    return this.validateAll(undefined, { silent: silent, vmId: vmId });\n  }\n\n  // if scope validation was requested.\n  if (/^(.+)\\.\\*$/.test(fieldDescriptor)) {\n    var matched = fieldDescriptor.match(/^(.+)\\.\\*$/)[1];\n    return this.validateAll(matched);\n  }\n\n  var field = this._resolveField(fieldDescriptor);\n  if (!field) {\n    return this._handleFieldNotFound(fieldDescriptor);\n  }\n\n  if (!silent) { field.flags.pending = true; }\n  if (value === undefined) {\n    value = field.value;\n  }\n\n  var validationPromise = this._validate(field, value);\n  field.waitFor(validationPromise);\n\n  return validationPromise.then(function (result) {\n    if (!silent && field.isWaitingFor(validationPromise)) {\n      // allow next validation to mutate the state.\n      field.waitFor(null);\n      this$1._handleValidationResults([result], vmId);\n    }\n\n    return result.valid;\n  });\n};\n\n/**\n * Pauses the validator.\n */\nValidator.prototype.pause = function pause () {\n  this.paused = true;\n\n  return this;\n};\n\n/**\n * Resumes the validator.\n */\nValidator.prototype.resume = function resume () {\n  this.paused = false;\n\n  return this;\n};\n\n/**\n * Validates each value against the corresponding field validations.\n */\nValidator.prototype.validateAll = function validateAll (values, ref) {\n    var this$1 = this;\n    if ( ref === void 0 ) ref = {};\n    var silent = ref.silent;\n    var vmId = ref.vmId;\n\n  if (this.paused) { return Promise.resolve(true); }\n\n  var matcher = null;\n  var providedValues = false;\n\n  if (typeof values === 'string') {\n    matcher = { scope: values, vmId: vmId };\n  } else if (isObject(values)) {\n    matcher = Object.keys(values).map(function (key) {\n      return { name: key, vmId: vmId, scope: null };\n    });\n    providedValues = true;\n  } else if (Array.isArray(values)) {\n    matcher = values.map(function (key) {\n      return typeof key === 'object' ? Object.assign({ vmId: vmId }, key) : { name: key, vmId: vmId };\n    });\n  } else {\n    matcher = { scope: null, vmId: vmId };\n  }\n\n  return Promise.all(\n    this.fields.filter(matcher).map(function (field) { return this$1._validate(field, providedValues ? values[field.name] : field.value); })\n  ).then(function (results) {\n    if (!silent) {\n      this$1._handleValidationResults(results, vmId);\n    }\n\n    return results.every(function (t) { return t.valid; });\n  });\n};\n\n/**\n * Validates all scopes.\n */\nValidator.prototype.validateScopes = function validateScopes (ref) {\n    var this$1 = this;\n    if ( ref === void 0 ) ref = {};\n    var silent = ref.silent;\n    var vmId = ref.vmId;\n\n  if (this.paused) { return Promise.resolve(true); }\n\n  return Promise.all(\n    this.fields.filter({ vmId: vmId }).map(function (field) { return this$1._validate(field, field.value); })\n  ).then(function (results) {\n    if (!silent) {\n      this$1._handleValidationResults(results, vmId);\n    }\n\n    return results.every(function (t) { return t.valid; });\n  });\n};\n\n/**\n * Validates a value against the rules.\n */\nValidator.prototype.verify = function verify (value, rules, options) {\n    if ( options === void 0 ) options = {};\n\n  var field = {\n    name: (options && options.name) || '{field}',\n    rules: normalizeRules(rules),\n    bails: getPath('bails', options, true),\n    forceRequired: false,\n    get isRequired () {\n      return !!this.rules.required || this.forceRequired;\n    }\n  };\n\n  var targetRules = Object.keys(field.rules).filter(RuleContainer.isTargetRule);\n  if (targetRules.length && options && isObject(options.values)) {\n    field.dependencies = targetRules.map(function (rule) {\n      var ref = field.rules[rule];\n        var targetKey = ref[0];\n\n      return {\n        name: rule,\n        field: { value: options.values[targetKey] }\n      };\n    });\n  }\n\n  return this._validate(field, value).then(function (result) {\n    var errors = [];\n    var ruleMap = {};\n    result.errors.forEach(function (e) {\n      errors.push(e.msg);\n      ruleMap[e.rule] = e.msg;\n    });\n\n    return {\n      valid: result.valid,\n      errors: errors,\n      failedRules: ruleMap\n    };\n  });\n};\n\n/**\n * Perform cleanup.\n */\nValidator.prototype.destroy = function destroy () {\n  this.$vee._vm.$off('localeChanged');\n};\n\n/**\n * Creates the fields to be validated.\n */\nValidator.prototype._createFields = function _createFields (validations) {\n    var this$1 = this;\n\n  if (!validations) { return; }\n\n  Object.keys(validations).forEach(function (field) {\n    var options = assign({}, { name: field, rules: validations[field] });\n    this$1.attach(options);\n  });\n};\n\n/**\n * Date rules need the existence of a format, so date_format must be supplied.\n */\nValidator.prototype._getDateFormat = function _getDateFormat (validations) {\n  var format = null;\n  if (validations.date_format && Array.isArray(validations.date_format)) {\n    format = validations.date_format[0];\n  }\n\n  return format || DictionaryResolver.getDriver().getDateFormat(this.locale);\n};\n\n/**\n * Formats an error message for field and a rule.\n */\nValidator.prototype._formatErrorMessage = function _formatErrorMessage (field, rule, data, targetName) {\n    if ( data === void 0 ) data = {};\n    if ( targetName === void 0 ) targetName = null;\n\n  var name = this._getFieldDisplayName(field);\n  var params = this._getLocalizedParams(rule, targetName);\n\n  return DictionaryResolver.getDriver().getFieldMessage(this.locale, field.name, rule.name, [name, params, data]);\n};\n\n/**\n * We need to convert any object param to an array format since the locales do not handle params as objects yet.\n */\nValidator.prototype._convertParamObjectToArray = function _convertParamObjectToArray (obj, ruleName) {\n  if (Array.isArray(obj)) {\n    return obj;\n  }\n\n  var paramNames = RuleContainer.getParamNames(ruleName);\n  if (!paramNames || !isObject(obj)) {\n    return obj;\n  }\n\n  return paramNames.reduce(function (prev, paramName) {\n    if (paramName in obj) {\n      prev.push(obj[paramName]);\n    }\n\n    return prev;\n  }, []);\n};\n\n/**\n * Translates the parameters passed to the rule (mainly for target fields).\n */\nValidator.prototype._getLocalizedParams = function _getLocalizedParams (rule, targetName) {\n    if ( targetName === void 0 ) targetName = null;\n\n  var params = this._convertParamObjectToArray(rule.params, rule.name);\n  if (rule.options.hasTarget && params && params[0]) {\n    var localizedName = targetName || DictionaryResolver.getDriver().getAttribute(this.locale, params[0], params[0]);\n    return [localizedName].concat(params.slice(1));\n  }\n\n  return params;\n};\n\n/**\n * Resolves an appropriate display name, first checking 'data-as' or the registered 'prettyName'\n */\nValidator.prototype._getFieldDisplayName = function _getFieldDisplayName (field) {\n  return field.alias || DictionaryResolver.getDriver().getAttribute(this.locale, field.name, field.name);\n};\n\n/**\n * Converts an array of params to an object with named properties.\n * Only works if the rule is configured with a paramNames array.\n * Returns the same params if it cannot convert it.\n */\nValidator.prototype._convertParamArrayToObj = function _convertParamArrayToObj (params, ruleName) {\n  var paramNames = RuleContainer.getParamNames(ruleName);\n  if (!paramNames) {\n    return params;\n  }\n\n  if (isObject(params)) {\n    // check if the object is either a config object or a single parameter that is an object.\n    var hasKeys = paramNames.some(function (name) { return Object.keys(params).indexOf(name) !== -1; });\n    // if it has some of the keys, return it as is.\n    if (hasKeys) {\n      return params;\n    }\n    // otherwise wrap the object in an array.\n    params = [params];\n  }\n\n  // Reduce the paramsNames to a param object.\n  return params.reduce(function (prev, value, idx) {\n    prev[paramNames[idx]] = value;\n\n    return prev;\n  }, {});\n};\n\n/**\n * Tests a single input value against a rule.\n */\nValidator.prototype._test = function _test (field, value, rule) {\n    var this$1 = this;\n\n  var validator = RuleContainer.getValidatorMethod(rule.name);\n  var params = Array.isArray(rule.params) ? toArray(rule.params) : rule.params;\n  if (!params) {\n    params = [];\n  }\n\n  var targetName = null;\n  if (!validator || typeof validator !== 'function') {\n    return Promise.reject(createError((\"No such validator '\" + (rule.name) + \"' exists.\")));\n  }\n\n  // has field dependencies.\n  if (rule.options.hasTarget && field.dependencies) {\n    var target = find(field.dependencies, function (d) { return d.name === rule.name; });\n    if (target) {\n      targetName = target.field.alias;\n      params = [target.field.value].concat(params.slice(1));\n    }\n  } else if (rule.name === 'required' && field.rejectsFalse) {\n    // invalidate false if no args were specified and the field rejects false by default.\n    params = params.length ? params : [true];\n  }\n\n  if (rule.options.isDate) {\n    var dateFormat = this._getDateFormat(field.rules);\n    if (rule.name !== 'date_format') {\n      params.push(dateFormat);\n    }\n  }\n\n  var result = validator(value, this._convertParamArrayToObj(params, rule.name));\n\n  // If it is a promise.\n  if (isCallable(result.then)) {\n    return result.then(function (values) {\n      var allValid = true;\n      var data = {};\n      if (Array.isArray(values)) {\n        allValid = values.every(function (t) { return (isObject(t) ? t.valid : t); });\n      } else { // Is a single object/boolean.\n        allValid = isObject(values) ? values.valid : values;\n        data = values.data;\n      }\n\n      return {\n        valid: allValid,\n        data: result.data,\n        errors: allValid ? [] : [this$1._createFieldError(field, rule, data, targetName)]\n      };\n    });\n  }\n\n  if (!isObject(result)) {\n    result = { valid: result, data: {} };\n  }\n\n  return {\n    valid: result.valid,\n    data: result.data,\n    errors: result.valid ? [] : [this._createFieldError(field, rule, result.data, targetName)]\n  };\n};\n\n/**\n * Merges a validator object into the RULES and Messages.\n */\nValidator._merge = function _merge (name, ref) {\n    var validator = ref.validator;\n    var options = ref.options;\n    var paramNames = ref.paramNames;\n\n  var validate = isCallable(validator) ? validator : validator.validate;\n  if (validator.getMessage) {\n    DictionaryResolver.getDriver().setMessage(Validator.locale, name, validator.getMessage);\n  }\n\n  RuleContainer.add(name, {\n    validate: validate,\n    options: options,\n    paramNames: paramNames\n  });\n};\n\n/**\n * Guards from extension violations.\n */\nValidator._guardExtend = function _guardExtend (name, validator) {\n  if (isCallable(validator)) {\n    return;\n  }\n\n  if (!isCallable(validator.validate)) {\n    throw createError(\n      (\"Extension Error: The validator '\" + name + \"' must be a function or have a 'validate' method.\")\n    );\n  }\n};\n\n/**\n * Creates a Field Error Object.\n */\nValidator.prototype._createFieldError = function _createFieldError (field, rule, data, targetName) {\n    var this$1 = this;\n\n  return {\n    id: field.id,\n    vmId: field.vmId,\n    field: field.name,\n    msg: this._formatErrorMessage(field, rule, data, targetName),\n    rule: rule.name,\n    scope: field.scope,\n    regenerate: function () {\n      return this$1._formatErrorMessage(field, rule, data, targetName);\n    }\n  };\n};\n\n/**\n * Tries different strategies to find a field.\n */\nValidator.prototype._resolveField = function _resolveField (name, scope, uid) {\n  if (name[0] === '#') {\n    return this.fields.findById(name.slice(1));\n  }\n\n  if (!isNullOrUndefined(scope)) {\n    return this.fields.find({ name: name, scope: scope, vmId: uid });\n  }\n\n  if (includes(name, '.')) {\n    var ref = name.split('.');\n      var fieldScope = ref[0];\n      var fieldName = ref.slice(1);\n    var field = this.fields.find({ name: fieldName.join('.'), scope: fieldScope, vmId: uid });\n    if (field) {\n      return field;\n    }\n  }\n\n  return this.fields.find({ name: name, scope: null, vmId: uid });\n};\n\n/**\n * Handles when a field is not found.\n */\nValidator.prototype._handleFieldNotFound = function _handleFieldNotFound (name, scope) {\n  var fullName = isNullOrUndefined(scope) ? name : (\"\" + (!isNullOrUndefined(scope) ? scope + '.' : '') + name);\n\n  return Promise.reject(createError(\n    (\"Validating a non-existent field: \\\"\" + fullName + \"\\\". Use \\\"attach()\\\" first.\")\n  ));\n};\n\n/**\n * Handles validation results.\n */\nValidator.prototype._handleValidationResults = function _handleValidationResults (results, vmId) {\n    var this$1 = this;\n\n  var matchers = results.map(function (result) { return ({ id: result.id }); });\n  this.errors.removeById(matchers.map(function (m) { return m.id; }));\n  // remove by name and scope to remove any custom errors added.\n  results.forEach(function (result) {\n    this$1.errors.remove(result.field, result.scope, vmId);\n  });\n  var allErrors = results.reduce(function (prev, curr) {\n    prev.push.apply(prev, curr.errors);\n\n    return prev;\n  }, []);\n\n  this.errors.add(allErrors);\n\n  // handle flags.\n  this.fields.filter(matchers).forEach(function (field) {\n    var result = find(results, function (r) { return r.id === field.id; });\n    field.setFlags({\n      pending: false,\n      valid: result.valid,\n      validated: true\n    });\n  });\n};\n\nValidator.prototype._shouldSkip = function _shouldSkip (field, value) {\n  // field is configured to run through the pipeline regardless\n  if (field.bails === false) {\n    return false;\n  }\n\n  // disabled fields are skipped if useConstraintAttrs is enabled in config\n  if (field.isDisabled && getConfig().useConstraintAttrs) {\n    return true;\n  }\n\n  // skip if the field is not required and has an empty value.\n  return !field.isRequired && (isNullOrUndefined(value) || value === '' || isEmptyArray(value));\n};\n\nValidator.prototype._shouldBail = function _shouldBail (field) {\n  // if the field was configured explicitly.\n  if (field.bails !== undefined) {\n    return field.bails;\n  }\n\n  return this.fastExit;\n};\n\n/**\n * Starts the validation process.\n */\nValidator.prototype._validate = function _validate (field, value, ref) {\n    var this$1 = this;\n    if ( ref === void 0 ) ref = {};\n    var initial = ref.initial;\n\n  var requireRules = Object.keys(field.rules).filter(RuleContainer.isRequireRule);\n\n  field.forceRequired = false;\n  requireRules.forEach(function (rule) {\n    var ruleOptions = RuleContainer.getOptions(rule);\n    var result = this$1._test(field, value, { name: rule, params: field.rules[rule], options: ruleOptions });\n\n    if (isCallable(result.then)) { throw createError('Require rules cannot be async'); }\n    if (!isObject(result)) { throw createError('Require rules has to return an object (see docs)'); }\n\n    if (result.data.required === true) {\n      field.forceRequired = true;\n    }\n  });\n\n  if (this._shouldSkip(field, value)) {\n    return Promise.resolve({ valid: true, id: field.id, field: field.name, scope: field.scope, errors: [] });\n  }\n\n  var promises = [];\n  var errors = [];\n  var isExitEarly = false;\n  if (isCallable(field.checkValueChanged)) {\n    field.flags.changed = field.checkValueChanged();\n  }\n\n  // use of '.some()' is to break iteration in middle by returning true\n  Object.keys(field.rules).filter(function (rule) {\n    if (!initial || !RuleContainer.has(rule)) { return true; }\n\n    return RuleContainer.isImmediate(rule);\n  }).some(function (rule) {\n    var ruleOptions = RuleContainer.getOptions(rule);\n    var result = this$1._test(field, value, { name: rule, params: field.rules[rule], options: ruleOptions });\n    if (isCallable(result.then)) {\n      promises.push(result);\n    } else if (!result.valid && this$1._shouldBail(field)) {\n      errors.push.apply(errors, result.errors);\n      isExitEarly = true;\n    } else {\n      // promisify the result.\n      promises.push(new Promise(function (resolve) { return resolve(result); }));\n    }\n\n    return isExitEarly;\n  });\n\n  if (isExitEarly) {\n    return Promise.resolve({ valid: false, errors: errors, id: field.id, field: field.name, scope: field.scope });\n  }\n\n  return Promise.all(promises).then(function (results) {\n    return results.reduce(function (prev, v) {\n        var ref;\n\n      if (!v.valid) {\n        (ref = prev.errors).push.apply(ref, v.errors);\n      }\n\n      prev.valid = prev.valid && v.valid;\n\n      return prev;\n    }, { valid: true, errors: errors, id: field.id, field: field.name, scope: field.scope });\n  });\n};\n\nObject.defineProperties( Validator.prototype, prototypeAccessors$4 );\nObject.defineProperties( Validator, staticAccessors$1 );\n\n// \n\nvar normalizeValue = function (value) {\n  if (isObject(value)) {\n    return Object.keys(value).reduce(function (prev, key) {\n      prev[key] = normalizeValue(value[key]);\n\n      return prev;\n    }, {});\n  }\n\n  if (isCallable(value)) {\n    return value('{0}', ['{1}', '{2}', '{3}']);\n  }\n\n  return value;\n};\n\nvar normalizeFormat = function (locale) {\n  // normalize messages\n  var dictionary = {};\n  if (locale.messages) {\n    dictionary.messages = normalizeValue(locale.messages);\n  }\n\n  if (locale.custom) {\n    dictionary.custom = normalizeValue(locale.custom);\n  }\n\n  if (locale.attributes) {\n    dictionary.attributes = locale.attributes;\n  }\n\n  if (!isNullOrUndefined(locale.dateFormat)) {\n    dictionary.dateFormat = locale.dateFormat;\n  }\n\n  return dictionary;\n};\n\nvar I18nDictionary = function I18nDictionary (i18n, rootKey) {\n  this.i18n = i18n;\n  this.rootKey = rootKey;\n};\n\nvar prototypeAccessors$5 = { locale: { configurable: true } };\n\nprototypeAccessors$5.locale.get = function () {\n  return this.i18n.locale;\n};\n\nprototypeAccessors$5.locale.set = function (value) {\n  warn('Cannot set locale from the validator when using vue-i18n, use i18n.locale setter instead');\n};\n\nI18nDictionary.prototype.getDateFormat = function getDateFormat (locale) {\n  return this.i18n.getDateTimeFormat(locale || this.locale);\n};\n\nI18nDictionary.prototype.setDateFormat = function setDateFormat (locale, value) {\n  this.i18n.setDateTimeFormat(locale || this.locale, value);\n};\n\nI18nDictionary.prototype.getMessage = function getMessage (_, key, data) {\n  var path = (this.rootKey) + \".messages.\" + key;\n  var dataOptions = data;\n\n  if (Array.isArray(data)) {\n    dataOptions = [].concat.apply([], data);\n  }\n\n  if (this.i18n.te(path)) {\n    return this.i18n.t(path, dataOptions);\n  }\n\n  // fallback to the fallback message\n  if (this.i18n.te(path, this.i18n.fallbackLocale)) {\n    return this.i18n.t(path, this.i18n.fallbackLocale, dataOptions);\n  }\n\n  // fallback to the root message\n  return this.i18n.t(((this.rootKey) + \".messages._default\"), dataOptions);\n};\n\nI18nDictionary.prototype.getAttribute = function getAttribute (_, key, fallback) {\n    if ( fallback === void 0 ) fallback = '';\n\n  var path = (this.rootKey) + \".attributes.\" + key;\n  if (this.i18n.te(path)) {\n    return this.i18n.t(path);\n  }\n\n  return fallback;\n};\n\nI18nDictionary.prototype.getFieldMessage = function getFieldMessage (_, field, key, data) {\n  var path = (this.rootKey) + \".custom.\" + field + \".\" + key;\n  if (this.i18n.te(path)) {\n    return this.i18n.t(path, data);\n  }\n\n  return this.getMessage(_, key, data);\n};\n\nI18nDictionary.prototype.merge = function merge$1 (dictionary) {\n    var this$1 = this;\n\n  Object.keys(dictionary).forEach(function (localeKey) {\n      var obj;\n\n    // i18n doesn't deep merge\n    // first clone the existing locale (avoid mutations to locale)\n    var clone = merge({}, getPath((localeKey + \".\" + (this$1.rootKey)), this$1.i18n.messages, {}));\n    // Merge cloned locale with new one\n    var locale = merge(clone, normalizeFormat(dictionary[localeKey]));\n    this$1.i18n.mergeLocaleMessage(localeKey, ( obj = {}, obj[this$1.rootKey] = locale, obj ));\n    if (locale.dateFormat) {\n      this$1.i18n.setDateTimeFormat(localeKey, locale.dateFormat);\n    }\n  });\n};\n\nI18nDictionary.prototype.setMessage = function setMessage (locale, key, value) {\n    var obj, obj$1;\n\n  this.merge(( obj$1 = {}, obj$1[locale] = {\n      messages: ( obj = {}, obj[key] = value, obj )\n    }, obj$1 ));\n};\n\nI18nDictionary.prototype.setAttribute = function setAttribute (locale, key, value) {\n    var obj, obj$1;\n\n  this.merge(( obj$1 = {}, obj$1[locale] = {\n      attributes: ( obj = {}, obj[key] = value, obj )\n    }, obj$1 ));\n};\n\nObject.defineProperties( I18nDictionary.prototype, prototypeAccessors$5 );\n\nvar aggressive = function () { return ({\n  on: ['input']\n}); };\n\nvar lazy = function () { return ({\n  on: ['change']\n}); };\n\nvar eager = function (ref) {\n  var errors = ref.errors;\n\n  if (errors.length) {\n    return {\n      on: ['input']\n    };\n  }\n\n  return {\n    on: ['change', 'blur']\n  };\n};\n\nvar passive = function () { return ({\n  on: []\n}); };\n\nvar modes = {\n  aggressive: aggressive,\n  eager: eager,\n  passive: passive,\n  lazy: lazy\n};\n\n// \n\nvar Vue;\nvar pendingPlugins;\nvar pluginInstance;\n\nvar VeeValidate$1 = function VeeValidate (config, _Vue) {\n  this.configure(config);\n  pluginInstance = this;\n  if (_Vue) {\n    Vue = _Vue;\n  }\n  this._validator = setValidator(\n    new Validator(null, { fastExit: config && config.fastExit }, this)\n  );\n  this._initVM(this.config);\n  this._initI18n(this.config);\n};\n\nvar prototypeAccessors$6 = { i18nDriver: { configurable: true },config: { configurable: true } };\nvar staticAccessors$2 = { i18nDriver: { configurable: true },config: { configurable: true } };\n\nVeeValidate$1.setI18nDriver = function setI18nDriver (driver, instance) {\n  DictionaryResolver.setDriver(driver, instance);\n};\n\nVeeValidate$1.configure = function configure (cfg) {\n  setConfig(cfg);\n};\n\nVeeValidate$1.setMode = function setMode (mode, implementation) {\n  setConfig({ mode: mode });\n  if (!implementation) {\n    return;\n  }\n\n  if (!isCallable(implementation)) {\n    throw new Error('A mode implementation must be a function');\n  }\n\n  modes[mode] = implementation;\n};\n\nVeeValidate$1.use = function use (plugin, options) {\n    if ( options === void 0 ) options = {};\n\n  if (!isCallable(plugin)) {\n    return warn('The plugin must be a callable function');\n  }\n\n  // Don't install plugins until vee-validate is installed.\n  if (!pluginInstance) {\n    if (!pendingPlugins) {\n      pendingPlugins = [];\n    }\n    pendingPlugins.push({ plugin: plugin, options: options });\n    return;\n  }\n\n  plugin({ Validator: Validator, ErrorBag: ErrorBag, Rules: Validator.rules }, options);\n};\nVeeValidate$1.install = function install (_Vue, opts) {\n  if (Vue && _Vue === Vue) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('already installed, Vue.use(VeeValidate) should only be called once.');\n    }\n    return;\n  }\n\n  Vue = _Vue;\n  pluginInstance = new VeeValidate$1(opts);\n  // inject the plugin container statically into the validator class\n  Validator.$vee = pluginInstance;\n\n  detectPassiveSupport();\n\n  Vue.mixin(mixin);\n  Vue.directive('validate', directive);\n  if (pendingPlugins) {\n    pendingPlugins.forEach(function (ref) {\n        var plugin = ref.plugin;\n        var options = ref.options;\n\n      VeeValidate$1.use(plugin, options);\n    });\n    pendingPlugins = null;\n  }\n};\n\nprototypeAccessors$6.i18nDriver.get = function () {\n  return DictionaryResolver.getDriver();\n};\n\nstaticAccessors$2.i18nDriver.get = function () {\n  return DictionaryResolver.getDriver();\n};\n\nprototypeAccessors$6.config.get = function () {\n  return getConfig();\n};\n\nstaticAccessors$2.config.get = function () {\n  return getConfig();\n};\n\nVeeValidate$1.prototype._initVM = function _initVM (config) {\n    var this$1 = this;\n\n  this._vm = new Vue({\n    data: function () { return ({\n      errors: this$1._validator.errors,\n      fields: this$1._validator.fields\n    }); }\n  });\n};\n\nVeeValidate$1.prototype._initI18n = function _initI18n (config) {\n    var this$1 = this;\n\n  var dictionary = config.dictionary;\n    var i18n = config.i18n;\n    var i18nRootKey = config.i18nRootKey;\n    var locale = config.locale;\n  var onLocaleChanged = function () {\n    if (dictionary) {\n      this$1.i18nDriver.merge(dictionary);\n    }\n\n    this$1._validator.errors.regenerate();\n  };\n\n  // i18 is being used for localization.\n  if (i18n) {\n    VeeValidate$1.setI18nDriver('i18n', new I18nDictionary(i18n, i18nRootKey));\n    i18n._vm.$watch('locale', onLocaleChanged);\n  } else if (typeof window !== 'undefined') {\n    this._vm.$on('localeChanged', onLocaleChanged);\n  }\n\n  if (dictionary) {\n    this.i18nDriver.merge(dictionary);\n  }\n\n  if (locale && !i18n) {\n    this._validator.localize(locale);\n  }\n};\n\nVeeValidate$1.prototype.configure = function configure (cfg) {\n  setConfig(cfg);\n};\n\nObject.defineProperties( VeeValidate$1.prototype, prototypeAccessors$6 );\nObject.defineProperties( VeeValidate$1, staticAccessors$2 );\n\nVeeValidate$1.mixin = mixin;\nVeeValidate$1.directive = directive;\nVeeValidate$1.Validator = Validator;\nVeeValidate$1.ErrorBag = ErrorBag;\n\n/**\n * Formates file size.\n *\n * @param {Number|String} size\n */\nvar formatFileSize = function (size) {\n  var units = ['Byte', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  var threshold = 1024;\n  size = Number(size) * threshold;\n  var i = size === 0 ? 0 : Math.floor(Math.log(size) / Math.log(threshold));\n  return (((size / Math.pow(threshold, i)).toFixed(2) * 1) + \" \" + (units[i]));\n};\n\n/**\n * Checks if vee-validate is defined globally.\n */\nvar isDefinedGlobally = function () {\n  return typeof VeeValidate !== 'undefined';\n};\n\nvar obj;\n\nvar messages = {\n  _default: function (field) { return (\"The \" + field + \" value is not valid.\"); },\n  after: function (field, ref) {\n    var target = ref[0];\n    var inclusion = ref[1];\n\n    return (\"The \" + field + \" must be after \" + (inclusion ? 'or equal to ' : '') + target + \".\");\n},\n  alpha: function (field) { return (\"The \" + field + \" field may only contain alphabetic characters.\"); },\n  alpha_dash: function (field) { return (\"The \" + field + \" field may contain alpha-numeric characters as well as dashes and underscores.\"); },\n  alpha_num: function (field) { return (\"The \" + field + \" field may only contain alpha-numeric characters.\"); },\n  alpha_spaces: function (field) { return (\"The \" + field + \" field may only contain alphabetic characters as well as spaces.\"); },\n  before: function (field, ref) {\n    var target = ref[0];\n    var inclusion = ref[1];\n\n    return (\"The \" + field + \" must be before \" + (inclusion ? 'or equal to ' : '') + target + \".\");\n},\n  between: function (field, ref) {\n    var min = ref[0];\n    var max = ref[1];\n\n    return (\"The \" + field + \" field must be between \" + min + \" and \" + max + \".\");\n},\n  confirmed: function (field) { return (\"The \" + field + \" confirmation does not match.\"); },\n  credit_card: function (field) { return (\"The \" + field + \" field is invalid.\"); },\n  date_between: function (field, ref) {\n    var min = ref[0];\n    var max = ref[1];\n\n    return (\"The \" + field + \" must be between \" + min + \" and \" + max + \".\");\n},\n  date_format: function (field, ref) {\n    var format = ref[0];\n\n    return (\"The \" + field + \" must be in the format \" + format + \".\");\n},\n  decimal: function (field, ref) {\n    if ( ref === void 0 ) ref = [];\n    var decimals = ref[0]; if ( decimals === void 0 ) decimals = '*';\n\n    return (\"The \" + field + \" field must be numeric and may contain \" + (!decimals || decimals === '*' ? '' : decimals) + \" decimal points.\");\n},\n  digits: function (field, ref) {\n    var length = ref[0];\n\n    return (\"The \" + field + \" field must be numeric and exactly contain \" + length + \" digits.\");\n},\n  dimensions: function (field, ref) {\n    var width = ref[0];\n    var height = ref[1];\n\n    return (\"The \" + field + \" field must be \" + width + \" pixels by \" + height + \" pixels.\");\n},\n  email: function (field) { return (\"The \" + field + \" field must be a valid email.\"); },\n  excluded: function (field) { return (\"The \" + field + \" field must be a valid value.\"); },\n  ext: function (field) { return (\"The \" + field + \" field must be a valid file.\"); },\n  image: function (field) { return (\"The \" + field + \" field must be an image.\"); },\n  included: function (field) { return (\"The \" + field + \" field must be a valid value.\"); },\n  integer: function (field) { return (\"The \" + field + \" field must be an integer.\"); },\n  ip: function (field) { return (\"The \" + field + \" field must be a valid ip address.\"); },\n  ip_or_fqdn: function (field) { return (\"The \" + field + \" field must be a valid ip address or FQDN.\"); },\n  length: function (field, ref) {\n    var length = ref[0];\n    var max = ref[1];\n\n    if (max) {\n      return (\"The \" + field + \" length must be between \" + length + \" and \" + max + \".\");\n    }\n\n    return (\"The \" + field + \" length must be \" + length + \".\");\n  },\n  max: function (field, ref) {\n    var length = ref[0];\n\n    return (\"The \" + field + \" field may not be greater than \" + length + \" characters.\");\n},\n  max_value: function (field, ref) {\n    var max = ref[0];\n\n    return (\"The \" + field + \" field must be \" + max + \" or less.\");\n},\n  mimes: function (field) { return (\"The \" + field + \" field must have a valid file type.\"); },\n  min: function (field, ref) {\n    var length = ref[0];\n\n    return (\"The \" + field + \" field must be at least \" + length + \" characters.\");\n},\n  min_value: function (field, ref) {\n    var min = ref[0];\n\n    return (\"The \" + field + \" field must be \" + min + \" or more.\");\n},\n  numeric: function (field) { return (\"The \" + field + \" field may only contain numeric characters.\"); },\n  regex: function (field) { return (\"The \" + field + \" field format is invalid.\"); },\n  required: function (field) { return (\"The \" + field + \" field is required.\"); },\n  required_if: function (field, ref) {\n    var target = ref[0];\n\n    return (\"The \" + field + \" field is required when the \" + target + \" field has this value.\");\n},\n  size: function (field, ref) {\n    var size = ref[0];\n\n    return (\"The \" + field + \" size must be less than \" + (formatFileSize(size)) + \".\");\n},\n  url: function (field) { return (\"The \" + field + \" field is not a valid URL.\"); }\n};\n\nvar locale = {\n  name: 'en',\n  messages: messages,\n  attributes: {}\n};\n\nif (isDefinedGlobally()) {\n  // eslint-disable-next-line\n  VeeValidate.Validator.localize(( obj = {}, obj[locale.name] = locale, obj ));\n}\n\nfunction toInteger (dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number)\n}\n\nvar MILLISECONDS_IN_MINUTE = 60000;\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nfunction getTimezoneOffsetInMilliseconds (dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = date.getTimezoneOffset();\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset\n}\n\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE$1 = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\n\nvar patterns = {\n  dateTimeDelimeter: /[T ]/,\n  plainTime: /:/,\n  timeZoneDelimeter: /[Z ]/i,\n\n  // year tokens\n  YY: /^(\\d{2})$/,\n  YYY: [\n    /^([+-]\\d{2})$/, // 0 additional digits\n    /^([+-]\\d{3})$/, // 1 additional digit\n    /^([+-]\\d{4})$/ // 2 additional digits\n  ],\n  YYYY: /^(\\d{4})/,\n  YYYYY: [\n    /^([+-]\\d{4})/, // 0 additional digits\n    /^([+-]\\d{5})/, // 1 additional digit\n    /^([+-]\\d{6})/ // 2 additional digits\n  ],\n\n  // date tokens\n  MM: /^-(\\d{2})$/,\n  DDD: /^-?(\\d{3})$/,\n  MMDD: /^-?(\\d{2})-?(\\d{2})$/,\n  Www: /^-?W(\\d{2})$/,\n  WwwD: /^-?W(\\d{2})-?(\\d{1})$/,\n\n  HH: /^(\\d{2}([.,]\\d*)?)$/,\n  HHMM: /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,\n  HHMMSS: /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,\n\n  // timezone tokens\n  timezone: /([Z+-].*)$/,\n  timezoneZ: /^(Z)$/,\n  timezoneHH: /^([+-])(\\d{2})$/,\n  timezoneHHMM: /^([+-])(\\d{2}):?(\\d{2})$/\n};\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n * If the function cannot parse the string or the values are invalid, it returns Invalid Date.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n * All *date-fns* functions will throw `RangeError` if `options.additionalDigits` is not 0, 1, 2 or undefined.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = toDate('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = toDate('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nfunction toDate (argument, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  if (argument === null) {\n    return new Date(NaN)\n  }\n\n  var options = dirtyOptions || {};\n\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2')\n  }\n\n  // Clone the date\n  if (argument instanceof Date ||\n    (typeof argument === 'object' && Object.prototype.toString.call(argument) === '[object Date]')\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (typeof argument === 'number' || Object.prototype.toString.call(argument) === '[object Number]') {\n    return new Date(argument)\n  } else if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN)\n  }\n\n  var dateStrings = splitDateString(argument);\n\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n  var year = parseYearResult.year;\n  var restDateString = parseYearResult.restDateString;\n\n  var date = parseDate(restDateString, year);\n\n  if (isNaN(date)) {\n    return new Date(NaN)\n  }\n\n  if (date) {\n    var timestamp = date.getTime();\n    var time = 0;\n    var offset;\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time);\n\n      if (isNaN(time)) {\n        return new Date(NaN)\n      }\n    }\n\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone);\n      if (isNaN(offset)) {\n        return new Date(NaN)\n      }\n    } else {\n      // get offset accurate to hour in timezones that change offset\n      offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time));\n      offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time + offset));\n    }\n\n    return new Date(timestamp + time + offset)\n  } else {\n    return new Date(NaN)\n  }\n}\n\nfunction splitDateString (dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimeter);\n  var timeString;\n\n  if (patterns.plainTime.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimeter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimeter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings\n}\n\nfunction parseYear (dateString, additionalDigits) {\n  var patternYYY = patterns.YYY[additionalDigits];\n  var patternYYYYY = patterns.YYYYY[additionalDigits];\n\n  var token;\n\n  // YYYY or ±YYYYY\n  token = patterns.YYYY.exec(dateString) || patternYYYYY.exec(dateString);\n  if (token) {\n    var yearString = token[1];\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    }\n  }\n\n  // YY or ±YYY\n  token = patterns.YY.exec(dateString) || patternYYY.exec(dateString);\n  if (token) {\n    var centuryString = token[1];\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    }\n  }\n\n  // Invalid ISO-formatted year\n  return {\n    year: null\n  }\n}\n\nfunction parseDate (dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n\n  var token;\n  var date;\n  var month;\n  var week;\n\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0);\n    date.setUTCFullYear(year);\n    return date\n  }\n\n  // YYYY-MM\n  token = patterns.MM.exec(dateString);\n  if (token) {\n    date = new Date(0);\n    month = parseInt(token[1], 10) - 1;\n\n    if (!validateDate(year, month)) {\n      return new Date(NaN)\n    }\n\n    date.setUTCFullYear(year, month);\n    return date\n  }\n\n  // YYYY-DDD or YYYYDDD\n  token = patterns.DDD.exec(dateString);\n  if (token) {\n    date = new Date(0);\n    var dayOfYear = parseInt(token[1], 10);\n\n    if (!validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN)\n    }\n\n    date.setUTCFullYear(year, 0, dayOfYear);\n    return date\n  }\n\n  // YYYY-MM-DD or YYYYMMDD\n  token = patterns.MMDD.exec(dateString);\n  if (token) {\n    date = new Date(0);\n    month = parseInt(token[1], 10) - 1;\n    var day = parseInt(token[2], 10);\n\n    if (!validateDate(year, month, day)) {\n      return new Date(NaN)\n    }\n\n    date.setUTCFullYear(year, month, day);\n    return date\n  }\n\n  // YYYY-Www or YYYYWww\n  token = patterns.Www.exec(dateString);\n  if (token) {\n    week = parseInt(token[1], 10) - 1;\n\n    if (!validateWeekDate(year, week)) {\n      return new Date(NaN)\n    }\n\n    return dayOfISOWeekYear(year, week)\n  }\n\n  // YYYY-Www-D or YYYYWwwD\n  token = patterns.WwwD.exec(dateString);\n  if (token) {\n    week = parseInt(token[1], 10) - 1;\n    var dayOfWeek = parseInt(token[2], 10) - 1;\n\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN)\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek)\n  }\n\n  // Invalid ISO-formatted date\n  return null\n}\n\nfunction parseTime (timeString) {\n  var token;\n  var hours;\n  var minutes;\n\n  // hh\n  token = patterns.HH.exec(timeString);\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'));\n\n    if (!validateTime(hours)) {\n      return NaN\n    }\n\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n\n  // hh:mm or hhmm\n  token = patterns.HHMM.exec(timeString);\n  if (token) {\n    hours = parseInt(token[1], 10);\n    minutes = parseFloat(token[2].replace(',', '.'));\n\n    if (!validateTime(hours, minutes)) {\n      return NaN\n    }\n\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE$1\n  }\n\n  // hh:mm:ss or hhmmss\n  token = patterns.HHMMSS.exec(timeString);\n  if (token) {\n    hours = parseInt(token[1], 10);\n    minutes = parseInt(token[2], 10);\n    var seconds = parseFloat(token[3].replace(',', '.'));\n\n    if (!validateTime(hours, minutes, seconds)) {\n      return NaN\n    }\n\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE$1 +\n      seconds * 1000\n  }\n\n  // Invalid ISO-formatted time\n  return null\n}\n\nfunction parseTimezone (timezoneString) {\n  var token;\n  var absoluteOffset;\n\n  // Z\n  token = patterns.timezoneZ.exec(timezoneString);\n  if (token) {\n    return 0\n  }\n\n  var hours;\n\n  // ±hh\n  token = patterns.timezoneHH.exec(timezoneString);\n  if (token) {\n    hours = parseInt(token[2], 10);\n\n    if (!validateTimezone(hours)) {\n      return NaN\n    }\n\n    absoluteOffset = hours * MILLISECONDS_IN_HOUR;\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  // ±hh:mm or ±hhmm\n  token = patterns.timezoneHHMM.exec(timezoneString);\n  if (token) {\n    hours = parseInt(token[2], 10);\n    var minutes = parseInt(token[3], 10);\n\n    if (!validateTimezone(hours, minutes)) {\n      return NaN\n    }\n\n    absoluteOffset = hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE$1;\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  return 0\n}\n\nfunction dayOfISOWeekYear (isoWeekYear, week, day) {\n  week = week || 0;\n  day = day || 0;\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date\n}\n\n// Validation functions\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex (year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)\n}\n\nfunction validateDate (year, month, date) {\n  if (month < 0 || month > 11) {\n    return false\n  }\n\n  if (date != null) {\n    if (date < 1) {\n      return false\n    }\n\n    var isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear && date > DAYS_IN_MONTH_LEAP_YEAR[month]) {\n      return false\n    }\n    if (!isLeapYear && date > DAYS_IN_MONTH[month]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction validateDayOfYearDate (year, dayOfYear) {\n  if (dayOfYear < 1) {\n    return false\n  }\n\n  var isLeapYear = isLeapYearIndex(year);\n  if (isLeapYear && dayOfYear > 366) {\n    return false\n  }\n  if (!isLeapYear && dayOfYear > 365) {\n    return false\n  }\n\n  return true\n}\n\nfunction validateWeekDate (year, week, day) {\n  if (week < 0 || week > 52) {\n    return false\n  }\n\n  if (day != null && (day < 0 || day > 6)) {\n    return false\n  }\n\n  return true\n}\n\nfunction validateTime (hours, minutes, seconds) {\n  if (hours != null && (hours < 0 || hours >= 25)) {\n    return false\n  }\n\n  if (minutes != null && (minutes < 0 || minutes >= 60)) {\n    return false\n  }\n\n  if (seconds != null && (seconds < 0 || seconds >= 60)) {\n    return false\n  }\n\n  return true\n}\n\nfunction validateTimezone (hours, minutes) {\n  if (minutes != null && (minutes < 0 || minutes > 59)) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nfunction addMilliseconds (dirtyDate, dirtyAmount, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')\n  }\n\n  var timestamp = toDate(dirtyDate, dirtyOptions).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount)\n}\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid('2014-02-31')\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  return !isNaN(date)\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n\n  halfAMinute: 'half a minute',\n\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nfunction formatDistance (token, count, options) {\n  options = options || {};\n\n  var result;\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result\n    } else {\n      return result + ' ago'\n    }\n  }\n\n  return result\n}\n\nfunction buildFormatLongFn (args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format\n  }\n}\n\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\n\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\n\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\n\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\n\nvar formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nfunction formatRelative (token, date, baseDate, options) {\n  return formatRelativeLocale[token]\n}\n\nfunction buildLocalizeFn (args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var context = options.context ? String(options.context) : 'standalone';\n\n    var valuesArray;\n    if (context === 'formatting' && args.formattingValues) {\n      valuesArray = args.formattingValues[width] || args.formattingValues[args.defaultFormattingWidth];\n    } else {\n      valuesArray = args.values[width] || args.values[args.defaultWidth];\n    }\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index]\n  }\n}\n\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\n\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\n\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\n\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber (dirtyNumber, dirtyOptions) {\n  var number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1\n    }\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaulFormattingWidth: 'wide'\n  })\n};\n\nfunction buildMatchPatternFn (args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) {\n      return null\n    }\n    var matchedString = matchResult[0];\n\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) {\n      return null\n    }\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    }\n  }\n}\n\nfunction buildMatchFn (args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n\n    var matchPattern = (width && args.matchPatterns[width]) || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null\n    }\n    var matchedString = matchResult[0];\n\n    var parsePatterns = (width && args.parsePatterns[width]) || args.parsePatterns[args.defaultParseWidth];\n\n    var value;\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = parsePatterns.findIndex(function (pattern) {\n        return pattern.test(string)\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(string)\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    }\n  }\n}\n\nfunction findKey (object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key\n    }\n  }\n}\n\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\n\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\n\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\n\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\n\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\n\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\n\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10)\n    }\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1\n    }\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale$1 = {\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1\n  }\n};\n\nvar MILLISECONDS_IN_DAY = 86400000;\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction getUTCDayOfYear (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1\n}\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction startOfUTCISOWeek (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var weekStartsOn = 1;\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date\n}\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction getUTCISOWeekYear (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear, dirtyOptions);\n\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year\n  } else {\n    return year - 1\n  }\n}\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction startOfUTCISOWeekYear (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var year = getUTCISOWeekYear(dirtyDate, dirtyOptions);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary, dirtyOptions);\n  return date\n}\n\nvar MILLISECONDS_IN_WEEK = 604800000;\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction getUTCISOWeek (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var diff = startOfUTCISOWeek(date, dirtyOptions).getTime() - startOfUTCISOWeekYear(date, dirtyOptions).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1\n}\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction startOfUTCWeek (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively')\n  }\n\n  var date = toDate(dirtyDate, options);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date\n}\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction getUTCWeekYear (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale &&\n    locale.options &&\n    locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate =\n    localeFirstWeekContainsDate == null\n      ? 1\n      : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate =\n    options.firstWeekContainsDate == null\n      ? defaultFirstWeekContainsDate\n      : toInteger(options.firstWeekContainsDate);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively')\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year\n  } else {\n    return year - 1\n  }\n}\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction startOfUTCWeekYear (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale &&\n    locale.options &&\n    locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate =\n    localeFirstWeekContainsDate == null\n      ? 1\n      : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate =\n    options.firstWeekContainsDate == null\n      ? defaultFirstWeekContainsDate\n      : toInteger(options.firstWeekContainsDate);\n\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date\n}\n\nvar MILLISECONDS_IN_WEEK$1 = 604800000;\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction getUTCWeek (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var diff = startOfUTCWeek(date, dirtyOptions).getTime() - startOfUTCWeekYear(date, dirtyOptions).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK$1) + 1\n}\n\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {width: 'abbreviated'})\n      // A, B\n      case 'GGGGG':\n        return localize.era(era, {width: 'narrow'})\n      // Anno Domini, Before Christ\n      case 'GGGG':\n      default:\n        return localize.era(era, {width: 'wide'})\n    }\n  },\n\n  // Year\n  y: function (date, token, localize, options) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    var signedYear = date.getUTCFullYear();\n\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n\n    // Two digit year\n    if (token === 'yy') {\n      var twoDigitYear = year % 100;\n      return addLeadingZeros(twoDigitYear, 2)\n    }\n\n    // Ordinal number\n    if (token === 'yo') {\n      return localize.ordinalNumber(year, {unit: 'year'})\n    }\n\n    // Padding\n    return addLeadingZeros(year, token.length)\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options);\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2)\n    }\n\n    // Ordinal number\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {unit: 'year'})\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length)\n  },\n\n  // ISO week-numbering year\n  R: function (date, token, localize, options) {\n    var isoWeekYear = getUTCISOWeekYear(date, options);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length)\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token, localize, options) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length)\n  },\n\n  // Quarter\n  Q: function (date, token, localize, options) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter)\n      // 01, 02, 03, 04\n      case 'QQ':\n        return addLeadingZeros(quarter, 2)\n      // 1st, 2nd, 3rd, 4th\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {unit: 'quarter'})\n      // Q1, Q2, Q3, Q4\n      case 'QQQ':\n        return localize.quarter(quarter, {width: 'abbreviated', context: 'formatting'})\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'QQQQQ':\n        return localize.quarter(quarter, {width: 'narrow', context: 'formatting'})\n      // 1st quarter, 2nd quarter, ...\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {width: 'wide', context: 'formatting'})\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize, options) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter)\n      // 01, 02, 03, 04\n      case 'qq':\n        return addLeadingZeros(quarter, 2)\n      // 1st, 2nd, 3rd, 4th\n      case 'qo':\n        return localize.ordinalNumber(quarter, {unit: 'quarter'})\n      // Q1, Q2, Q3, Q4\n      case 'qqq':\n        return localize.quarter(quarter, {width: 'abbreviated', context: 'standalone'})\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'qqqqq':\n        return localize.quarter(quarter, {width: 'narrow', context: 'standalone'})\n      // 1st quarter, 2nd quarter, ...\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {width: 'wide', context: 'standalone'})\n    }\n  },\n\n  // Month\n  M: function (date, token, localize, options) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'M':\n        return String(month + 1)\n      // 01, 02, ..., 12\n      case 'MM':\n        return addLeadingZeros(month + 1, 2)\n      // 1st, 2nd, ..., 12th\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {unit: 'month'})\n      // Jan, Feb, ..., Dec\n      case 'MMM':\n        return localize.month(month, {width: 'abbreviated', context: 'formatting'})\n      // J, F, ..., D\n      case 'MMMMM':\n        return localize.month(month, {width: 'narrow', context: 'formatting'})\n      // January, February, ..., December\n      case 'MMMM':\n      default:\n        return localize.month(month, {width: 'wide', context: 'formatting'})\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize, options) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1)\n      // 01, 02, ..., 12\n      case 'LL':\n        return addLeadingZeros(month + 1, 2)\n      // 1st, 2nd, ..., 12th\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {unit: 'month'})\n      // Jan, Feb, ..., Dec\n      case 'LLL':\n        return localize.month(month, {width: 'abbreviated', context: 'standalone'})\n      // J, F, ..., D\n      case 'LLLLL':\n        return localize.month(month, {width: 'narrow', context: 'standalone'})\n      // January, February, ..., December\n      case 'LLLL':\n      default:\n        return localize.month(month, {width: 'wide', context: 'standalone'})\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {unit: 'week'})\n    }\n\n    return addLeadingZeros(week, token.length)\n  },\n\n  // ISO week of year\n  I: function (date, token, localize, options) {\n    var isoWeek = getUTCISOWeek(date, options);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {unit: 'week'})\n    }\n\n    return addLeadingZeros(isoWeek, token.length)\n  },\n\n  // Day of the month\n  d: function (date, token, localize, options) {\n    var dayOfMonth = date.getUTCDate();\n\n    if (token === 'do') {\n      return localize.ordinalNumber(dayOfMonth, {unit: 'date'})\n    }\n\n    return addLeadingZeros(dayOfMonth, token.length)\n  },\n\n  // Day of year\n  D: function (date, token, localize, options) {\n    var dayOfYear = getUTCDayOfYear(date, options);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {unit: 'dayOfYear'})\n    }\n\n    return addLeadingZeros(dayOfYear, token.length)\n  },\n\n  // Day of week\n  E: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {width: 'abbreviated', context: 'formatting'})\n      // T\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {width: 'narrow', context: 'formatting'})\n      // Tu\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {width: 'short', context: 'formatting'})\n      // Tuesday\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {width: 'wide', context: 'formatting'})\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = ((dayOfWeek - options.weekStartsOn + 8) % 7) || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek)\n      // Padded numerical value\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2)\n      // 1st, 2nd, ..., 7th\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {unit: 'day'})\n      case 'eee':\n        return localize.day(dayOfWeek, {width: 'abbreviated', context: 'formatting'})\n      // T\n      case 'eeeee':\n        return localize.day(dayOfWeek, {width: 'narrow', context: 'formatting'})\n      // Tu\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {width: 'short', context: 'formatting'})\n      // Tuesday\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {width: 'wide', context: 'formatting'})\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = ((dayOfWeek - options.weekStartsOn + 8) % 7) || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek)\n      // Padded numberical value\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length)\n      // 1st, 2nd, ..., 7th\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {unit: 'day'})\n      case 'ccc':\n        return localize.day(dayOfWeek, {width: 'abbreviated', context: 'standalone'})\n      // T\n      case 'ccccc':\n        return localize.day(dayOfWeek, {width: 'narrow', context: 'standalone'})\n      // Tu\n      case 'cccccc':\n        return localize.day(dayOfWeek, {width: 'short', context: 'standalone'})\n      // Tuesday\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {width: 'wide', context: 'standalone'})\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek)\n      // 02\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length)\n      // 2nd\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {unit: 'day'})\n      // Tue\n      case 'iii':\n        return localize.day(dayOfWeek, {width: 'abbreviated', context: 'formatting'})\n      // T\n      case 'iiiii':\n        return localize.day(dayOfWeek, {width: 'narrow', context: 'formatting'})\n      // Tu\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {width: 'short', context: 'formatting'})\n      // Tuesday\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {width: 'wide', context: 'formatting'})\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = (hours / 12) >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {width: 'abbreviated', context: 'formatting'})\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {width: 'narrow', context: 'formatting'})\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {width: 'wide', context: 'formatting'})\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = (hours / 12) >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {width: 'abbreviated', context: 'formatting'})\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {width: 'narrow', context: 'formatting'})\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {width: 'wide', context: 'formatting'})\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {width: 'abbreviated', context: 'formatting'})\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {width: 'narrow', context: 'formatting'})\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {width: 'wide', context: 'formatting'})\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize, options) {\n    var hours = date.getUTCHours() % 12;\n\n    if (hours === 0) {\n      hours = 12;\n    }\n\n    if (token === 'ho') {\n      return localize.ordinalNumber(hours, {unit: 'hour'})\n    }\n\n    return addLeadingZeros(hours, token.length)\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize, options) {\n    var hours = date.getUTCHours();\n\n    if (token === 'Ho') {\n      return localize.ordinalNumber(hours, {unit: 'hour'})\n    }\n\n    return addLeadingZeros(hours, token.length)\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize, options) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {unit: 'hour'})\n    }\n\n    return addLeadingZeros(hours, token.length)\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize, options) {\n    var hours = date.getUTCHours();\n\n    if (hours === 0) {\n      hours = 24;\n    }\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {unit: 'hour'})\n    }\n\n    return addLeadingZeros(hours, token.length)\n  },\n\n  // Minute\n  m: function (date, token, localize, options) {\n    var minutes = date.getUTCMinutes();\n\n    if (token === 'mo') {\n      return localize.ordinalNumber(minutes, {unit: 'minute'})\n    }\n\n    return addLeadingZeros(minutes, token.length)\n  },\n\n  // Second\n  s: function (date, token, localize, options) {\n    var seconds = date.getUTCSeconds();\n\n    if (token === 'so') {\n      return localize.ordinalNumber(seconds, {unit: 'second'})\n    }\n\n    return addLeadingZeros(seconds, token.length)\n  },\n\n  // Fraction of second\n  S: function (date, token, localize, options) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, numberOfDigits)\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z'\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset)\n\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX': // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset)\n\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimeter\n      default:\n        return formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset)\n\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx': // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset)\n\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimeter\n      default:\n        return formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':')\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':')\n      // Long\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length)\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length)\n  }\n};\n\nfunction addLeadingZeros (number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n  return sign + output\n}\n\nfunction formatTimezone (offset, dirtyDelimeter) {\n  var delimeter = dirtyDelimeter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimeter + minutes\n}\n\nfunction formatTimezoneWithOptionalMinutes (offset, dirtyDelimeter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2)\n  }\n  return formatTimezone(offset, dirtyDelimeter)\n}\n\nfunction formatTimezoneShort (offset, dirtyDelimeter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours)\n  }\n  var delimeter = dirtyDelimeter || '';\n  return sign + String(hours) + delimeter + addLeadingZeros(minutes, 2)\n}\n\nfunction dateLongFormatter (pattern, formatLong, options) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({width: 'short'})\n    case 'PP':\n      return formatLong.date({width: 'medium'})\n    case 'PPP':\n      return formatLong.date({width: 'long'})\n    case 'PPPP':\n    default:\n      return formatLong.date({width: 'full'})\n  }\n}\n\nfunction timeLongFormatter (pattern, formatLong, options) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({width: 'short'})\n    case 'pp':\n      return formatLong.time({width: 'medium'})\n    case 'ppp':\n      return formatLong.time({width: 'long'})\n    case 'pppp':\n    default:\n      return formatLong.time({width: 'full'})\n  }\n}\n\nfunction dateTimeLongFormatter (pattern, formatLong, options) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong, options)\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({width: 'short'});\n      break\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({width: 'medium'});\n      break\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({width: 'long'});\n      break\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({width: 'full'});\n      break\n  }\n\n  return dateTimeFormat\n    .replace('{{date}}', dateLongFormatter(datePattern, formatLong, options))\n    .replace('{{time}}', timeLongFormatter(timePattern, formatLong, options))\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\n\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nfunction subMilliseconds (dirtyDate, dirtyAmount, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount, dirtyOptions)\n}\n\nvar protectedTokens = ['D', 'DD', 'YY', 'YYYY'];\n\nfunction isProtectedToken(token) {\n  return protectedTokens.indexOf(token) !== -1\n}\n\nfunction throwProtectedError(token) {\n  throw new RangeError(\n    '`options.awareOfUnicodeTokens` must be set to `true` to use `' +\n      token +\n      '` token; see: https://git.io/fxCyr'\n  )\n}\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nvar escapedStringRegExp = /^'(.*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 8     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 8     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. These tokens are often confused with others. See: https://git.io/fxCyr\n *\n * @param {Date|String|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens (`yy`, `yyyy`).\n *   See: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see: https://git.io/fxCyr\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(\n *   new Date(2014, 1, 11),\n *   'MM/dd/yyyy'\n * )\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(\n *   new Date(2014, 6, 2),\n *   \"do 'de' MMMM yyyy\",\n *   {locale: eoLocale}\n * )\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(\n *   new Date(2014, 6, 2, 15),\n *   \"h 'o''clock'\"\n * )\n * //=> \"3 o'clock\"\n */\nfunction format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError(\n      '2 arguments required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n\n  var locale = options.locale || locale$1;\n\n  var localeFirstWeekContainsDate =\n    locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate =\n    localeFirstWeekContainsDate == null\n      ? 1\n      : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate =\n    options.firstWeekContainsDate == null\n      ? defaultFirstWeekContainsDate\n      : toInteger(options.firstWeekContainsDate);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError(\n      'firstWeekContainsDate must be between 1 and 7 inclusively'\n    )\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn =\n    localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn =\n    options.weekStartsOn == null\n      ? defaultWeekStartsOn\n      : toInteger(options.weekStartsOn);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively')\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property')\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property')\n  }\n\n  var originalDate = toDate(dirtyDate, options);\n\n  if (!isValid(originalDate, options)) {\n    return 'Invalid Date'\n  }\n\n  // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset, options);\n\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n\n  var result = formatStr\n    .match(longFormattingTokensRegExp)\n    .map(function(substring) {\n      var firstCharacter = substring[0];\n      if (firstCharacter === 'p' || firstCharacter === 'P') {\n        var longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong, formatterOptions)\n      }\n      return substring\n    })\n    .join('')\n    .match(formattingTokensRegExp)\n    .map(function(substring) {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return \"'\"\n      }\n\n      var firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return cleanEscapedString(substring)\n      }\n\n      var formatter = formatters[firstCharacter];\n      if (formatter) {\n        if (!options.awareOfUnicodeTokens && isProtectedToken(substring)) {\n          throwProtectedError(substring);\n        }\n        return formatter(utcDate, substring, locale.localize, formatterOptions)\n      }\n\n      return substring\n    })\n    .join('');\n\n  return result\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\")\n}\n\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param {Date|String|Number} date - the date that should be after the other one to return true\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nfunction isAfter (dirtyDate, dirtyDateToCompare, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var dateToCompare = toDate(dirtyDateToCompare, dirtyOptions);\n  return date.getTime() > dateToCompare.getTime()\n}\n\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param {Date|String|Number} date - the date that should be before the other one to return true\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nfunction isBefore (dirtyDate, dirtyDateToCompare, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var dateToCompare = toDate(dirtyDateToCompare, dirtyOptions);\n  return date.getTime() < dateToCompare.getTime()\n}\n\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param {*} value - the value to check\n * @param {Options} [options] - the object with options. Unused; present for FP submodule compatibility sake. See [Options]{@link https://date-fns.org/docs/Options}\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * var result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * var result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * var result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * var result = isDate({})\n * //=> false\n */\n\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0)\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nfunction isEqual$1 (dirtyLeftDate, dirtyRightDate, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')\n  }\n\n  var dateLeft = toDate(dirtyLeftDate, dirtyOptions);\n  var dateRight = toDate(dirtyRightDate, dirtyOptions);\n  return dateLeft.getTime() === dateRight.getTime()\n}\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction setUTCDay (dirtyDate, dirtyDay, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var day = toInteger(dirtyDay);\n\n  var currentDay = date.getUTCDay();\n\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date\n}\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction setUTCWeek (dirtyDate, dirtyWeek, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, dirtyOptions) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date\n}\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction setUTCISODay (dirtyDate, dirtyDay, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')\n  }\n\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate, dirtyOptions);\n  var currentDay = date.getUTCDay();\n\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date\n}\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction setUTCISOWeek (dirtyDate, dirtyISOWeek, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date, dirtyOptions) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date\n}\n\nvar MILLISECONDS_IN_HOUR$1 = 3600000;\nvar MILLISECONDS_IN_MINUTE$2 = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\n\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n};\n\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern (pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null\n  }\n\n  var value = parseInt(matchResult[0], 10);\n\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  }\n}\n\nfunction parseTimezonePattern (pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    }\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value: sign * (\n      hours * MILLISECONDS_IN_HOUR$1 +\n        minutes * MILLISECONDS_IN_MINUTE$2 +\n        seconds * MILLISECONDS_IN_SECOND\n    ),\n    rest: string.slice(matchResult[0].length)\n  }\n}\n\nfunction parseAnyDigitsSigned (string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback)\n}\n\nfunction parseNDigits (n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback)\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback)\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback)\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback)\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback)\n  }\n}\n\nfunction parseNDigitsSigned (n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback)\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback)\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback)\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback)\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback)\n  }\n}\n\nfunction dayPeriodEnumToHours (enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4\n    case 'evening':\n      return 17\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0\n  }\n}\n\nfunction normalizeTwoDigitYear (twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  var result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result\n}\n\nvar DAYS_IN_MONTH$1 = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR$1 = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n// User for validation\nfunction isLeapYearIndex$1 (year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)\n}\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {width: 'abbreviated'}) ||\n            match.era(string, {width: 'narrow'})\n        // A, B\n        case 'GGGGG':\n          return match.era(string, {width: 'narrow'})\n        // Anno Domini, Before Christ\n        case 'GGGG':\n        default:\n          return match.era(string, {width: 'wide'}) ||\n            match.era(string, {width: 'abbreviated'}) ||\n            match.era(string, {width: 'narrow'})\n      }\n    },\n    set: function (date, value, options) {\n      // Sets year 10 BC if BC, or 10 AC if AC\n      date.setUTCFullYear(value === 1 ? 10 : -9, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date\n    }\n  },\n\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    priority: 130,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        }\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback)\n        case 'yo':\n          return match.ordinalNumber(string, {unit: 'year', valueCallback: valueCallback})\n        default:\n          return parseNDigits(token.length, string, valueCallback)\n      }\n    },\n    validate: function (date, value, options) {\n      return value.isTwoDigitYear || value.year > 0\n    },\n    set: function (date, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date\n      }\n\n      var year = currentYear > 0 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date\n    }\n  },\n\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        }\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback)\n        case 'Yo':\n          return match.ordinalNumber(string, {unit: 'year', valueCallback: valueCallback})\n        default:\n          return parseNDigits(token.length, string, valueCallback)\n      }\n    },\n    validate: function (date, value, options) {\n      return value.isTwoDigitYear || value.year > 0\n    },\n    set: function (date, value, options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options)\n      }\n\n      var year = currentYear > 0 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options)\n    }\n  },\n\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, match, options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string)\n      }\n\n      return parseNDigitsSigned(token.length, string)\n    },\n    set: function (date, value, options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear)\n    }\n  },\n\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, match, options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string)\n      }\n\n      return parseNDigitsSigned(token.length, string)\n    },\n    set: function (date, value, options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date\n    }\n  },\n\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ': // 01, 02, 03, 04\n          return parseNDigits(token.length, string)\n        // 1st, 2nd, 3rd, 4th\n        case 'Qo':\n          return match.ordinalNumber(string, {unit: 'quarter'})\n        // Q1, Q2, Q3, Q4\n        case 'QQQ':\n          return match.quarter(string, {width: 'abbreviated', context: 'formatting'}) ||\n            match.quarter(string, {width: 'narrow', context: 'formatting'})\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n        case 'QQQQQ':\n          return match.quarter(string, {width: 'narrow', context: 'formatting'})\n        // 1st quarter, 2nd quarter, ...\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {width: 'wide', context: 'formatting'}) ||\n            match.quarter(string, {width: 'abbreviated', context: 'formatting'}) ||\n            match.quarter(string, {width: 'narrow', context: 'formatting'})\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 1 && value <= 4\n    },\n    set: function (date, value, options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date\n    }\n  },\n\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq': // 01, 02, 03, 04\n          return parseNDigits(token.length, string)\n        // 1st, 2nd, 3rd, 4th\n        case 'qo':\n          return match.ordinalNumber(string, {unit: 'quarter'})\n        // Q1, Q2, Q3, Q4\n        case 'qqq':\n          return match.quarter(string, {width: 'abbreviated', context: 'standalone'}) ||\n            match.quarter(string, {width: 'narrow', context: 'standalone'})\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n        case 'qqqqq':\n          return match.quarter(string, {width: 'narrow', context: 'standalone'})\n        // 1st quarter, 2nd quarter, ...\n        case 'qqqq':\n        default:\n          return match.quarter(string, {width: 'wide', context: 'standalone'}) ||\n            match.quarter(string, {width: 'abbreviated', context: 'standalone'}) ||\n            match.quarter(string, {width: 'narrow', context: 'standalone'})\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 1 && value <= 4\n    },\n    set: function (date, value, options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date\n    }\n  },\n\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        return value - 1\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback)\n        // 01, 02, ..., 12\n        case 'MM':\n          return parseNDigits(2, string, valueCallback)\n        // 1st, 2nd, ..., 12th\n        case 'Mo':\n          return match.ordinalNumber(string, {unit: 'month', valueCallback: valueCallback})\n        // Jan, Feb, ..., Dec\n        case 'MMM':\n          return match.month(string, {width: 'abbreviated', context: 'formatting'}) ||\n            match.month(string, {width: 'narrow', context: 'formatting'})\n        // J, F, ..., D\n        case 'MMMMM':\n          return match.month(string, {width: 'narrow', context: 'formatting'})\n        // January, February, ..., December\n        case 'MMMM':\n        default:\n          return match.month(string, {width: 'wide', context: 'formatting'}) ||\n            match.month(string, {width: 'abbreviated', context: 'formatting'}) ||\n            match.month(string, {width: 'narrow', context: 'formatting'})\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 0 && value <= 11\n    },\n    set: function (date, value, options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date\n    }\n  },\n\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        return value - 1\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback)\n        // 01, 02, ..., 12\n        case 'LL':\n          return parseNDigits(2, string, valueCallback)\n        // 1st, 2nd, ..., 12th\n        case 'Lo':\n          return match.ordinalNumber(string, {unit: 'month', valueCallback: valueCallback})\n        // Jan, Feb, ..., Dec\n        case 'LLL':\n          return match.month(string, {width: 'abbreviated', context: 'standalone'}) ||\n            match.month(string, {width: 'narrow', context: 'standalone'})\n        // J, F, ..., D\n        case 'LLLLL':\n          return match.month(string, {width: 'narrow', context: 'standalone'})\n        // January, February, ..., December\n        case 'LLLL':\n        default:\n          return match.month(string, {width: 'wide', context: 'standalone'}) ||\n            match.month(string, {width: 'abbreviated', context: 'standalone'}) ||\n            match.month(string, {width: 'narrow', context: 'standalone'})\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 0 && value <= 11\n    },\n    set: function (date, value, options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date\n    }\n  },\n\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string)\n        case 'wo':\n          return match.ordinalNumber(string, {unit: 'week'})\n        default:\n          return parseNDigits(token.length, string)\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 1 && value <= 53\n    },\n    set: function (date, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options)\n    }\n  },\n\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string)\n        case 'Io':\n          return match.ordinalNumber(string, {unit: 'week'})\n        default:\n          return parseNDigits(token.length, string)\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 1 && value <= 53\n    },\n    set: function (date, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options)\n    }\n  },\n\n  // Day of the month\n  d: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string)\n        case 'do':\n          return match.ordinalNumber(string, {unit: 'date'})\n        default:\n          return parseNDigits(token.length, string)\n      }\n    },\n    validate: function (date, value, options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex$1(year);\n      var month = date.getUTCMonth();\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR$1[month]\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH$1[month]\n      }\n    },\n    set: function (date, value, options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date\n    }\n  },\n\n  // Day of year\n  D: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string)\n        case 'Do':\n          return match.ordinalNumber(string, {unit: 'date'})\n        default:\n          return parseNDigits(token.length, string)\n      }\n    },\n    validate: function (date, value, options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex$1(year);\n      if (isLeapYear) {\n        return value >= 1 && value <= 366\n      } else {\n        return value >= 1 && value <= 365\n      }\n    },\n    set: function (date, value, options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date\n    }\n  },\n\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {width: 'abbreviated', context: 'formatting'}) ||\n            match.day(string, {width: 'short', context: 'formatting'}) ||\n            match.day(string, {width: 'narrow', context: 'formatting'})\n        // T\n        case 'EEEEE':\n          return match.day(string, {width: 'narrow', context: 'formatting'})\n        // Tu\n        case 'EEEEEE':\n          return match.day(string, {width: 'short', context: 'formatting'}) ||\n          match.day(string, {width: 'narrow', context: 'formatting'})\n        // Tuesday\n        case 'EEEE':\n        default:\n          return match.day(string, {width: 'wide', context: 'formatting'}) ||\n            match.day(string, {width: 'abbreviated', context: 'formatting'}) ||\n            match.day(string, {width: 'short', context: 'formatting'}) ||\n            match.day(string, {width: 'narrow', context: 'formatting'})\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 0 && value <= 6\n    },\n    set: function (date, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date\n    }\n  },\n\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee': // 03\n          return parseNDigits(token.length, string, valueCallback)\n        // 3rd\n        case 'eo':\n          return match.ordinalNumber(string, {unit: 'day', valueCallback: valueCallback})\n        // Tue\n        case 'eee':\n          return match.day(string, {width: 'abbreviated', context: 'formatting'}) ||\n            match.day(string, {width: 'short', context: 'formatting'}) ||\n            match.day(string, {width: 'narrow', context: 'formatting'})\n        // T\n        case 'eeeee':\n          return match.day(string, {width: 'narrow', context: 'formatting'})\n        // Tu\n        case 'eeeeee':\n          return match.day(string, {width: 'short', context: 'formatting'}) ||\n          match.day(string, {width: 'narrow', context: 'formatting'})\n        // Tuesday\n        case 'eeee':\n        default:\n          return match.day(string, {width: 'wide', context: 'formatting'}) ||\n            match.day(string, {width: 'abbreviated', context: 'formatting'}) ||\n            match.day(string, {width: 'short', context: 'formatting'}) ||\n            match.day(string, {width: 'narrow', context: 'formatting'})\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 0 && value <= 6\n    },\n    set: function (date, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date\n    }\n  },\n\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc': // 03\n          return parseNDigits(token.length, string, valueCallback)\n        // 3rd\n        case 'co':\n          return match.ordinalNumber(string, {unit: 'day', valueCallback: valueCallback})\n        // Tue\n        case 'ccc':\n          return match.day(string, {width: 'abbreviated', context: 'standalone'}) ||\n            match.day(string, {width: 'short', context: 'standalone'}) ||\n            match.day(string, {width: 'narrow', context: 'standalone'})\n        // T\n        case 'ccccc':\n          return match.day(string, {width: 'narrow', context: 'standalone'})\n        // Tu\n        case 'cccccc':\n          return match.day(string, {width: 'short', context: 'standalone'}) ||\n          match.day(string, {width: 'narrow', context: 'standalone'})\n        // Tuesday\n        case 'cccc':\n        default:\n          return match.day(string, {width: 'wide', context: 'standalone'}) ||\n            match.day(string, {width: 'abbreviated', context: 'standalone'}) ||\n            match.day(string, {width: 'short', context: 'standalone'}) ||\n            match.day(string, {width: 'narrow', context: 'standalone'})\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 0 && value <= 6\n    },\n    set: function (date, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date\n    }\n  },\n\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7\n        }\n        return value\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii': // 02\n          return parseNDigits(token.length, string)\n        // 2nd\n        case 'io':\n          return match.ordinalNumber(string, {unit: 'day'})\n        // Tue\n        case 'iii':\n          return match.day(string, {width: 'abbreviated', context: 'formatting', valueCallback: valueCallback}) ||\n            match.day(string, {width: 'short', context: 'formatting', valueCallback: valueCallback}) ||\n            match.day(string, {width: 'narrow', context: 'formatting', valueCallback: valueCallback})\n        // T\n        case 'iiiii':\n          return match.day(string, {width: 'narrow', context: 'formatting', valueCallback: valueCallback})\n        // Tu\n        case 'iiiiii':\n          return match.day(string, {width: 'short', context: 'formatting', valueCallback: valueCallback}) ||\n          match.day(string, {width: 'narrow', context: 'formatting', valueCallback: valueCallback})\n        // Tuesday\n        case 'iiii':\n        default:\n          return match.day(string, {width: 'wide', context: 'formatting', valueCallback: valueCallback}) ||\n            match.day(string, {width: 'abbreviated', context: 'formatting', valueCallback: valueCallback}) ||\n            match.day(string, {width: 'short', context: 'formatting', valueCallback: valueCallback}) ||\n            match.day(string, {width: 'narrow', context: 'formatting', valueCallback: valueCallback})\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 1 && value <= 7\n    },\n    set: function (date, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date\n    }\n  },\n\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {width: 'abbreviated', context: 'formatting'}) ||\n            match.dayPeriod(string, {width: 'narrow', context: 'formatting'})\n        case 'aaaaa':\n          return match.dayPeriod(string, {width: 'narrow', context: 'formatting'})\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {width: 'wide', context: 'formatting'}) ||\n            match.dayPeriod(string, {width: 'abbreviated', context: 'formatting'}) ||\n            match.dayPeriod(string, {width: 'narrow', context: 'formatting'})\n      }\n    },\n    set: function (date, value, options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date\n    }\n  },\n\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {width: 'abbreviated', context: 'formatting'}) ||\n            match.dayPeriod(string, {width: 'narrow', context: 'formatting'})\n        case 'bbbbb':\n          return match.dayPeriod(string, {width: 'narrow', context: 'formatting'})\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {width: 'wide', context: 'formatting'}) ||\n            match.dayPeriod(string, {width: 'abbreviated', context: 'formatting'}) ||\n            match.dayPeriod(string, {width: 'narrow', context: 'formatting'})\n      }\n    },\n    set: function (date, value, options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {width: 'abbreviated', context: 'formatting'}) ||\n            match.dayPeriod(string, {width: 'narrow', context: 'formatting'})\n        case 'BBBBB':\n          return match.dayPeriod(string, {width: 'narrow', context: 'formatting'})\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {width: 'wide', context: 'formatting'}) ||\n            match.dayPeriod(string, {width: 'abbreviated', context: 'formatting'}) ||\n            match.dayPeriod(string, {width: 'narrow', context: 'formatting'})\n      }\n    },\n    set: function (date, value, options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date\n    }\n  },\n\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string)\n        case 'ho':\n          return match.ordinalNumber(string, {unit: 'hour'})\n        default:\n          return parseNDigits(token.length, string)\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 1 && value <= 12\n    },\n    set: function (date, value, options) {\n      var isPM = date.getUTCHours() >= 12;\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n      return date\n    }\n  },\n\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string)\n        case 'Ho':\n          return match.ordinalNumber(string, {unit: 'hour'})\n        default:\n          return parseNDigits(token.length, string)\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 0 && value <= 23\n    },\n    set: function (date, value, options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date\n    }\n  },\n\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string)\n        case 'Ko':\n          return match.ordinalNumber(string, {unit: 'hour'})\n        default:\n          return parseNDigits(token.length, string)\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 0 && value <= 11\n    },\n    set: function (date, value, options) {\n      var isPM = date.getUTCHours() >= 12;\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n      return date\n    }\n  },\n\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string)\n        case 'ko':\n          return match.ordinalNumber(string, {unit: 'hour'})\n        default:\n          return parseNDigits(token.length, string)\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 1 && value <= 24\n    },\n    set: function (date, value, options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date\n    }\n  },\n\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string)\n        case 'mo':\n          return match.ordinalNumber(string, {unit: 'minute'})\n        default:\n          return parseNDigits(token.length, string)\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 0 && value <= 59\n    },\n    set: function (date, value, options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date\n    }\n  },\n\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string)\n        case 'so':\n          return match.ordinalNumber(string, {unit: 'second'})\n        default:\n          return parseNDigits(token.length, string)\n      }\n    },\n    validate: function (date, value, options) {\n      return value >= 0 && value <= 59\n    },\n    set: function (date, value, options) {\n      date.setUTCSeconds(value, 0);\n      return date\n    }\n  },\n\n  // Fraction of second\n  S: {\n    priority: 40,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3))\n      };\n      return parseNDigits(token.length, string, valueCallback)\n    },\n    set: function (date, value, options) {\n      date.setUTCMilliseconds(value);\n      return date\n    }\n  },\n\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 20,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string)\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string)\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string)\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string)\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string)\n      }\n    },\n    set: function (date, value, options) {\n      return new Date(date.getTime() - value)\n    }\n  },\n\n  // Timezone (ISO-8601)\n  x: {\n    priority: 20,\n    parse: function (string, token, match, options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string)\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string)\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string)\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string)\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string)\n      }\n    },\n    set: function (date, value, options) {\n      return new Date(date.getTime() - value)\n    }\n  },\n\n  // Seconds timestamp\n  t: {\n    priority: 10,\n    parse: function (string, token, match, options) {\n      return parseAnyDigitsSigned(string)\n    },\n    set: function (date, value, options) {\n      return new Date(value * 1000)\n    }\n  },\n\n  // Milliseconds timestamp\n  T: {\n    priority: 10,\n    parse: function (string, token, match, options) {\n      return parseAnyDigitsSigned(string)\n    },\n    set: function (date, value, options) {\n      return new Date(value)\n    }\n  }\n};\n\nvar TIMEZONE_UNIT_PRIORITY = 20;\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nvar formattingTokensRegExp$1 = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\nvar escapedStringRegExp$1 = /^'(.*?)'?$/;\nvar doubleQuoteRegExp$1 = /''/g;\n\nvar notWhitespaceRegExp = /\\S/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 6     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 6     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              |  40 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  20 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  20 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Seconds timestamp               |  10 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Milliseconds timestamp          |  10 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `baseDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *\n * 6. These tokens are often confused with others. See: https://git.io/fxCyr\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `baseDate` which works as a context of parsing.\n *\n * `baseDate` must be passed for correct work of the function.\n * If you're not sure which `baseDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `baseDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `baseDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|String|Number} baseDate - defines values missing from the parsed dateString\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens (`yy`, `yyyy`).\n *   See: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see: https://git.io/fxCyr\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse(\n *   '02/11/2014',\n *   'MM/dd/yyyy',\n *   new Date()\n * )\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse(\n *   '28-a de februaro',\n *   \"do 'de' MMMM\",\n *   new Date(2010, 0, 1),\n *   {locale: eo}\n * )\n * //=> Sun Feb 28 2010 00:00:00\n */\nfunction parse(\n  dirtyDateString,\n  dirtyFormatString,\n  dirtyBaseDate,\n  dirtyOptions\n) {\n  if (arguments.length < 3) {\n    throw new TypeError(\n      '3 arguments required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n\n  var locale = options.locale || locale$1;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property')\n  }\n\n  var localeFirstWeekContainsDate =\n    locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate =\n    localeFirstWeekContainsDate == null\n      ? 1\n      : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate =\n    options.firstWeekContainsDate == null\n      ? defaultFirstWeekContainsDate\n      : toInteger(options.firstWeekContainsDate);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError(\n      'firstWeekContainsDate must be between 1 and 7 inclusively'\n    )\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn =\n    localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn =\n    options.weekStartsOn == null\n      ? defaultWeekStartsOn\n      : toInteger(options.weekStartsOn);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively')\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyBaseDate, options)\n    } else {\n      return new Date(NaN)\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale\n  };\n\n  // If timezone isn't specified, it will be set to the system timezone\n  var setters = [\n    {\n      priority: TIMEZONE_UNIT_PRIORITY,\n      set: dateToSystemTimezone,\n      index: 0\n    }\n  ];\n\n  var i;\n\n  var tokens = formatString.match(formattingTokensRegExp$1);\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.awareOfUnicodeTokens && isProtectedToken(token)) {\n      throwProtectedError(token);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n    if (parser) {\n      var parseResult = parser.parse(\n        dateString,\n        token,\n        locale.match,\n        subFnOptions\n      );\n\n      if (!parseResult) {\n        return new Date(NaN)\n      }\n\n      setters.push({\n        priority: parser.priority,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n\n      dateString = parseResult.rest;\n    } else {\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString$1(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN)\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN)\n  }\n\n  var uniquePrioritySetters = setters\n    .map(function(setter) {\n      return setter.priority\n    })\n    .sort(function(a, b) {\n      return b - a\n    })\n    .filter(function(priority, index, array) {\n      return array.indexOf(priority) === index\n    })\n    .map(function(priority) {\n      return setters\n        .filter(function(setter) {\n          return setter.priority === priority\n        })\n        .reverse()\n    })\n    .map(function(setterArray) {\n      return setterArray[0]\n    });\n\n  var date = toDate(dirtyBaseDate, options);\n\n  if (isNaN(date)) {\n    return new Date(NaN)\n  }\n\n  // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (\n      setter.validate &&\n      !setter.validate(utcDate, setter.value, subFnOptions)\n    ) {\n      return new Date(NaN)\n    }\n\n    utcDate = setter.set(utcDate, setter.value, subFnOptions);\n  }\n\n  return utcDate\n}\n\nfunction dateToSystemTimezone(date) {\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(\n    date.getUTCFullYear(),\n    date.getUTCMonth(),\n    date.getUTCDate()\n  );\n  convertedDate.setHours(\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds(),\n    date.getUTCMilliseconds()\n  );\n  return convertedDate\n}\n\nfunction cleanEscapedString$1(input) {\n  return input.match(escapedStringRegExp$1)[1].replace(doubleQuoteRegExp$1, \"'\")\n}\n\n// This file is generated automatically by `scripts/build/indices.js`. Please, don't change it.\n\n// \n\n/**\n * Custom parse behavior on top of date-fns parse function.\n */\nfunction parseDate$1 (date, format$1) {\n  if (typeof date !== 'string') {\n    return isValid(date) ? date : null;\n  }\n\n  var parsed = parse(date, format$1, new Date());\n\n  // if date is not valid or the formatted output after parsing does not match\n  // the string value passed in (avoids overflows)\n  if (!isValid(parsed) || format(parsed, format$1) !== date) {\n    return null;\n  }\n\n  return parsed;\n}\n\nvar afterValidator = function (value, ref) {\n  if ( ref === void 0 ) ref = {};\n  var targetValue = ref.targetValue;\n  var inclusion = ref.inclusion; if ( inclusion === void 0 ) inclusion = false;\n  var format = ref.format;\n\n  if (typeof format === 'undefined') {\n    format = inclusion;\n    inclusion = false;\n  }\n\n  value = parseDate$1(value, format);\n  targetValue = parseDate$1(targetValue, format);\n\n  // if either is not valid.\n  if (!value || !targetValue) {\n    return false;\n  }\n\n  return isAfter(value, targetValue) || (inclusion && isEqual$1(value, targetValue));\n};\n\nvar options = {\n  hasTarget: true,\n  isDate: true\n};\n\n// required to convert from a list of array values to an object.\nvar paramNames = ['targetValue', 'inclusion', 'format'];\n\nvar after = {\n  validate: afterValidator,\n  options: options,\n  paramNames: paramNames\n};\n\n/**\n * Some Alpha Regex helpers.\n * https://github.com/chriso/validator.js/blob/master/src/lib/alpha.js\n */\n\nvar alpha = {\n  en: /^[A-Z]*$/i,\n  cs: /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,\n  da: /^[A-ZÆØÅ]*$/i,\n  de: /^[A-ZÄÖÜß]*$/i,\n  es: /^[A-ZÁÉÍÑÓÚÜ]*$/i,\n  fr: /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,\n  it: /^[A-Z\\xC0-\\xFF]*$/i,\n  lt: /^[A-ZĄČĘĖĮŠŲŪŽ]*$/i,\n  nl: /^[A-ZÉËÏÓÖÜ]*$/i,\n  hu: /^[A-ZÁÉÍÓÖŐÚÜŰ]*$/i,\n  pl: /^[A-ZĄĆĘŚŁŃÓŻŹ]*$/i,\n  pt: /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,\n  ru: /^[А-ЯЁ]*$/i,\n  sk: /^[A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ]*$/i,\n  sr: /^[A-ZČĆŽŠĐ]*$/i,\n  sv: /^[A-ZÅÄÖ]*$/i,\n  tr: /^[A-ZÇĞİıÖŞÜ]*$/i,\n  uk: /^[А-ЩЬЮЯЄІЇҐ]*$/i,\n  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/,\n  az: /^[A-ZÇƏĞİıÖŞÜ]*$/i\n};\n\nvar alphaSpaces = {\n  en: /^[A-Z\\s]*$/i,\n  cs: /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ\\s]*$/i,\n  da: /^[A-ZÆØÅ\\s]*$/i,\n  de: /^[A-ZÄÖÜß\\s]*$/i,\n  es: /^[A-ZÁÉÍÑÓÚÜ\\s]*$/i,\n  fr: /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ\\s]*$/i,\n  it: /^[A-Z\\xC0-\\xFF\\s]*$/i,\n  lt: /^[A-ZĄČĘĖĮŠŲŪŽ\\s]*$/i,\n  nl: /^[A-ZÉËÏÓÖÜ\\s]*$/i,\n  hu: /^[A-ZÁÉÍÓÖŐÚÜŰ\\s]*$/i,\n  pl: /^[A-ZĄĆĘŚŁŃÓŻŹ\\s]*$/i,\n  pt: /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ\\s]*$/i,\n  ru: /^[А-ЯЁ\\s]*$/i,\n  sk: /^[A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ\\s]*$/i,\n  sr: /^[A-ZČĆŽŠĐ\\s]*$/i,\n  sv: /^[A-ZÅÄÖ\\s]*$/i,\n  tr: /^[A-ZÇĞİıÖŞÜ\\s]*$/i,\n  uk: /^[А-ЩЬЮЯЄІЇҐ\\s]*$/i,\n  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ\\s]*$/,\n  az: /^[A-ZÇƏĞİıÖŞÜ\\s]*$/i\n};\n\nvar alphanumeric = {\n  en: /^[0-9A-Z]*$/i,\n  cs: /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,\n  da: /^[0-9A-ZÆØÅ]$/i,\n  de: /^[0-9A-ZÄÖÜß]*$/i,\n  es: /^[0-9A-ZÁÉÍÑÓÚÜ]*$/i,\n  fr: /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,\n  it: /^[0-9A-Z\\xC0-\\xFF]*$/i,\n  lt: /^[0-9A-ZĄČĘĖĮŠŲŪŽ]*$/i,\n  hu: /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]*$/i,\n  nl: /^[0-9A-ZÉËÏÓÖÜ]*$/i,\n  pl: /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]*$/i,\n  pt: /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,\n  ru: /^[0-9А-ЯЁ]*$/i,\n  sk: /^[0-9A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ]*$/i,\n  sr: /^[0-9A-ZČĆŽŠĐ]*$/i,\n  sv: /^[0-9A-ZÅÄÖ]*$/i,\n  tr: /^[0-9A-ZÇĞİıÖŞÜ]*$/i,\n  uk: /^[0-9А-ЩЬЮЯЄІЇҐ]*$/i,\n  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/,\n  az: /^[0-9A-ZÇƏĞİıÖŞÜ]*$/i\n};\n\nvar alphaDash = {\n  en: /^[0-9A-Z_-]*$/i,\n  cs: /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ_-]*$/i,\n  da: /^[0-9A-ZÆØÅ_-]*$/i,\n  de: /^[0-9A-ZÄÖÜß_-]*$/i,\n  es: /^[0-9A-ZÁÉÍÑÓÚÜ_-]*$/i,\n  fr: /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ_-]*$/i,\n  it: /^[0-9A-Z\\xC0-\\xFF_-]*$/i,\n  lt: /^[0-9A-ZĄČĘĖĮŠŲŪŽ_-]*$/i,\n  nl: /^[0-9A-ZÉËÏÓÖÜ_-]*$/i,\n  hu: /^[0-9A-ZÁÉÍÓÖŐÚÜŰ_-]*$/i,\n  pl: /^[0-9A-ZĄĆĘŚŁŃÓŻŹ_-]*$/i,\n  pt: /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ_-]*$/i,\n  ru: /^[0-9А-ЯЁ_-]*$/i,\n  sk: /^[0-9A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ_-]*$/i,\n  sr: /^[0-9A-ZČĆŽŠĐ_-]*$/i,\n  sv: /^[0-9A-ZÅÄÖ_-]*$/i,\n  tr: /^[0-9A-ZÇĞİıÖŞÜ_-]*$/i,\n  uk: /^[0-9А-ЩЬЮЯЄІЇҐ_-]*$/i,\n  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ_-]*$/,\n  az: /^[0-9A-ZÇƏĞİıÖŞÜ_-]*$/i\n};\n\nvar validate = function (value, ref) {\n  if ( ref === void 0 ) ref = {};\n  var locale = ref.locale;\n\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return validate(val, [locale]); });\n  }\n\n  // Match at least one locale.\n  if (! locale) {\n    return Object.keys(alpha).some(function (loc) { return alpha[loc].test(value); });\n  }\n\n  return (alpha[locale] || alpha.en).test(value);\n};\n\nvar paramNames$1 = ['locale'];\n\nvar alpha$1 = {\n  validate: validate,\n  paramNames: paramNames$1\n};\n\nvar validate$1 = function (value, ref) {\n  if ( ref === void 0 ) ref = {};\n  var locale = ref.locale;\n\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return validate$1(val, [locale]); });\n  }\n\n  // Match at least one locale.\n  if (! locale) {\n    return Object.keys(alphaDash).some(function (loc) { return alphaDash[loc].test(value); });\n  }\n\n  return (alphaDash[locale] || alphaDash.en).test(value);\n};\n\nvar paramNames$2 = ['locale'];\n\nvar alpha_dash = {\n  validate: validate$1,\n  paramNames: paramNames$2\n};\n\nvar validate$2 = function (value, ref) {\n  if ( ref === void 0 ) ref = {};\n  var locale = ref.locale;\n\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return validate$2(val, [locale]); });\n  }\n\n  // Match at least one locale.\n  if (! locale) {\n    return Object.keys(alphanumeric).some(function (loc) { return alphanumeric[loc].test(value); });\n  }\n\n  return (alphanumeric[locale] || alphanumeric.en).test(value);\n};\n\nvar paramNames$3 = ['locale'];\n\nvar alpha_num = {\n  validate: validate$2,\n  paramNames: paramNames$3\n};\n\nvar validate$3 = function (value, ref) {\n  if ( ref === void 0 ) ref = {};\n  var locale = ref.locale;\n\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return validate$3(val, [locale]); });\n  }\n\n  // Match at least one locale.\n  if (! locale) {\n    return Object.keys(alphaSpaces).some(function (loc) { return alphaSpaces[loc].test(value); });\n  }\n\n  return (alphaSpaces[locale] || alphaSpaces.en).test(value);\n};\n\nvar paramNames$4 = ['locale'];\n\nvar alpha_spaces = {\n  validate: validate$3,\n  paramNames: paramNames$4\n};\n\nvar validate$4 = function (value, ref) {\n  if ( ref === void 0 ) ref = {};\n  var targetValue = ref.targetValue;\n  var inclusion = ref.inclusion; if ( inclusion === void 0 ) inclusion = false;\n  var format = ref.format;\n\n  if (typeof format === 'undefined') {\n    format = inclusion;\n    inclusion = false;\n  }\n\n  value = parseDate$1(value, format);\n  targetValue = parseDate$1(targetValue, format);\n\n  // if either is not valid.\n  if (!value || !targetValue) {\n    return false;\n  }\n\n  return isBefore(value, targetValue) || (inclusion && isEqual$1(value, targetValue));\n};\n\nvar options$1 = {\n  hasTarget: true,\n  isDate: true\n};\n\nvar paramNames$5 = ['targetValue', 'inclusion', 'format'];\n\nvar before = {\n  validate: validate$4,\n  options: options$1,\n  paramNames: paramNames$5\n};\n\nvar validate$5 = function (value, ref) {\n  if ( ref === void 0 ) ref = {};\n  var min = ref.min;\n  var max = ref.max;\n\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return validate$5(val, { min: min, max: max }); });\n  }\n\n  return Number(min) <= value && Number(max) >= value;\n};\n\nvar paramNames$6 = ['min', 'max'];\n\nvar between = {\n  validate: validate$5,\n  paramNames: paramNames$6\n};\n\nvar validate$6 = function (value, ref) {\n  var targetValue = ref.targetValue;\n\n  return String(value) === String(targetValue);\n};\nvar options$2 = {\n  hasTarget: true\n};\n\nvar paramNames$7 = ['targetValue'];\n\nvar confirmed = {\n  validate: validate$6,\n  options: options$2,\n  paramNames: paramNames$7\n};\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x.default : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar assertString_1 = createCommonjsModule(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = assertString;\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = void 0;\n    if (input === null) {\n      invalidType = 'null';\n    } else {\n      invalidType = typeof input === 'undefined' ? 'undefined' : _typeof(input);\n      if (invalidType === 'object' && input.constructor && input.constructor.hasOwnProperty('name')) {\n        invalidType = input.constructor.name;\n      } else {\n        invalidType = 'a ' + invalidType;\n      }\n    }\n    throw new TypeError('Expected string but received ' + invalidType + '.');\n  }\n}\nmodule.exports = exports['default'];\n});\n\nunwrapExports(assertString_1);\n\nvar isCreditCard_1 = createCommonjsModule(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCreditCard;\n\n\n\nvar _assertString2 = _interopRequireDefault(assertString_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\nvar creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|6[27][0-9]{14})$/;\n/* eslint-enable max-len */\n\nfunction isCreditCard(str) {\n  (0, _assertString2.default)(str);\n  var sanitized = str.replace(/[- ]+/g, '');\n  if (!creditCard.test(sanitized)) {\n    return false;\n  }\n  var sum = 0;\n  var digit = void 0;\n  var tmpNum = void 0;\n  var shouldDouble = void 0;\n  for (var i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n    if (shouldDouble) {\n      tmpNum *= 2;\n      if (tmpNum >= 10) {\n        sum += tmpNum % 10 + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n    shouldDouble = !shouldDouble;\n  }\n  return !!(sum % 10 === 0 ? sanitized : false);\n}\nmodule.exports = exports['default'];\n});\n\nvar isCreditCard = unwrapExports(isCreditCard_1);\n\nvar validate$7 = function (value) { return isCreditCard(String(value)); };\n\nvar credit_card = {\n  validate: validate$7\n};\n\nvar validate$8 = function (value, ref) {\n  if ( ref === void 0 ) ref = {};\n  var min = ref.min;\n  var max = ref.max;\n  var inclusivity = ref.inclusivity; if ( inclusivity === void 0 ) inclusivity = '()';\n  var format = ref.format;\n\n  if (typeof format === 'undefined') {\n    format = inclusivity;\n    inclusivity = '()';\n  }\n\n  var minDate = parseDate$1(String(min), format);\n  var maxDate = parseDate$1(String(max), format);\n  var dateVal = parseDate$1(String(value), format);\n\n  if (!minDate || !maxDate || !dateVal) {\n    return false;\n  }\n\n  if (inclusivity === '()') {\n    return isAfter(dateVal, minDate) && isBefore(dateVal, maxDate);\n  }\n\n  if (inclusivity === '(]') {\n    return isAfter(dateVal, minDate) && (isEqual$1(dateVal, maxDate) || isBefore(dateVal, maxDate));\n  }\n\n  if (inclusivity === '[)') {\n    return isBefore(dateVal, maxDate) && (isEqual$1(dateVal, minDate) || isAfter(dateVal, minDate));\n  }\n\n  return isEqual$1(dateVal, maxDate) || isEqual$1(dateVal, minDate) ||\n    (isBefore(dateVal, maxDate) && isAfter(dateVal, minDate));\n};\n\nvar options$3 = {\n  isDate: true\n};\n\nvar paramNames$8 = ['min', 'max', 'inclusivity', 'format'];\n\nvar date_between = {\n  validate: validate$8,\n  options: options$3,\n  paramNames: paramNames$8\n};\n\nvar validate$9 = function (value, ref) {\n  var format = ref.format;\n\n  return !!parseDate$1(value, format);\n};\n\nvar options$4 = {\n  isDate: true\n};\n\nvar paramNames$9 = ['format'];\n\nvar date_format = {\n  validate: validate$9,\n  options: options$4,\n  paramNames: paramNames$9\n};\n\nvar validate$a = function (value, ref) {\n  if ( ref === void 0 ) ref = {};\n  var decimals = ref.decimals; if ( decimals === void 0 ) decimals = '*';\n  var separator = ref.separator; if ( separator === void 0 ) separator = '.';\n\n  if (isNullOrUndefined(value) || value === '') {\n    return false;\n  }\n\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return validate$a(val, { decimals: decimals, separator: separator }); });\n  }\n\n  // if is 0.\n  if (Number(decimals) === 0) {\n    return /^-?\\d*$/.test(value);\n  }\n\n  var regexPart = decimals === '*' ? '+' : (\"{1,\" + decimals + \"}\");\n  var regex = new RegExp((\"^[-+]?\\\\d*(\\\\\" + separator + \"\\\\d\" + regexPart + \")?([eE]{1}[-]?\\\\d+)?$\"));\n\n  if (! regex.test(value)) {\n    return false;\n  }\n\n  var parsedValue = parseFloat(value);\n\n  // eslint-disable-next-line\n  return parsedValue === parsedValue;\n};\n\nvar paramNames$a = ['decimals', 'separator'];\n\nvar decimal = {\n  validate: validate$a,\n  paramNames: paramNames$a\n};\n\nvar validate$b = function (value, ref) {\n  var length = ref[0];\n\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return validate$b(val, [length]); });\n  }\n  var strVal = String(value);\n\n  return /^[0-9]*$/.test(strVal) && strVal.length === Number(length);\n};\n\nvar digits = {\n  validate: validate$b\n};\n\nvar imageRegex = /\\.(jpg|svg|jpeg|png|bmp|gif)$/i;\n\nvar validateImage = function (file, width, height) {\n  var URL = window.URL || window.webkitURL;\n  return new Promise(function (resolve) {\n    var image = new Image();\n    image.onerror = function () { return resolve({ valid: false }); };\n    image.onload = function () { return resolve({\n      valid: image.width === Number(width) && image.height === Number(height)\n    }); };\n\n    image.src = URL.createObjectURL(file);\n  });\n};\n\nvar validate$c = function (files, ref) {\n  var width = ref[0];\n  var height = ref[1];\n\n  var images = ensureArray(files).filter(function (file) { return imageRegex.test(file.name); });\n  if (images.length === 0) {\n    return false;\n  }\n  return Promise.all(images.map(function (image) { return validateImage(image, width, height); }));\n};\n\nvar dimensions = {\n  validate: validate$c\n};\n\nvar merge_1 = createCommonjsModule(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments[1];\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n  return obj;\n}\nmodule.exports = exports['default'];\n});\n\nunwrapExports(merge_1);\n\nvar isByteLength_1 = createCommonjsModule(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = isByteLength;\n\n\n\nvar _assertString2 = _interopRequireDefault(assertString_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n  (0, _assertString2.default)(str);\n  var min = void 0;\n  var max = void 0;\n  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n  var len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\nmodule.exports = exports['default'];\n});\n\nunwrapExports(isByteLength_1);\n\nvar isFQDN_1 = createCommonjsModule(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\n\n\nvar _assertString2 = _interopRequireDefault(assertString_1);\n\n\n\nvar _merge2 = _interopRequireDefault(merge_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString2.default)(str);\n  options = (0, _merge2.default)(options, default_fqdn_options);\n\n  /* Remove the optional trailing dot before checking validity */\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  var parts = str.split('.');\n  for (var i = 0; i < parts.length; i++) {\n    if (parts[i].length > 63) {\n      return false;\n    }\n  }\n  if (options.require_tld) {\n    var tld = parts.pop();\n    if (!parts.length || !/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    }\n    // disallow spaces\n    if (/[\\s\\u2002-\\u200B\\u202F\\u205F\\u3000\\uFEFF\\uDB40\\uDC20]/.test(tld)) {\n      return false;\n    }\n  }\n  for (var part, _i = 0; _i < parts.length; _i++) {\n    part = parts[_i];\n    if (options.allow_underscores) {\n      part = part.replace(/_/g, '');\n    }\n    if (!/^[a-z\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    }\n    // disallow full-width chars\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    }\n    if (part[0] === '-' || part[part.length - 1] === '-') {\n      return false;\n    }\n  }\n  return true;\n}\nmodule.exports = exports['default'];\n});\n\nvar isFQDN = unwrapExports(isFQDN_1);\n\nvar isIP_1 = createCommonjsModule(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\n\n\nvar _assertString2 = _interopRequireDefault(assertString_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ipv4Maybe = /^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})$/;\nvar ipv6Block = /^[0-9A-F]{1,4}$/i;\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  (0, _assertString2.default)(str);\n  version = String(version);\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  } else if (version === '4') {\n    if (!ipv4Maybe.test(str)) {\n      return false;\n    }\n    var parts = str.split('.').sort(function (a, b) {\n      return a - b;\n    });\n    return parts[3] <= 255;\n  } else if (version === '6') {\n    var blocks = str.split(':');\n    var foundOmissionBlock = false; // marker to indicate ::\n\n    // At least some OS accept the last 32 bits of an IPv6 address\n    // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says\n    // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,\n    // and '::a.b.c.d' is deprecated, but also valid.\n    var foundIPv4TransitionBlock = isIP(blocks[blocks.length - 1], 4);\n    var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;\n\n    if (blocks.length > expectedNumberOfBlocks) {\n      return false;\n    }\n    // initial or final ::\n    if (str === '::') {\n      return true;\n    } else if (str.substr(0, 2) === '::') {\n      blocks.shift();\n      blocks.shift();\n      foundOmissionBlock = true;\n    } else if (str.substr(str.length - 2) === '::') {\n      blocks.pop();\n      blocks.pop();\n      foundOmissionBlock = true;\n    }\n\n    for (var i = 0; i < blocks.length; ++i) {\n      // test for a :: which can not be at the string start/end\n      // since those cases have been handled above\n      if (blocks[i] === '' && i > 0 && i < blocks.length - 1) {\n        if (foundOmissionBlock) {\n          return false; // multiple :: in address\n        }\n        foundOmissionBlock = true;\n      } else if (foundIPv4TransitionBlock && i === blocks.length - 1) ; else if (!ipv6Block.test(blocks[i])) {\n        return false;\n      }\n    }\n    if (foundOmissionBlock) {\n      return blocks.length >= 1;\n    }\n    return blocks.length === expectedNumberOfBlocks;\n  }\n  return false;\n}\nmodule.exports = exports['default'];\n});\n\nvar isIP = unwrapExports(isIP_1);\n\nvar isEmail_1 = createCommonjsModule(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmail;\n\n\n\nvar _assertString2 = _interopRequireDefault(assertString_1);\n\n\n\nvar _merge2 = _interopRequireDefault(merge_1);\n\n\n\nvar _isByteLength2 = _interopRequireDefault(isByteLength_1);\n\n\n\nvar _isFQDN2 = _interopRequireDefault(isFQDN_1);\n\n\n\nvar _isIP2 = _interopRequireDefault(isIP_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_email_options = {\n  allow_display_name: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true\n};\n\n/* eslint-disable max-len */\n/* eslint-disable no-control-regex */\nvar displayName = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\,\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\s]*<(.+)>$/i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar gmailUserPart = /^[a-z\\d]+$/;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\n/* eslint-enable max-len */\n/* eslint-enable no-control-regex */\n\nfunction isEmail(str, options) {\n  (0, _assertString2.default)(str);\n  options = (0, _merge2.default)(options, default_email_options);\n\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(displayName);\n    if (display_email) {\n      str = display_email[1];\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var user = parts.join('@');\n\n  var lower_domain = domain.toLowerCase();\n\n  if (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {\n    /*\n      Previously we removed dots for gmail addresses before validating.\n      This was removed because it allows `multiple..dots@gmail.com`\n      to be reported as valid, but it is not.\n      Gmail only normalizes single dots, removing them from here is pointless,\n      should be done in normalizeEmail\n    */\n    user = user.toLowerCase();\n\n    // Removing sub-address from username before gmail validation\n    var username = user.split('+')[0];\n\n    // Dots are not included in gmail length restriction\n    if (!(0, _isByteLength2.default)(username.replace('.', ''), { min: 6, max: 30 })) {\n      return false;\n    }\n\n    var _user_parts = username.split('.');\n    for (var i = 0; i < _user_parts.length; i++) {\n      if (!gmailUserPart.test(_user_parts[i])) {\n        return false;\n      }\n    }\n  }\n\n  if (!(0, _isByteLength2.default)(user, { max: 64 }) || !(0, _isByteLength2.default)(domain, { max: 254 })) {\n    return false;\n  }\n\n  if (!(0, _isFQDN2.default)(domain, { require_tld: options.require_tld })) {\n    if (!options.allow_ip_domain) {\n      return false;\n    }\n\n    if (!(0, _isIP2.default)(domain)) {\n      if (!domain.startsWith('[') || !domain.endsWith(']')) {\n        return false;\n      }\n\n      var noBracketdomain = domain.substr(1, domain.length - 2);\n\n      if (noBracketdomain.length === 0 || !(0, _isIP2.default)(noBracketdomain)) {\n        return false;\n      }\n    }\n  }\n\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n\n  var user_parts = user.split('.');\n  for (var _i = 0; _i < user_parts.length; _i++) {\n    if (!pattern.test(user_parts[_i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nmodule.exports = exports['default'];\n});\n\nvar isEmail = unwrapExports(isEmail_1);\n\nfunction objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }\n\nvar validate$d = function (value, ref) {\n  if ( ref === void 0 ) ref = {};\n  var multiple = ref.multiple; if ( multiple === void 0 ) multiple = false;\n  var rest = objectWithoutProperties( ref, [\"multiple\"] );\n  var options = rest;\n\n  if (multiple && !Array.isArray(value)) {\n    value = String(value).split(',').map(function (emailStr) { return emailStr.trim(); });\n  }\n\n  var validatorOptions = assign({}, options);\n\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return isEmail(String(val), validatorOptions); });\n  }\n\n  return isEmail(String(value), validatorOptions);\n};\n\nvar email = {\n  validate: validate$d\n};\n\nvar validate$e = function (value, options) {\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return validate$e(val, options); });\n  }\n\n  return toArray(options).some(function (item) {\n    // eslint-disable-next-line\n    return item == value;\n  });\n};\n\nvar included = {\n  validate: validate$e\n};\n\nvar validate$f = function () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return !validate$e.apply(void 0, args);\n};\n\nvar excluded = {\n  validate: validate$f\n};\n\nvar validate$g = function (files, extensions) {\n  var regex = new RegExp((\".(\" + (extensions.join('|')) + \")$\"), 'i');\n  return ensureArray(files).every(function (file) { return regex.test(file.name); });\n};\n\nvar ext = {\n  validate: validate$g\n};\n\nvar validate$h = function (files) { return (Array.isArray(files) ? files : [files]).every(function (file) { return /\\.(jpg|svg|jpeg|png|bmp|gif)$/i.test(file.name); }); };\n\nvar image = {\n  validate: validate$h\n};\n\nvar validate$i = function (value) {\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return /^-?[0-9]+$/.test(String(val)); });\n  }\n\n  return /^-?[0-9]+$/.test(String(value));\n};\n\nvar integer = {\n  validate: validate$i\n};\n\nvar validate$j = function (value, ref) {\n  if ( ref === void 0 ) ref = {};\n  var version = ref.version; if ( version === void 0 ) version = 4;\n\n  if (isNullOrUndefined(value)) {\n    value = '';\n  }\n\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return isIP(val, version); });\n  }\n\n  return isIP(value, version);\n};\n\nvar paramNames$b = ['version'];\n\nvar ip = {\n  validate: validate$j,\n  paramNames: paramNames$b\n};\n\nvar validate$k = function (value) {\n  if (isNullOrUndefined(value)) {\n    value = '';\n  }\n\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return (isIP(val, '') || isFQDN(val)); });\n  }\n\n  return isIP(value, '') || isFQDN(value);\n};\n\nvar ip_or_fqdn = {\n  validate: validate$k\n};\n\nvar validate$l = function (value, ref) {\n  if ( ref === void 0 ) ref = [];\n  var other = ref[0];\n\n  return value === other;\n};\n\nvar is = {\n  validate: validate$l\n};\n\nvar validate$m = function (value, ref) {\n  if ( ref === void 0 ) ref = [];\n  var other = ref[0];\n\n  return value !== other;\n};\n\nvar is_not = {\n  validate: validate$m\n};\n\n/**\n * @param {Array|String} value\n * @param {Number} length\n * @param {Number} max\n */\nvar compare = function (value, length, max) {\n  if (max === undefined) {\n    return value.length === length;\n  }\n\n  // cast to number.\n  max = Number(max);\n\n  return value.length >= length && value.length <= max;\n};\n\nvar validate$n = function (value, ref) {\n  var length = ref[0];\n  var max = ref[1]; if ( max === void 0 ) max = undefined;\n\n  if (isNullOrUndefined(value)) {\n    return false;\n  }\n\n  length = Number(length);\n  if (typeof value === 'number') {\n    value = String(value);\n  }\n\n  if (!value.length) {\n    value = toArray(value);\n  }\n\n  return compare(value, length, max);\n};\n\nvar length = {\n  validate: validate$n\n};\n\nvar validate$o = function (value, ref) {\n  var length = ref[0];\n\n  if (isNullOrUndefined(value)) {\n    return length >= 0;\n  }\n\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return validate$o(val, [length]); });\n  }\n\n  return String(value).length <= length;\n};\n\nvar max = {\n  validate: validate$o\n};\n\nvar validate$p = function (value, ref) {\n  var max = ref[0];\n\n  if (isNullOrUndefined(value) || value === '') {\n    return false;\n  }\n\n  if (Array.isArray(value)) {\n    return value.length > 0 && value.every(function (val) { return validate$p(val, [max]); });\n  }\n\n  return Number(value) <= max;\n};\n\nvar max_value = {\n  validate: validate$p\n};\n\nvar validate$q = function (files, mimes) {\n  var regex = new RegExp(((mimes.join('|').replace('*', '.+')) + \"$\"), 'i');\n  return ensureArray(files).every(function (file) { return regex.test(file.type); });\n};\n\nvar mimes = {\n  validate: validate$q\n};\n\nvar validate$r = function (value, ref) {\n  var length = ref[0];\n\n  if (isNullOrUndefined(value)) {\n    return false;\n  }\n\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return validate$r(val, [length]); });\n  }\n\n  return String(value).length >= length;\n};\n\nvar min = {\n  validate: validate$r\n};\n\nvar validate$s = function (value, ref) {\n  var min = ref[0];\n\n  if (isNullOrUndefined(value) || value === '') {\n    return false;\n  }\n\n  if (Array.isArray(value)) {\n    return value.length > 0 && value.every(function (val) { return validate$s(val, [min]); });\n  }\n\n  return Number(value) >= min;\n};\n\nvar min_value = {\n  validate: validate$s\n};\n\nvar ar = /^[٠١٢٣٤٥٦٧٨٩]+$/;\nvar en = /^[0-9]+$/;\n\nvar validate$t = function (value) {\n  var testValue = function (val) {\n    var strValue = String(val);\n\n    return en.test(strValue) || ar.test(strValue);\n  };\n\n  if (Array.isArray(value)) {\n    return value.every(testValue);\n  }\n\n  return testValue(value);\n};\n\nvar numeric = {\n  validate: validate$t\n};\n\nvar validate$u = function (value, ref) {\n  var expression = ref.expression;\n\n  if (typeof expression === 'string') {\n    expression = new RegExp(expression);\n  }\n\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return validate$u(val, { expression: expression }); });\n  }\n\n  return expression.test(String(value));\n};\n\nvar paramNames$c = ['expression'];\n\nvar regex = {\n  validate: validate$u,\n  paramNames: paramNames$c\n};\n\nvar validate$v = function (value, ref) {\n  if ( ref === void 0 ) ref = [];\n  var invalidateFalse = ref[0]; if ( invalidateFalse === void 0 ) invalidateFalse = false;\n\n  if (isNullOrUndefined(value) || isEmptyArray(value)) {\n    return false;\n  }\n\n  // incase a field considers `false` as an empty value like checkboxes.\n  if (value === false && invalidateFalse) {\n    return false;\n  }\n\n  return !!String(value).trim().length;\n};\n\nvar required = {\n  validate: validate$v\n};\n\nvar validate$w = function (value, ref) {\n  if ( ref === void 0 ) ref = [];\n  var otherFieldVal = ref[0];\n  var possibleVals = ref.slice(1);\n\n  var required = possibleVals.includes(String(otherFieldVal).trim());\n\n  if (!required) {\n    return {\n      valid: true,\n      data: {\n        required: required\n      }\n    };\n  }\n\n  var invalid = (isEmptyArray(value) || [false, null, undefined].includes(value));\n\n  invalid = invalid || !String(value).trim().length;\n\n  return {\n    valid: !invalid,\n    data: {\n      required: required\n    }\n  };\n};\n\nvar options$5 = {\n  hasTarget: true,\n  computesRequired: true\n};\n\nvar required_if = {\n  validate: validate$w,\n  options: options$5\n};\n\nvar validate$x = function (files, ref) {\n  var size = ref[0];\n\n  if (isNaN(size)) {\n    return false;\n  }\n  var nSize = Number(size) * 1024;\n  return ensureArray(files).every(function (file) { return file.size <= nSize; });\n};\n\nvar size = {\n  validate: validate$x\n};\n\nvar isURL_1 = createCommonjsModule(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\n\n\nvar _assertString2 = _interopRequireDefault(assertString_1);\n\n\n\nvar _isFQDN2 = _interopRequireDefault(isFQDN_1);\n\n\n\nvar _isIP2 = _interopRequireDefault(isIP_1);\n\n\n\nvar _merge2 = _interopRequireDefault(merge_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false\n};\n\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString2.default)(url);\n  if (!url || url.length >= 2083 || /[\\s<>]/.test(url)) {\n    return false;\n  }\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n  options = (0, _merge2.default)(options, default_url_options);\n  var protocol = void 0,\n      auth = void 0,\n      host = void 0,\n      hostname = void 0,\n      port = void 0,\n      port_str = void 0,\n      split = void 0,\n      ipv6 = void 0;\n\n  split = url.split('#');\n  url = split.shift();\n\n  split = url.split('?');\n  url = split.shift();\n\n  split = url.split('://');\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.substr(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n    split[0] = url.substr(2);\n  }\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n  if (split.length > 1) {\n    auth = split.shift();\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n  }\n  hostname = split.join('@');\n\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null) {\n    port = parseInt(port_str, 10);\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  }\n\n  if (!(0, _isIP2.default)(host) && !(0, _isFQDN2.default)(host, options) && (!ipv6 || !(0, _isIP2.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {\n    return false;\n  }\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\nmodule.exports = exports['default'];\n});\n\nvar isURL = unwrapExports(isURL_1);\n\nvar validate$y = function (value, options) {\n  if ( options === void 0 ) options = {};\n\n  if (isNullOrUndefined(value)) {\n    value = '';\n  }\n\n  var validatorOptions = assign({}, options);\n\n  if (Array.isArray(value)) {\n    return value.every(function (val) { return isURL(val, validatorOptions); });\n  }\n\n  return isURL(value, validatorOptions);\n};\n\nvar url = {\n  validate: validate$y\n};\n\n/* eslint-disable camelcase */\n\nvar Rules = /*#__PURE__*/Object.freeze({\n  after: after,\n  alpha_dash: alpha_dash,\n  alpha_num: alpha_num,\n  alpha_spaces: alpha_spaces,\n  alpha: alpha$1,\n  before: before,\n  between: between,\n  confirmed: confirmed,\n  credit_card: credit_card,\n  date_between: date_between,\n  date_format: date_format,\n  decimal: decimal,\n  digits: digits,\n  dimensions: dimensions,\n  email: email,\n  ext: ext,\n  image: image,\n  included: included,\n  integer: integer,\n  length: length,\n  ip: ip,\n  ip_or_fqdn: ip_or_fqdn,\n  is_not: is_not,\n  is: is,\n  max: max,\n  max_value: max_value,\n  mimes: mimes,\n  min: min,\n  min_value: min_value,\n  excluded: excluded,\n  numeric: numeric,\n  regex: regex,\n  required: required,\n  required_if: required_if,\n  size: size,\n  url: url\n});\n\n// \n\nvar normalize = function (fields) {\n  if (Array.isArray(fields)) {\n    return fields.reduce(function (prev, curr) {\n      if (includes(curr, '.')) {\n        prev[curr.split('.')[1]] = curr;\n      } else {\n        prev[curr] = curr;\n      }\n\n      return prev;\n    }, {});\n  }\n\n  return fields;\n};\n\n// Combines two flags using either AND or OR depending on the flag type.\nvar combine = function (lhs, rhs) {\n  var mapper = {\n    pristine: function (lhs, rhs) { return lhs && rhs; },\n    dirty: function (lhs, rhs) { return lhs || rhs; },\n    touched: function (lhs, rhs) { return lhs || rhs; },\n    untouched: function (lhs, rhs) { return lhs && rhs; },\n    valid: function (lhs, rhs) { return lhs && rhs; },\n    invalid: function (lhs, rhs) { return lhs || rhs; },\n    pending: function (lhs, rhs) { return lhs || rhs; },\n    required: function (lhs, rhs) { return lhs || rhs; },\n    validated: function (lhs, rhs) { return lhs && rhs; }\n  };\n\n  return Object.keys(mapper).reduce(function (flags, flag) {\n    flags[flag] = mapper[flag](lhs[flag], rhs[flag]);\n\n    return flags;\n  }, {});\n};\n\nvar mapScope = function (scope, deep) {\n  if ( deep === void 0 ) deep = true;\n\n  return Object.keys(scope).reduce(function (flags, field) {\n    if (!flags) {\n      flags = assign({}, scope[field]);\n      return flags;\n    }\n\n    // scope.\n    var isScope = field.indexOf('$') === 0;\n    if (deep && isScope) {\n      return combine(mapScope(scope[field]), flags);\n    } else if (!deep && isScope) {\n      return flags;\n    }\n\n    flags = combine(flags, scope[field]);\n\n    return flags;\n  }, null);\n};\n\n/**\n * Maps fields to computed functions.\n */\nvar mapFields = function (fields) {\n  if (!fields) {\n    return function () {\n      return mapScope(this.$validator.flags);\n    };\n  }\n\n  var normalized = normalize(fields);\n  return Object.keys(normalized).reduce(function (prev, curr) {\n    var field = normalized[curr];\n    prev[curr] = function mappedField () {\n      // if field exists\n      if (this.$validator.flags[field]) {\n        return this.$validator.flags[field];\n      }\n\n      // scopeless fields were selected.\n      if (normalized[curr] === '*') {\n        return mapScope(this.$validator.flags, false);\n      }\n\n      // if it has a scope defined\n      var index = field.indexOf('.');\n      if (index <= 0) {\n        return {};\n      }\n\n      var ref = field.split('.');\n      var scope = ref[0];\n      var name = ref.slice(1);\n\n      scope = this.$validator.flags[(\"$\" + scope)];\n      name = name.join('.');\n\n      // an entire scope was selected: scope.*\n      if (name === '*' && scope) {\n        return mapScope(scope);\n      }\n\n      if (scope && scope[name]) {\n        return scope[name];\n      }\n\n      return {};\n    };\n\n    return prev;\n  }, {});\n};\n\nvar $validator = null;\n\nvar PROVIDER_COUNTER = 0;\n\nfunction createValidationCtx (ctx) {\n  return {\n    errors: ctx.messages,\n    flags: ctx.flags,\n    classes: ctx.classes,\n    valid: ctx.isValid,\n    failedRules: ctx.failedRules,\n    reset: function () { return ctx.reset(); },\n    validate: function () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      return ctx.validate.apply(ctx, args);\n  },\n    aria: {\n      'aria-invalid': ctx.flags.invalid ? 'true' : 'false',\n      'aria-required': ctx.isRequired ? 'true' : 'false'\n    }\n  };\n}\n\nfunction normalizeValue$1 (value) {\n  if (isEvent(value)) {\n    return value.target.type === 'file' ? toArray(value.target.files) : value.target.value;\n  }\n\n  return value;\n}\n\n/**\n * Determines if a provider needs to run validation.\n */\nfunction shouldValidate (ctx, model) {\n  // when an immediate/initial validation is needed and wasn't done before.\n  if (!ctx._ignoreImmediate && ctx.immediate) {\n    return true;\n  }\n\n  // when the value changes for whatever reason.\n  if (ctx.value !== model.value) {\n    return true;\n  }\n\n  // when it needs validation due to props/cross-fields changes.\n  if (ctx._needsValidation) {\n    return true;\n  }\n\n  // when the initial value is undefined and the field wasn't rendered yet.\n  if (!ctx.initialized && model.value === undefined) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction computeModeSetting (ctx) {\n  var compute = isCallable(ctx.mode) ? ctx.mode : modes[ctx.mode];\n\n  return compute({\n    errors: ctx.messages,\n    value: ctx.value,\n    flags: ctx.flags\n  });\n}\n\nfunction onRenderUpdate (model) {\n  if (!this.initialized) {\n    this.initialValue = model.value;\n  }\n\n  var validateNow = shouldValidate(this, model);\n  this._needsValidation = false;\n  this.value = model.value;\n  this._ignoreImmediate = true;\n\n  if (!validateNow) {\n    return;\n  }\n\n  this.validateSilent().then(this.immediate || this.flags.validated ? this.applyResult : function (x) { return x; });\n}\n\n// Creates the common handlers for a validatable context.\nfunction createCommonHandlers (ctx) {\n  var onInput = function (e) {\n    ctx.syncValue(e); // track and keep the value updated.\n    ctx.setFlags({ dirty: true, pristine: false });\n  };\n\n  // Blur event listener.\n  var onBlur = function () {\n    ctx.setFlags({ touched: true, untouched: false });\n  };\n\n  var onValidate = ctx.$veeHandler;\n  var mode = computeModeSetting(ctx);\n\n  // Handle debounce changes.\n  if (!onValidate || ctx.$veeDebounce !== ctx.debounce) {\n    onValidate = debounce(\n      function () {\n        ctx.$nextTick(function () {\n          var pendingPromise = ctx.validateSilent();\n          // avoids race conditions between successive validations.\n          ctx._pendingValidation = pendingPromise;\n          pendingPromise.then(function (result) {\n            if (pendingPromise === ctx._pendingValidation) {\n              ctx.applyResult(result);\n              ctx._pendingValidation = null;\n            }\n          });\n        });\n      },\n      mode.debounce || ctx.debounce\n    );\n\n    // Cache the handler so we don't create it each time.\n    ctx.$veeHandler = onValidate;\n    // cache the debounce value so we detect if it was changed.\n    ctx.$veeDebounce = ctx.debounce;\n  }\n\n  return { onInput: onInput, onBlur: onBlur, onValidate: onValidate };\n}\n\n// Adds all plugin listeners to the vnode.\nfunction addListeners (node) {\n  var model = findModel(node);\n  // cache the input eventName.\n  this._inputEventName = this._inputEventName || getInputEventName(node, model);\n\n  onRenderUpdate.call(this, model);\n\n  var ref = createCommonHandlers(this);\n  var onInput = ref.onInput;\n  var onBlur = ref.onBlur;\n  var onValidate = ref.onValidate;\n  addVNodeListener(node, this._inputEventName, onInput);\n  addVNodeListener(node, 'blur', onBlur);\n\n  // add the validation listeners.\n  this.normalizedEvents.forEach(function (evt) {\n    addVNodeListener(node, evt, onValidate);\n  });\n\n  this.initialized = true;\n}\n\nfunction createValuesLookup (ctx) {\n  var providers = ctx.$_veeObserver.refs;\n\n  return ctx.fieldDeps.reduce(function (acc, depName) {\n    if (!providers[depName]) {\n      return acc;\n    }\n\n    acc[depName] = providers[depName].value;\n\n    return acc;\n  }, {});\n}\n\nfunction updateRenderingContextRefs (ctx) {\n  // IDs should not be nullable.\n  if (isNullOrUndefined(ctx.id) && ctx.id === ctx.vid) {\n    ctx.id = PROVIDER_COUNTER;\n    PROVIDER_COUNTER++;\n  }\n\n  var id = ctx.id;\n  var vid = ctx.vid;\n  // Nothing has changed.\n  if (ctx.isDeactivated || (id === vid && ctx.$_veeObserver.refs[id])) {\n    return;\n  }\n\n  // vid was changed.\n  if (id !== vid && ctx.$_veeObserver.refs[id] === ctx) {\n    ctx.$_veeObserver.unsubscribe(ctx);\n  }\n\n  ctx.$_veeObserver.subscribe(ctx);\n  ctx.id = vid;\n}\n\nfunction createObserver () {\n  return {\n    refs: {},\n    subscribe: function subscribe (ctx) {\n      this.refs[ctx.vid] = ctx;\n    },\n    unsubscribe: function unsubscribe (ctx) {\n      delete this.refs[ctx.vid];\n    }\n  };\n}\n\nvar ValidationProvider = {\n  $__veeInject: false,\n  inject: {\n    $_veeObserver: {\n      from: '$_veeObserver',\n      default: function default$1 () {\n        if (!this.$vnode.context.$_veeObserver) {\n          this.$vnode.context.$_veeObserver = createObserver();\n        }\n\n        return this.$vnode.context.$_veeObserver;\n      }\n    }\n  },\n  props: {\n    vid: {\n      type: [String, Number],\n      default: function () {\n        PROVIDER_COUNTER++;\n\n        return (\"_vee_\" + PROVIDER_COUNTER);\n      }\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    mode: {\n      type: [String, Function],\n      default: function () {\n        return getConfig().mode;\n      }\n    },\n    events: {\n      type: Array,\n      validate: function () {\n        /* istanbul ignore next */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('events prop and config will be deprecated in future version please use the interaction modes instead');\n        }\n\n        return true;\n      },\n      default: function () {\n        var events = getConfig().events;\n        if (typeof events === 'string') {\n          return events.split('|');\n        }\n\n        return events;\n      }\n    },\n    rules: {\n      type: [Object, String],\n      default: null\n    },\n    immediate: {\n      type: Boolean,\n      default: false\n    },\n    persist: {\n      type: Boolean,\n      default: false\n    },\n    bails: {\n      type: Boolean,\n      default: function () { return getConfig().fastExit; }\n    },\n    debounce: {\n      type: Number,\n      default: function () { return getConfig().delay || 0; }\n    },\n    tag: {\n      type: String,\n      default: 'span'\n    }\n  },\n  watch: {\n    rules: {\n      deep: true,\n      handler: function handler (val, oldVal) {\n        this._needsValidation = !isEqual(val, oldVal);\n      }\n    }\n  },\n  data: function () { return ({\n    messages: [],\n    value: undefined,\n    initialized: false,\n    initialValue: undefined,\n    flags: createFlags(),\n    failedRules: {},\n    forceRequired: false,\n    isDeactivated: false,\n    id: null\n  }); },\n  computed: {\n    isValid: function isValid () {\n      return this.flags.valid;\n    },\n    fieldDeps: function fieldDeps () {\n      var this$1 = this;\n\n      var rules = normalizeRules(this.rules);\n      var providers = this.$_veeObserver.refs;\n\n      return Object.keys(rules).filter(RuleContainer.isTargetRule).map(function (rule) {\n        var depName = rules[rule][0];\n        var watcherName = \"$__\" + depName;\n        if (!isCallable(this$1[watcherName]) && providers[depName]) {\n          this$1[watcherName] = providers[depName].$watch('value', function () {\n            if (this$1.flags.validated) {\n              this$1._needsValidation = true;\n              this$1.validate();\n            }\n          });\n        }\n\n        return depName;\n      });\n    },\n    normalizedEvents: function normalizedEvents () {\n      var this$1 = this;\n\n      var ref = computeModeSetting(this);\n      var on = ref.on;\n\n      return normalizeEvents(on || this.events || []).map(function (e) {\n        if (e === 'input') {\n          return this$1._inputEventName;\n        }\n\n        return e;\n      });\n    },\n    isRequired: function isRequired () {\n      var rules = normalizeRules(this.rules);\n      var forceRequired = this.forceRequired;\n\n      var isRequired = rules.required || forceRequired;\n      this.flags.required = isRequired;\n\n      return isRequired;\n    },\n    classes: function classes () {\n      var this$1 = this;\n\n      var names = getConfig().classNames;\n      return Object.keys(this.flags).reduce(function (classes, flag) {\n        var className = (names && names[flag]) || flag;\n        if (isNullOrUndefined(this$1.flags[flag])) {\n          return classes;\n        }\n\n        if (className) {\n          classes[className] = this$1.flags[flag];\n        }\n\n        return classes;\n      }, {});\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    this.registerField();\n    var ctx = createValidationCtx(this);\n\n    // Gracefully handle non-existent scoped slots.\n    var slot = this.$scopedSlots.default;\n    /* istanbul ignore next */\n    if (!isCallable(slot)) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('ValidationProvider expects a scoped slot. Did you forget to add \"slot-scope\" to your slot?');\n      }\n\n      return h(this.tag, this.$slots.default);\n    }\n\n    var nodes = slot(ctx);\n    // Handle single-root slot.\n    extractVNodes(nodes).forEach(function (input) {\n      addListeners.call(this$1, input);\n    });\n\n    return h(this.tag, nodes);\n  },\n  beforeDestroy: function beforeDestroy () {\n    // cleanup reference.\n    this.$_veeObserver.unsubscribe(this);\n  },\n  activated: function activated () {\n    this.$_veeObserver.subscribe(this);\n    this.isDeactivated = false;\n  },\n  deactivated: function deactivated () {\n    this.$_veeObserver.unsubscribe(this);\n    this.isDeactivated = true;\n  },\n  methods: {\n    setFlags: function setFlags (flags) {\n      var this$1 = this;\n\n      Object.keys(flags).forEach(function (flag) {\n        this$1.flags[flag] = flags[flag];\n      });\n    },\n    syncValue: function syncValue (e) {\n      var value = normalizeValue$1(e);\n      this.value = value;\n      this.flags.changed = this.initialValue !== value;\n    },\n    reset: function reset () {\n      this.messages = [];\n      this._pendingValidation = null;\n      this.initialValue = this.value;\n      var flags = createFlags();\n      this.setFlags(flags);\n    },\n    validate: function validate () {\n      var this$1 = this;\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (args.length > 0) {\n        this.syncValue(args[0]);\n      }\n\n      return this.validateSilent().then(function (result) {\n        this$1.applyResult(result);\n\n        return result;\n      });\n    },\n    validateSilent: function validateSilent () {\n      var this$1 = this;\n\n      this.setFlags({ pending: true });\n\n      return $validator.verify(this.value, this.rules, {\n        name: this.name,\n        values: createValuesLookup(this),\n        bails: this.bails\n      }).then(function (result) {\n        this$1.setFlags({ pending: false });\n        if (!this$1.isRequired) {\n          this$1.setFlags({ valid: result.valid, invalid: !result.valid });\n        }\n\n        return result;\n      });\n    },\n    applyResult: function applyResult (ref) {\n      var errors = ref.errors;\n      var failedRules = ref.failedRules;\n\n      this.messages = errors;\n      this.failedRules = assign({}, failedRules);\n      this.setFlags({\n        valid: !errors.length,\n        changed: this.value !== this.initialValue,\n        invalid: !!errors.length,\n        validated: true\n      });\n    },\n    registerField: function registerField () {\n      if (!$validator) {\n        $validator = getValidator() || new Validator(null, { fastExit: getConfig().fastExit });\n      }\n\n      updateRenderingContextRefs(this);\n    }\n  }\n};\n\nvar flagMergingStrategy = {\n  pristine: 'every',\n  dirty: 'some',\n  touched: 'some',\n  untouched: 'every',\n  valid: 'every',\n  invalid: 'some',\n  pending: 'some',\n  validated: 'every'\n};\n\nfunction mergeFlags (lhs, rhs, strategy) {\n  var stratName = flagMergingStrategy[strategy];\n\n  return [lhs, rhs][stratName](function (f) { return f; });\n}\n\nvar OBSERVER_COUNTER = 0;\n\nvar ValidationObserver = {\n  name: 'ValidationObserver',\n  provide: function provide () {\n    return {\n      $_veeObserver: this\n    };\n  },\n  inject: {\n    $_veeObserver: {\n      from: '$_veeObserver',\n      default: function default$1 () {\n        if (!this.$vnode.context.$_veeObserver) {\n          return null;\n        }\n\n        return this.$vnode.context.$_veeObserver;\n      }\n    }\n  },\n  props: {\n    tag: {\n      type: String,\n      default: 'span'\n    }\n  },\n  data: function () { return ({\n    vid: (\"obs_\" + (OBSERVER_COUNTER++)),\n    refs: {},\n    observers: [],\n  }); },\n  computed: {\n    ctx: function ctx () {\n      var this$1 = this;\n\n      var ctx = {\n        errors: {},\n        validate: function (arg) {\n          var promise = this$1.validate(arg);\n\n          return {\n            then: function then (thenable) {\n              promise.then(function (success) {\n                if (success && isCallable(thenable)) {\n                  return Promise.resolve(thenable());\n                }\n\n                return Promise.resolve(success);\n              });\n            }\n          };\n        },\n        reset: function () { return this$1.reset(); }\n      };\n\n      return values(this.refs).concat( this.observers ).reduce(function (acc, provider) {\n        Object.keys(flagMergingStrategy).forEach(function (flag) {\n          var flags = provider.flags || provider.ctx;\n          if (!(flag in acc)) {\n            acc[flag] = flags[flag];\n            return;\n          }\n\n          acc[flag] = mergeFlags(acc[flag], flags[flag], flag);\n        });\n\n        acc.errors[provider.vid] = provider.messages || values(provider.ctx.errors).reduce(function (errs, obsErrors) {\n          return errs.concat(obsErrors);\n        }, []);\n\n        return acc;\n      }, ctx);\n    }\n  },\n  created: function created () {\n    if (this.$_veeObserver) {\n      this.$_veeObserver.subscribe(this, 'observer');\n    }\n  },\n  activated: function activated () {\n    if (this.$_veeObserver) {\n      this.$_veeObserver.subscribe(this, 'observer');\n    }\n  },\n  deactivated: function deactivated () {\n    if (this.$_veeObserver) {\n      this.$_veeObserver.unsubscribe(this, 'observer');\n    }\n  },\n  beforeDestroy: function beforeDestroy () {\n    if (this.$_veeObserver) {\n      this.$_veeObserver.unsubscribe(this, 'observer');\n    }\n  },\n  render: function render (h) {\n    var slots = this.$scopedSlots.default;\n    this._persistedStore = this._persistedStore || {};\n    if (!isCallable(slots)) {\n      return h(this.tag, this.$slots.default);\n    }\n\n    return h(this.tag, {\n      on: this.$listeners,\n      attrs: this.$attrs\n    }, slots(this.ctx));\n  },\n  methods: {\n    subscribe: function subscribe (subscriber, kind) {\n      var obj;\n\n      if ( kind === void 0 ) kind = 'provider';\n      if (kind === 'observer') {\n        this.observers.push(subscriber);\n        return;\n      }\n\n      this.refs = Object.assign({}, this.refs, ( obj = {}, obj[subscriber.vid] = subscriber, obj ));\n      if (subscriber.persist && this._persistedStore[subscriber.vid]) {\n        this.restoreProviderState(subscriber);\n      }\n    },\n    unsubscribe: function unsubscribe (ref, kind) {\n      var vid = ref.vid;\n      if ( kind === void 0 ) kind = 'provider';\n\n      if (kind === 'provider') {\n        this.removeProvider(vid);\n      }\n\n      var idx = findIndex(this.observers, function (o) { return o.vid === vid; });\n      if (idx !== -1) {\n        this.observers.splice(idx, 1);\n      }\n    },\n    validate: function validate (ref) {\n      if ( ref === void 0 ) ref = { silent: false };\n      var silent = ref.silent;\n\n      return Promise.all(values(this.refs).map(function (ref) { return ref[silent ? 'validateSilent' : 'validate']().then(function (r) { return r.valid; }); }).concat( this.observers.map(function (obs) { return obs.validate({ silent: silent }); })\n      )).then(function (results) { return results.every(function (r) { return r; }); });\n    },\n    reset: function reset () {\n      return values(this.refs).concat( this.observers).forEach(function (ref) { return ref.reset(); });\n    },\n    restoreProviderState: function restoreProviderState (provider) {\n      var state = this._persistedStore[provider.vid];\n      provider.setFlags(state.flags);\n      provider.applyResult(state);\n      delete this._persistedStore[provider.vid];\n    },\n    removeProvider: function removeProvider (vid) {\n      var provider = this.refs[vid];\n      // save it for the next time.\n      if (provider && provider.persist) {\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== 'production') {\n          if (vid.indexOf('_vee_') === 0) {\n            warn('Please provide a `vid` prop when using `persist`, there might be unexpected issues otherwise.');\n          }\n        }\n\n        this._persistedStore[vid] = {\n          flags: provider.flags,\n          errors: provider.messages,\n          failedRules: provider.failedRules\n        };\n      }\n\n      this.$delete(this.refs, vid);\n    },\n  }\n};\n\nfunction withValidation (component, ctxToProps) {\n  if ( ctxToProps === void 0 ) ctxToProps = null;\n\n  var options = isCallable(component) ? component.options : component;\n  options.$__veeInject = false;\n  var hoc = {\n    name: ((options.name || 'AnonymousHoc') + \"WithValidation\"),\n    props: assign({}, ValidationProvider.props),\n    data: ValidationProvider.data,\n    computed: assign({}, ValidationProvider.computed),\n    methods: assign({}, ValidationProvider.methods),\n    $__veeInject: false,\n    beforeDestroy: ValidationProvider.beforeDestroy,\n    inject: ValidationProvider.inject\n  };\n\n  // Default ctx converts ctx props to component props.\n  if (!ctxToProps) {\n    ctxToProps = function (ctx) { return ctx; };\n  }\n\n  var eventName = (options.model && options.model.event) || 'input';\n\n  hoc.render = function (h) {\n    var obj;\n\n    this.registerField();\n    var vctx = createValidationCtx(this);\n    var listeners = assign({}, this.$listeners);\n\n    var model = findModel(this.$vnode);\n    this._inputEventName = this._inputEventName || getInputEventName(this.$vnode, model);\n    onRenderUpdate.call(this, model);\n\n    var ref = createCommonHandlers(this);\n    var onInput = ref.onInput;\n    var onBlur = ref.onBlur;\n    var onValidate = ref.onValidate;\n\n    mergeVNodeListeners(listeners, eventName, onInput);\n    mergeVNodeListeners(listeners, 'blur', onBlur);\n    this.normalizedEvents.forEach(function (evt, idx) {\n      mergeVNodeListeners(listeners, evt, onValidate);\n    });\n\n    // Props are any attrs not associated with ValidationProvider Plus the model prop.\n    // WARNING: Accidental prop overwrite will probably happen.\n    var ref$1 = findModelConfig(this.$vnode) || { prop: 'value' };\n    var prop = ref$1.prop;\n    var props = assign({}, this.$attrs, ( obj = {}, obj[prop] = model.value, obj ), ctxToProps(vctx));\n\n    return h(options, {\n      attrs: this.$attrs,\n      props: props,\n      on: listeners\n    }, normalizeSlots(this.$slots, this.$vnode.context));\n  };\n\n  return hoc;\n}\n\nvar version = '2.2.7';\n\nObject.keys(Rules).forEach(function (rule) {\n  Validator.extend(rule, Rules[rule].validate, assign({}, Rules[rule].options, { paramNames: Rules[rule].paramNames }));\n});\n\n// Merge the english messages.\nValidator.localize({ en: locale });\n\nvar install = VeeValidate$1.install;\n\nVeeValidate$1.version = version;\nVeeValidate$1.mapFields = mapFields;\nVeeValidate$1.ValidationProvider = ValidationProvider;\nVeeValidate$1.ValidationObserver = ValidationObserver;\nVeeValidate$1.withValidation = withValidation;\n\nexport default VeeValidate$1;\nexport { install, directive, mixin, mapFields, Validator, ErrorBag, Rules, version, ValidationProvider, ValidationObserver, withValidation };\n"]}]}