{"remainingRequest":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\resize-observer-polyfill\\dist\\ResizeObserver.es.js","dependencies":[{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\resize-observer-polyfill\\dist\\ResizeObserver.es.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\mine\\搭webpack环境\\so\\node_modules\\resize-observer-polyfill\\dist\\ResizeObserver.es.js"],"names":["MapShim","result","arr","entry","Object","class_1","get","enumerable","configurable","index","getIndex","entries","ctx","_i","_a","callback","isBrowser","window","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","setTimeout","Date","trailingTimeout","leadingCall","trailingCall","lastCallTime","proxy","timeStamp","REFRESH_DELAY","transitionKeys","mutationObserverSupported","ResizeObserverController","throttle","observers","changesDetected","activeObservers","observer","document","attributes","childList","characterData","subtree","_b","propertyName","isReflowProperty","defineConfigurable","key","value","props","writable","getWindowOf","ownerGlobal","target","emptyRect","createRectInit","parseFloat","positions","arguments","styles","size","toFloat","paddings","positions_1","position","bbox","clientWidth","clientHeight","getPaddings","horizPad","vertPad","width","height","Math","getBordersSize","isDocumentElement","vertScrollbar","horizScrollbar","isSVGGraphicsElement","getSVGContentRect","getHTMLElementContentRect","x","y","Constr","rect","top","right","bottom","left","ResizeObservation","getContentRect","ResizeObserverEntry","contentRect","createReadOnlyRect","ResizeObserverSPI","Element","observations","_this","observation","ResizeObserver","controller"],"mappings":"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","sourcesContent":["/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n"]}]}