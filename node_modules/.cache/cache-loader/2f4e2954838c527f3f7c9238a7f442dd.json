{"remainingRequest":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\html-entities\\lib\\html4-entities.js","dependencies":[{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\html-entities\\lib\\html4-entities.js","mtime":1493034265000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\mine\\搭webpack环境\\so\\node_modules\\html-entities\\lib\\html4-entities.js"],"names":["HTML_ALPHA","HTML_CODES","alphaIndex","numIndex","i","length","a","c","String","Html4Entities","str","entity","code","parseInt","isNaN","chr","strLength","result","alpha","cc","module"],"mappings":"AAAA,IAAIA,UAAU,GAAG,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,KAAA,EAAA,QAAA,EAAA,MAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,KAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,KAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA,OAAA,EAAA,KAAA,EAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,UAAA,EAAA,OAAA,EAAA,KAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,EAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAjB,OAAiB,CAAjB;AACA,IAAIC,UAAU,GAAG,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,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","sourcesContent":["var HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'OElig', 'oelig', 'Scaron', 'scaron', 'Yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'Dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'Prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'lArr', 'uArr', 'rArr', 'dArr', 'hArr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];\nvar HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];\n\nvar alphaIndex = {};\nvar numIndex = {};\n\nvar i = 0;\nvar length = HTML_ALPHA.length;\nwhile (i < length) {\n    var a = HTML_ALPHA[i];\n    var c = HTML_CODES[i];\n    alphaIndex[a] = String.fromCharCode(c);\n    numIndex[c] = a;\n    i++;\n}\n\n/**\n * @constructor\n */\nfunction Html4Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1).toLowerCase() === 'x' ?\n                parseInt(entity.substr(2), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.decode = function(str) {\n    return new Html4Entities().decode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var alpha = numIndex[str.charCodeAt(i)];\n        result += alpha ? \"&\" + alpha + \";\" : str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encode = function(str) {\n    return new Html4Entities().encode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var cc = str.charCodeAt(i);\n        var alpha = numIndex[cc];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n        } else if (cc < 32 || cc > 126) {\n            result += \"&#\" + cc + \";\";\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonUTF = function(str) {\n    return new Html4Entities().encodeNonUTF(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonASCII = function(str) {\n    return new Html4Entities().encodeNonASCII(str);\n};\n\nmodule.exports = Html4Entities;\n"]}]}