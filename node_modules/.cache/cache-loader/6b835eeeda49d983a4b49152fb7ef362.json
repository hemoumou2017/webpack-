{"remainingRequest":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\@babel\\polyfill\\node_modules\\core-js\\modules\\es6.regexp.replace.js","dependencies":[{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\@babel\\polyfill\\node_modules\\core-js\\modules\\es6.regexp.replace.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKdmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7Cgp2YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTsKCnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpOwoKdmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTsKCnZhciBhZHZhbmNlU3RyaW5nSW5kZXggPSByZXF1aXJlKCcuL19hZHZhbmNlLXN0cmluZy1pbmRleCcpOwoKdmFyIHJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpOwoKdmFyIG1heCA9IE1hdGgubWF4Owp2YXIgbWluID0gTWF0aC5taW47CnZhciBmbG9vciA9IE1hdGguZmxvb3I7CnZhciBTVUJTVElUVVRJT05fU1lNQk9MUyA9IC9cJChbJCZgJ118XGRcZD98PFtePl0qPikvZzsKdmFyIFNVQlNUSVRVVElPTl9TWU1CT0xTX05PX05BTUVEID0gL1wkKFskJmAnXXxcZFxkPykvZzsKCnZhciBtYXliZVRvU3RyaW5nID0gZnVuY3Rpb24gbWF5YmVUb1N0cmluZyhpdCkgewogIHJldHVybiBpdCA9PT0gdW5kZWZpbmVkID8gaXQgOiBTdHJpbmcoaXQpOwp9OyAvLyBAQHJlcGxhY2UgbG9naWMKCgpyZXF1aXJlKCcuL19maXgtcmUtd2tzJykoJ3JlcGxhY2UnLCAyLCBmdW5jdGlvbiAoZGVmaW5lZCwgUkVQTEFDRSwgJHJlcGxhY2UsIG1heWJlQ2FsbE5hdGl2ZSkgewogIHJldHVybiBbLy8gYFN0cmluZy5wcm90b3R5cGUucmVwbGFjZWAgbWV0aG9kCiAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtc3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlCiAgZnVuY3Rpb24gcmVwbGFjZShzZWFyY2hWYWx1ZSwgcmVwbGFjZVZhbHVlKSB7CiAgICB2YXIgTyA9IGRlZmluZWQodGhpcyk7CiAgICB2YXIgZm4gPSBzZWFyY2hWYWx1ZSA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBzZWFyY2hWYWx1ZVtSRVBMQUNFXTsKICAgIHJldHVybiBmbiAhPT0gdW5kZWZpbmVkID8gZm4uY2FsbChzZWFyY2hWYWx1ZSwgTywgcmVwbGFjZVZhbHVlKSA6ICRyZXBsYWNlLmNhbGwoU3RyaW5nKE8pLCBzZWFyY2hWYWx1ZSwgcmVwbGFjZVZhbHVlKTsKICB9LCAvLyBgUmVnRXhwLnByb3RvdHlwZVtAQHJlcGxhY2VdYCBtZXRob2QKICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHAucHJvdG90eXBlLUBAcmVwbGFjZQogIGZ1bmN0aW9uIChyZWdleHAsIHJlcGxhY2VWYWx1ZSkgewogICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkcmVwbGFjZSwgcmVnZXhwLCB0aGlzLCByZXBsYWNlVmFsdWUpOwogICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlOwogICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTsKICAgIHZhciBTID0gU3RyaW5nKHRoaXMpOwogICAgdmFyIGZ1bmN0aW9uYWxSZXBsYWNlID0gdHlwZW9mIHJlcGxhY2VWYWx1ZSA9PT0gJ2Z1bmN0aW9uJzsKICAgIGlmICghZnVuY3Rpb25hbFJlcGxhY2UpIHJlcGxhY2VWYWx1ZSA9IFN0cmluZyhyZXBsYWNlVmFsdWUpOwogICAgdmFyIGdsb2JhbCA9IHJ4Lmdsb2JhbDsKCiAgICBpZiAoZ2xvYmFsKSB7CiAgICAgIHZhciBmdWxsVW5pY29kZSA9IHJ4LnVuaWNvZGU7CiAgICAgIHJ4Lmxhc3RJbmRleCA9IDA7CiAgICB9CgogICAgdmFyIHJlc3VsdHMgPSBbXTsKCiAgICB3aGlsZSAodHJ1ZSkgewogICAgICB2YXIgcmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUyk7CiAgICAgIGlmIChyZXN1bHQgPT09IG51bGwpIGJyZWFrOwogICAgICByZXN1bHRzLnB1c2gocmVzdWx0KTsKICAgICAgaWYgKCFnbG9iYWwpIGJyZWFrOwogICAgICB2YXIgbWF0Y2hTdHIgPSBTdHJpbmcocmVzdWx0WzBdKTsKICAgICAgaWYgKG1hdGNoU3RyID09PSAnJykgcngubGFzdEluZGV4ID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHRvTGVuZ3RoKHJ4Lmxhc3RJbmRleCksIGZ1bGxVbmljb2RlKTsKICAgIH0KCiAgICB2YXIgYWNjdW11bGF0ZWRSZXN1bHQgPSAnJzsKICAgIHZhciBuZXh0U291cmNlUG9zaXRpb24gPSAwOwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzdWx0cy5sZW5ndGg7IGkrKykgewogICAgICByZXN1bHQgPSByZXN1bHRzW2ldOwogICAgICB2YXIgbWF0Y2hlZCA9IFN0cmluZyhyZXN1bHRbMF0pOwogICAgICB2YXIgcG9zaXRpb24gPSBtYXgobWluKHRvSW50ZWdlcihyZXN1bHQuaW5kZXgpLCBTLmxlbmd0aCksIDApOwogICAgICB2YXIgY2FwdHVyZXMgPSBbXTsgLy8gTk9URTogVGhpcyBpcyBlcXVpdmFsZW50IHRvCiAgICAgIC8vICAgY2FwdHVyZXMgPSByZXN1bHQuc2xpY2UoMSkubWFwKG1heWJlVG9TdHJpbmcpCiAgICAgIC8vIGJ1dCBmb3Igc29tZSByZWFzb24gYG5hdGl2ZVNsaWNlLmNhbGwocmVzdWx0LCAxLCByZXN1bHQubGVuZ3RoKWAgKGNhbGxlZCBpbgogICAgICAvLyB0aGUgc2xpY2UgcG9seWZpbGwgd2hlbiBzbGljaW5nIG5hdGl2ZSBhcnJheXMpICJkb2Vzbid0IHdvcmsiIGluIHNhZmFyaSA5IGFuZAogICAgICAvLyBjYXVzZXMgYSBjcmFzaCAoaHR0cHM6Ly9wYXN0ZWJpbi5jb20vTjIxUXplUUEpIHdoZW4gdHJ5aW5nIHRvIGRlYnVnIGl0LgoKICAgICAgZm9yICh2YXIgaiA9IDE7IGogPCByZXN1bHQubGVuZ3RoOyBqKyspIHsKICAgICAgICBjYXB0dXJlcy5wdXNoKG1heWJlVG9TdHJpbmcocmVzdWx0W2pdKSk7CiAgICAgIH0KCiAgICAgIHZhciBuYW1lZENhcHR1cmVzID0gcmVzdWx0Lmdyb3VwczsKCiAgICAgIGlmIChmdW5jdGlvbmFsUmVwbGFjZSkgewogICAgICAgIHZhciByZXBsYWNlckFyZ3MgPSBbbWF0Y2hlZF0uY29uY2F0KGNhcHR1cmVzLCBwb3NpdGlvbiwgUyk7CiAgICAgICAgaWYgKG5hbWVkQ2FwdHVyZXMgIT09IHVuZGVmaW5lZCkgcmVwbGFjZXJBcmdzLnB1c2gobmFtZWRDYXB0dXJlcyk7CiAgICAgICAgdmFyIHJlcGxhY2VtZW50ID0gU3RyaW5nKHJlcGxhY2VWYWx1ZS5hcHBseSh1bmRlZmluZWQsIHJlcGxhY2VyQXJncykpOwogICAgICB9IGVsc2UgewogICAgICAgIHJlcGxhY2VtZW50ID0gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIFMsIHBvc2l0aW9uLCBjYXB0dXJlcywgbmFtZWRDYXB0dXJlcywgcmVwbGFjZVZhbHVlKTsKICAgICAgfQoKICAgICAgaWYgKHBvc2l0aW9uID49IG5leHRTb3VyY2VQb3NpdGlvbikgewogICAgICAgIGFjY3VtdWxhdGVkUmVzdWx0ICs9IFMuc2xpY2UobmV4dFNvdXJjZVBvc2l0aW9uLCBwb3NpdGlvbikgKyByZXBsYWNlbWVudDsKICAgICAgICBuZXh0U291cmNlUG9zaXRpb24gPSBwb3NpdGlvbiArIG1hdGNoZWQubGVuZ3RoOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIGFjY3VtdWxhdGVkUmVzdWx0ICsgUy5zbGljZShuZXh0U291cmNlUG9zaXRpb24pOwogIH1dOyAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1nZXRzdWJzdGl0dXRpb24KCiAgZnVuY3Rpb24gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIHN0ciwgcG9zaXRpb24sIGNhcHR1cmVzLCBuYW1lZENhcHR1cmVzLCByZXBsYWNlbWVudCkgewogICAgdmFyIHRhaWxQb3MgPSBwb3NpdGlvbiArIG1hdGNoZWQubGVuZ3RoOwogICAgdmFyIG0gPSBjYXB0dXJlcy5sZW5ndGg7CiAgICB2YXIgc3ltYm9scyA9IFNVQlNUSVRVVElPTl9TWU1CT0xTX05PX05BTUVEOwoKICAgIGlmIChuYW1lZENhcHR1cmVzICE9PSB1bmRlZmluZWQpIHsKICAgICAgbmFtZWRDYXB0dXJlcyA9IHRvT2JqZWN0KG5hbWVkQ2FwdHVyZXMpOwogICAgICBzeW1ib2xzID0gU1VCU1RJVFVUSU9OX1NZTUJPTFM7CiAgICB9CgogICAgcmV0dXJuICRyZXBsYWNlLmNhbGwocmVwbGFjZW1lbnQsIHN5bWJvbHMsIGZ1bmN0aW9uIChtYXRjaCwgY2gpIHsKICAgICAgdmFyIGNhcHR1cmU7CgogICAgICBzd2l0Y2ggKGNoLmNoYXJBdCgwKSkgewogICAgICAgIGNhc2UgJyQnOgogICAgICAgICAgcmV0dXJuICckJzsKCiAgICAgICAgY2FzZSAnJic6CiAgICAgICAgICByZXR1cm4gbWF0Y2hlZDsKCiAgICAgICAgY2FzZSAnYCc6CiAgICAgICAgICByZXR1cm4gc3RyLnNsaWNlKDAsIHBvc2l0aW9uKTsKCiAgICAgICAgY2FzZSAiJyI6CiAgICAgICAgICByZXR1cm4gc3RyLnNsaWNlKHRhaWxQb3MpOwoKICAgICAgICBjYXNlICc8JzoKICAgICAgICAgIGNhcHR1cmUgPSBuYW1lZENhcHR1cmVzW2NoLnNsaWNlKDEsIC0xKV07CiAgICAgICAgICBicmVhazsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIC8vIFxkXGQ/CiAgICAgICAgICB2YXIgbiA9ICtjaDsKICAgICAgICAgIGlmIChuID09PSAwKSByZXR1cm4gbWF0Y2g7CgogICAgICAgICAgaWYgKG4gPiBtKSB7CiAgICAgICAgICAgIHZhciBmID0gZmxvb3IobiAvIDEwKTsKICAgICAgICAgICAgaWYgKGYgPT09IDApIHJldHVybiBtYXRjaDsKICAgICAgICAgICAgaWYgKGYgPD0gbSkgcmV0dXJuIGNhcHR1cmVzW2YgLSAxXSA9PT0gdW5kZWZpbmVkID8gY2guY2hhckF0KDEpIDogY2FwdHVyZXNbZiAtIDFdICsgY2guY2hhckF0KDEpOwogICAgICAgICAgICByZXR1cm4gbWF0Y2g7CiAgICAgICAgICB9CgogICAgICAgICAgY2FwdHVyZSA9IGNhcHR1cmVzW24gLSAxXTsKICAgICAgfQoKICAgICAgcmV0dXJuIGNhcHR1cmUgPT09IHVuZGVmaW5lZCA/ICcnIDogY2FwdHVyZTsKICAgIH0pOwogIH0KfSk7"},{"version":3,"sources":["C:\\mine\\搭webpack环境\\so\\node_modules\\@babel\\polyfill\\node_modules\\core-js\\modules\\es6.regexp.replace.js"],"names":["anObject","require","toObject","toLength","toInteger","advanceStringIndex","regExpExec","max","Math","min","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","it","String","O","defined","fn","searchValue","$replace","res","maybeCallNative","rx","S","functionalReplace","replaceValue","global","fullUnicode","results","result","matchStr","accumulatedResult","nextSourcePosition","i","matched","position","captures","j","namedCaptures","replacerArgs","replacement","getSubstitution","tailPos","m","symbols","ch","str","capture","n","f"],"mappings":"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","sourcesContent":["'use strict';\n\nvar anObject = require('./_an-object');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n"]}]}