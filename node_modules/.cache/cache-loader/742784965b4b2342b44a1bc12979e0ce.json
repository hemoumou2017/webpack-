{"remainingRequest":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js!C:\\mine\\搭webpack环境\\so\\node_modules\\events\\events.js","dependencies":[{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\events\\events.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\mine\\搭webpack环境\\so\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\mine\\搭webpack环境\\so\\node_modules\\events\\events.js"],"names":["R","ReflectApply","Function","ReflectOwnKeys","Object","console","NumberIsNaN","Number","value","EventEmitter","module","defaultMaxListeners","enumerable","get","set","arg","n","that","$getMaxListeners","args","i","arguments","doError","type","events","er","err","handler","len","listeners","arrayClone","target","listener","existing","prepend","m","w","String","ProcessEmitWarning","_addListener","state","fired","wrapFn","wrapped","onceWrapper","_onceWrap","list","position","originalListener","spliceOne","keys","key","evlistener","unwrap","unwrapListeners","_listeners","emitter","listenerCount","copy","arr","index","ret"],"mappings":"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","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n"]}]}